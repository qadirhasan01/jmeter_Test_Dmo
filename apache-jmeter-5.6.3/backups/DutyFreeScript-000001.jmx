<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding">UTF-8</stringProp>
        <stringProp name="filename">C:/Users/PC/Desktop/AIRPORT_Code.csv</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">P_Airport_Code,P_Airport_Name</stringProp>
      </CSVDataSet>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="MobileNo" elementType="Argument">
            <stringProp name="Argument.name">MobileNo</stringProp>
            <stringProp name="Argument.value">7618831881</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="EmailID" elementType="Argument">
            <stringProp name="Argument.name">EmailID</stringProp>
            <stringProp name="Argument.value">abcd@gmail.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="customerName" elementType="Argument">
            <stringProp name="Argument.name">customerName</stringProp>
            <stringProp name="Argument.value">QADIRUL HASAN</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="passportNumber" elementType="Argument">
            <stringProp name="Argument.name">passportNumber</stringProp>
            <stringProp name="Argument.value">3456754WY7865</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="customerDOB" elementType="Argument">
            <stringProp name="Argument.name">customerDOB</stringProp>
            <stringProp name="Argument.value">07/02/1968</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pickupDate" elementType="Argument">
            <stringProp name="Argument.name">pickupDate</stringProp>
            <stringProp name="Argument.value">10/02/2025</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PickupTime" elementType="Argument">
            <stringProp name="Argument.name">PickupTime</stringProp>
            <stringProp name="Argument.value">20:00</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Brandname" elementType="Argument">
            <stringProp name="Argument.name">Brandname</stringProp>
            <stringProp name="Argument.value">Calvin Klein CK Be EDT 100ml Spray</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="false">
        <boolProp name="clearEachIteration">false</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="false">
        <collectionProp name="UserParameters.names">
          <stringProp name="-672596509">mobileno</stringProp>
          <stringProp name="2019261947">passportNumber</stringProp>
        </collectionProp>
        <collectionProp name="UserParameters.thread_values">
          <collectionProp name="-1532411026">
            <stringProp name="1536038137">${__Random(9000000000,9999999999,)}</stringProp>
            <stringProp name="-1605781684">${__RandomString(9,asdfghjklmnbvcxzqwertyuio9876543210,)}</stringProp>
          </collectionProp>
        </collectionProp>
        <boolProp name="UserParameters.per_iteration">false</boolProp>
      </UserParameters>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="mobileno" enabled="false">
        <stringProp name="maximumValue">9999999999</stringProp>
        <stringProp name="minimumValue">1000000000</stringProp>
        <stringProp name="outputFormat"></stringProp>
        <boolProp name="perThread">true</boolProp>
        <stringProp name="randomSeed"></stringProp>
        <stringProp name="variableName">mobileno</stringProp>
      </RandomVariableConfig>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Normal_User" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T1_Launch" enabled="false">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-90 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/sitecore/content/AirportHome/FlightSearch/AdaniAirportList</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">{B5AC63B3-9934-4423-8FF9-F619303AC8DF}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">6dffda4d-022b-4c8b-a4bd-0c9edb2f5b2e</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-66 /FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1pzGYazkrEcEY/QnNbb2hwcAY/Oh/wyfHRlM0I" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1pzGYazkrEcEY/QnNbb2hwcAY/Oh/wyfHRlM0I</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;sensor_data&quot;:&quot;3;0;1;0;3228741;PmwpWWDGwKeYURU87vOh/hSJqy0RDaViqIoiKkE6oUU=;79,168,0,1,31,130;\&quot;|a@;%lB~H]fOyE1o#p!{\&quot;y\&quot;&gt;H[\&quot;PSv/xLN5*Yh9\&quot;$`VI\&quot;w\&quot;VVKkAX`0ufCGDMkj-nfM|I@(dT!$4e&lt;iUs[JMnz}voxVXZVPB04 a@E\&quot;u\&quot;]gi\&quot;TI3GHqn\&quot;|A&lt;\&quot;3s!4[3$s}} }*^X~\&quot;TvH\&quot;QGkz5@sk\&quot;$~]\&quot;u(Yiy03#v! xCy=bs\&quot;)9:W\&quot;T\&quot;\&quot;D\&quot;?bA\&quot;mzJc9\&quot;mu&lt;\&quot;$\&quot;\&quot;D\&quot; G&gt;\&quot;RGov&lt;H_\&quot;Gp0m` )&gt;##(798Gn[fWHfeLl64i}hj}N&amp;Tqa;S@|ff%zzDHenzIS%oc^ntN|Kmz/p!=kXu?*y&gt;n[^4N+4e{zBpc DU6S&gt;hO{HQLST jQq26`oBh\&quot;!N.\&quot;J|)\&quot;o(^`J-Ba?T%v\&quot;2f!f\&quot;_%=h?q$&lt;\&quot;*g;\&quot;:Q~\&quot;f\&quot;\&quot;r\&quot;j$E\&quot;;N\&quot;,|C\&quot;axQQ/.5!1lFD^}\&quot; D&gt;\&quot;Gwm%aQvK\&quot;&amp; \&quot;;\&quot;7o@ 8]azP4RR&amp;[H.*ahL4]:&gt;[B(:Jm7qV\&quot;Y\&quot;&gt;f(\&quot;G\&quot;M$j4(k#:a.Ws_4ybHj&amp;qr^}C~-U0?M]wPZo55LqfeLk\&quot;|DJ\&quot;+9]\&quot;.n?C!f7Sv(\&quot;j*8\&quot;.\&quot;y.#)$sc=c+ux9N8iZ?.lV;y4TOCo2tZhcle!l}RQg:98Tq]6/xkLI w3U\&quot;S\&quot;*%m\&quot;?\&quot;\&quot;`\&quot;O/2\&quot;MJM})}U\&quot;+| z\&quot;u)fhe:PX=\&quot;&lt;T\&quot;J\&quot;W@CtK6N%W9}+$ycuUG$URY7jles|?Gq~ U]MbdJ+ON8Zu2x!d[^&lt;AV%b8=e`6Mp0z{R&gt;z.;+&gt;oz+LZh[&lt;Z*^wLT5I5Gr&gt;7*&gt;x,0vPi$[5dVtm|^iQQ1qC/2v-4v(za&lt;JmqM&lt;%HV=#1~&lt;2%BeOtDXw&lt;2w/5b)[{[r&gt;HoH`C`TDku7B[j.5&lt;2o2gLOesB1+? m\&quot;\&quot;d\&quot;,X{\&quot;581ge\&quot;/Tox\&quot;)CtvN%+\&quot;pX5n\&quot;9\&quot;9m[7Y(|dts!T5Yf.PF~OF&amp;=7A6F)qms0gcZ.dfcQ5Z)!Cp&amp;uts&lt;P!WL;)TJP?wR|\&quot;/x!l\&quot;$^zVt\&quot; dj\&quot;#%n\&quot;~}PO&gt;A\&quot;\&quot;X\&quot;a$a\&quot;Bm[eO*6\&quot;7n5j(V`\&quot;zGhuExhI5}$VTw@QW\&quot;p{3\&quot;K\&quot;V\&quot;]AO\&quot; $w\&quot;ON*G$C\&quot;@Z1B@\&quot;k2x\&quot;btQh}\&quot;@fFs;\&quot;`F5M\&quot;n?&lt;+{zj\&quot;N$m\&quot;bS0YW\&quot;RI9\&quot;pP!Er.&amp;q!X2\&quot;e&lt;\&quot;qqbKw&lt;\&quot;qfn!A#NI+uSC{f\&quot;%%|\&quot;SDu\&quot;M\&quot;KcMe\&quot;!\&quot;UUW\&quot;b\&quot;vtVL\&quot;ua:\&quot;u`r\&quot;4x`mi!l.$\&quot;uW%\&quot;|\&quot;\&quot;X&amp;9\&quot;jiC\&quot;S1Wolfp\&quot;ORwqqt !_ =W38=MyIb 3 XXVU43$X}ll&lt;x{z?D:&amp;jh}\&quot;V\&quot;xUH\&quot;gUcNeI.m4\&quot;&gt;$fUv\&quot;E\&quot;U*&amp;BJ`!ajzeWAs1.\&quot;d\&quot;90|\&quot;9H(nlq 8_\&quot;}6fn\&quot;x\&quot;\&quot;%\&quot;(,w\&quot;Pj]z`\&quot;6n\&quot;z\&quot;;NQq\&quot;Y\&quot;07u\&quot;K+z8S#}o\&quot; zA\&quot;0{rW6\&quot;vm;\&quot;,\&quot;r&gt;g?Z/&gt;E@0WqaFYZnyDIqr(ecsA73AX4LwS(M~4FH=l-$lv/LI$6WjoY`&amp;UCHYvYlK&amp;f6s|?93i..x&lt;Gp Jh5DaFD~JHDk&amp;g6uP-eAa} /[&amp;/0@X-?x4jp5+1`95Ir3|E)bZ0o-U`tKu(+Ob0S0E|:bZYJ%4/c,qM7zpE)^*8K fyt9Z2TGd@[+(:u^pqMxi;:|)eFxKbiXCN`%E)Q&lt;gIqBF^6&amp;8R,dT06u~cY)^#:(cy&amp;]#lI)bKx8XmaMgxZ:/n#kzWU5y L&gt;,K\&quot;4\&quot;{jF\&quot;K`E+ZBb\&quot;wc=?7`\&quot;\&quot;8&lt;n\&quot;`3;\&quot;h\&quot;U(yPG6{S\&quot;L\&quot;L;g\&quot;&gt;Jl\&quot;aQzi\&quot;s\&quot;\&quot;P\&quot;zOv\&quot;U\&quot;*{h\&quot;|s&amp;\&quot;D?k\&quot;[\&quot;&gt;+PNfRhUG\&quot;,D,\&quot;{e?\&quot;L\&quot;()\&quot;Ks5\&quot;;_2(\&quot;UHeP`hI\&quot;~V\&quot;u7R\&quot;]628\&quot;R\&quot;0+([irswEVnRFHww6%1^_q%MVh4_6_3f,DSG-p){`zz=I}}O\&quot;TkA\&quot;#-i\&quot;pPdSdZlU\&quot;ma\&quot;C!H]Y\&quot;s:J\&quot;h\&quot;Vk&lt;)n\&quot;\&quot;22w\&quot;#3D\&quot;sfH8Gi8$!\&quot;QO5B\&quot;Xs$aSp$LpdY\&quot;imE\&quot;kbi|bb\&quot;fU_B7X9z.IFK7RAmYr-&lt;kY`&amp;5!XfL9S#m1#3dS^+4]Z&gt;X ;69UD)MC-W/%0xZRSQ\&quot;`($\&quot;wS,\&quot;h0CTAE)$-{&gt;?o P,1IRq\&quot;6\&quot;N4r\&quot;0S3X5Om\&quot;;&lt;LuRC&lt;da6_$D~;\&quot;A\&quot;Z&gt;=\&quot;/\&quot;\&quot;L\&quot;XWv\&quot;LqjUY463QM6P\&quot;,m0\&quot;yqLhpqm]b\&quot;wXM\&quot;Id-| Vjmj\&quot;5h8\&quot;l\&quot;\&quot;n|w\&quot;3OE\&quot;#YD:z`P6\&quot;.)M\&quot;:\&quot;K~7tD0QJ\&quot;{8;\&quot;Q[|\&quot;QFstP\&quot;(}o\&quot;s$l*6bLuI-g\&quot;x(\&quot;G\&quot;B-DYAigKXOQ22\&quot;C\&quot;ePD\&quot;Ak-%P\&quot;n`%\&quot;@HC6R d@9*4~6(&amp;XJU5|h4I1bO++cQ$],&lt;85e eEP=IH\&quot;P\&quot;sb&amp;\&quot;u\&quot;\&quot;A4]\&quot;%!u\&quot;i=Xi**XqrW^&gt;_[\&quot;^iK\&quot;52P\&quot;q.q\&quot;{XP1@$y\&quot;\&quot;_\&quot;}8M\&quot;i\&quot;s\&quot;,-&lt;\&quot; Fj\&quot;Ol7eZE:p\&quot;X80^73GqQ\&quot;0RF\&quot;jr3\&quot;]\&quot;@KJP6PbwC(lJYg-U!&gt;iXqZkBXS_}*GX{!]75#j9)&amp; W\&quot;VRC\&quot;RUh\&quot;Y\&quot;N\&quot;nRO\&quot;|D7\&quot;^@ReN$vx \&quot;,2%%\&quot;&gt;n)zrM.\&quot;N\&quot; Jk\&quot;G&gt;Q\&quot;F\&quot;\&quot;c\&quot;3t5\&quot;2\&quot;|}&lt;N1\&quot;=;p\&quot;pFl\&quot;,\&quot;{\&quot;E`:\&quot;@iF\&quot;uio.;\&quot;]Qq\&quot;j\&quot;\&quot;@\&quot;*%\&quot;V}G^L-\&quot;D\&quot;zYv\&quot;4M`\&quot;Y{}.19bxc\&quot;hZ-\&quot;B\&quot;A\&quot;B?H\&quot;[|\&quot;&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-51 /FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1pzGYazkrEcEY/QnNbb2hwcAY/Oh/wyfHRlM0I" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1pzGYazkrEcEY/QnNbb2hwcAY/Oh/wyfHRlM0I</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;sensor_data&quot;:&quot;3;0;1;2048;3228741;PmwpWWDGwKeYURU87vOh/hSJqy0RDaViqIoiKkE6oUU=;147,0,0,1,63,0;%\&quot;@lt\&quot;m\&quot;=|B?tAWFT;&gt;C:ME,oKB2E+&lt;GU7HN;=5&amp;kb[M/)$c- pm\&quot;y\&quot;Z[E\&quot;k`U2L\&quot;lXI\&quot;m\&quot;\&quot;+\&quot;iUf\&quot;;\&quot;q*&amp;\&quot;G\&quot;LRZ\&quot;&gt;rmd-Xy\&quot;N\&quot;E?2\&quot;X,Z\&quot;@\&quot;\&quot;&gt;\&quot;&amp;0^\&quot;HKKN&gt;\&quot;Q[q7\&quot;-\&quot;.KTVd\&quot;L/Z\&quot;kA)\&quot;Pib1&gt;\&quot;c.t\&quot;}\&quot;\&quot;#\&quot;fvj\&quot;2F;:6&amp;\&quot;#=n=\&quot;^SnX4=yR\&quot;\&quot;{\&quot;yLP\&quot;@&gt;/jqCix[g6\&quot;)7\&quot;&gt;H7oz\&quot;I,Hn\&quot;M5}|;r)\&quot;$F\&quot;^h{\&quot;iC;V\&quot;2\&quot;=\&quot;g\&quot;?N-\&quot;P\&quot;mQIe:tmps6:bq\&quot;5\&quot;nW~\&quot;hZcL+!YeZb\&quot;&gt;RS\&quot;CgN4HD\&quot;o.Un\&quot;[\&quot;mA0SF\&quot;B0C\&quot;@!e\&quot;j*$&amp;Nur`\&quot;q;O\&quot;l\&quot;0S\&quot;9\&quot;r%s\&quot;1b{s4\&quot;En\&quot;4*+Ex#($+U X}PO9hyJL\&quot;Q\&quot;!_D\&quot;#\&quot;H*Qsy2aI\&quot;7Zk\&quot;W)R\&quot;c\&quot;\&quot;+\&quot;z69\&quot;[c_\&quot;~r]J\&quot;kcvH&lt;EVt-Gj}D&amp;:dk{Y@ZV.`&lt;-t\&quot;&gt;1p\&quot;C\&quot;hE\&quot;9\&quot;DtT\&quot;5^6\&quot;ut6\&quot;*6?n0S3;*,bc-Vt)\&quot;Gb0\&quot;5G6\&quot;P&amp;N\&quot;k\&quot;\&quot;Y\&quot;aI\&quot;G3/Z1xrIu#1YBk~R#Y9*\&quot;Bg\&quot;&amp;:  2\&quot;4V\&quot; ,tWeJ&gt;F^vue\&quot;1{G\&quot;D*\&quot;E5g\&quot;8!!\&quot;@~[lPfV\&quot;Cb@\&quot;u:-3F\&quot;@m\&quot;)lRU%f3B\&quot;AZ9\&quot;4\&quot;\&quot;AMQ\&quot;C@!\&quot;MK&lt;r&amp;\&quot;BUI\&quot;C\&quot;\&quot;g\&quot;4A&lt;\&quot;k\&quot;\&quot;U\&quot;aU)\&quot;`@2;@\&quot;~R2\&quot;)\&quot;|yhw[5%V[U&lt;kr]o#9Gu$ ~xQ&gt;HN&amp;[O&lt;@2z}AMNZ7?V0*ON`h37,CYVR5DiyS.1&amp;&lt;e{NkQR%pwcM3qb+/T RPk8mQ1=FAodw6Nee~qyY.I3shmoy(Eb5@ S%n^(Q/9ie{}7n0 4gYp9)y{R9]/`4qBKoJKr)ycop1:Xj(Gh[Lm^XOgtM^MqJcFRdl]{Bnkl uxPR(0@!}H{nh*-h*\&quot;$eB\&quot;T\&quot;n[1Z\&quot;8`X\&quot;0Rp\&quot;p3 s8x`\&quot;l5|\&quot;O\&quot;\&quot;8\&quot;lGE\&quot;8ab4X8XmK[\&quot;3Z@L\&quot;*\&quot;\&quot;4d?\&quot;]/o\&quot;W\&quot;\&quot;;\&quot;y9W\&quot;3\&quot;y\&quot;e.U\&quot;z~%\&quot;pty?zaA4_8tTWFs\&quot;D::\&quot;8H~&lt;6^6UtN`VP\&quot;\&quot;-mQ\&quot;jSg\&quot;U\&quot;PSlW=MNyA+Y;pK\&quot;(B=\&quot;r}%\&quot;l\&quot;q#dbIf+j[ukz+1o8}I?iFs;\&quot;UJ1G\&quot;n\&quot;\&quot; \&quot;aO&gt;\&quot;M&amp;=`N0YW\&quot;`2{\&quot;p\&quot;G6&gt;q2\&quot;!X2\&quot;ZLX?r\&quot;pH4Wyiik:i\&quot;,hK\&quot;Iz[]7+;L^f.\&quot;)9.C\&quot;i=!2W%s!S4\&quot;U.2k\&quot;oMg7-8d-|`me~ 3:E*+C{nyBqW9&lt;$.ebN,`23;g=+s,1\&quot;H\&quot;?PD\&quot;8\&quot;Fx H&gt;|}lJ&lt;yv=nHoIBy_|@EZ&gt;*k@|=EN8ewn5J3G&lt;E4BzlxU\&quot;/}k\&quot;}}B\&quot;RWlY`:\&quot; +k\&quot;eDIIO\&quot;G@@u\&quot;9K$Yf_\&quot; L^*2fm\&quot;x\&quot;n+\&quot;&lt;G/\&quot;&amp;B@d\&quot;%\&quot;;\&quot;`$*XUl{9U]`+gB4\&quot;\&quot;O\&quot;]b[\&quot;A\&quot;\&quot; \&quot;X&gt;2\&quot;=\&quot;}Yl4P~9B^*;;3V2U4!;5_&gt;h?pl#iiddtnBW4&lt;fX0BpA-%x;XV;4]0L)=ZbodL{i`js,JY._Gg]4xglJ+z*n~Lc~k1G^H?zFJAXD/fL4j_Db+x0[\&quot;y()\&quot;d%]\&quot;l\&quot;\&quot;+\&quot;?|{\&quot;y+sE-PZr\&quot;s-4\&quot;S\&quot;$\&quot;8%!\&quot;nR\&quot;DbGY3\&quot;uzh\&quot;x\&quot;j[EykX^pzZAoQl/n\&quot;8\&quot;u8m\&quot;CxfmeD^\&quot;)ve\&quot;dM SgmG=8\&quot;d%c B\&quot;Rn&amp;AH\&quot;cq:e\&quot;X\&quot;\&quot;p\&quot;I.k\&quot;!9}P]^f c(m1SsCF`E\&quot;AY\&quot;C4i`GHfO.IXT5!*9kaH-pPHNE=\&quot;V.[\&quot;)\&quot;24-.&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-59 /akam/13/pixel_51e350d1" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/akam/13/pixel_51e350d1</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ap" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ap</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="bt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">bt</stringProp>
                    <stringProp name="Argument.value">{&quot;charging&quot;:true,&quot;chargingTime&quot;:0,&quot;dischargingTime&quot;:&quot;Infinity&quot;,&quot;level&quot;:1,&quot;onchargingchange&quot;:null,&quot;onchargingtimechange&quot;:null,&quot;ondischargingtimechange&quot;:null,&quot;onlevelchange&quot;:null}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fonts" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fonts</stringProp>
                    <stringProp name="Argument.value">null</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fh" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fh</stringProp>
                    <stringProp name="Argument.value">null</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="timing" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">timing</stringProp>
                    <stringProp name="Argument.value">{&quot;1&quot;:79,&quot;2&quot;:188,&quot;3&quot;:328,&quot;4&quot;:600,&quot;profile&quot;:{&quot;bp&quot;:2,&quot;sr&quot;:8,&quot;dp&quot;:3,&quot;lt&quot;:0,&quot;ps&quot;:2,&quot;cv&quot;:34,&quot;fp&quot;:0,&quot;sp&quot;:0,&quot;br&quot;:1,&quot;ieps&quot;:0,&quot;av&quot;:0,&quot;z1&quot;:22,&quot;jsv&quot;:1,&quot;nav&quot;:0,&quot;nap&quot;:3,&quot;crc&quot;:1,&quot;z2&quot;:1,&quot;z3&quot;:1,&quot;z4&quot;:0},&quot;main&quot;:8122,&quot;compute&quot;:79,&quot;send&quot;:600}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="bp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">bp</stringProp>
                    <stringProp name="Argument.value">2087755996,1953464915,591862434,325835597,1068473606,-1382186647,-365096851,-1979186206,-108039040,-1906852049</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sr" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sr</stringProp>
                    <stringProp name="Argument.value">{&quot;inner&quot;:[1280,585],&quot;outer&quot;:[1280,672],&quot;screen&quot;:[0,0],&quot;pageOffset&quot;:[0,0],&quot;avail&quot;:[1280,672],&quot;size&quot;:[1280,720],&quot;client&quot;:[1263,5636],&quot;colorDepth&quot;:24,&quot;pixelDepth&quot;:24}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dp</stringProp>
                    <stringProp name="Argument.value">{&quot;XDomainRequest&quot;:0,&quot;createPopup&quot;:0,&quot;removeEventListener&quot;:1,&quot;globalStorage&quot;:0,&quot;openDatabase&quot;:0,&quot;indexedDB&quot;:1,&quot;attachEvent&quot;:0,&quot;ActiveXObject&quot;:0,&quot;dispatchEvent&quot;:1,&quot;addBehavior&quot;:0,&quot;addEventListener&quot;:1,&quot;detachEvent&quot;:0,&quot;fireEvent&quot;:0,&quot;MutationObserver&quot;:1,&quot;HTMLMenuItemElement&quot;:0,&quot;Int8Array&quot;:1,&quot;postMessage&quot;:1,&quot;querySelector&quot;:1,&quot;getElementsByClassName&quot;:1,&quot;images&quot;:1,&quot;compatMode&quot;:&quot;CSS1Compat&quot;,&quot;documentMode&quot;:0,&quot;all&quot;:1,&quot;now&quot;:1,&quot;contextMenu&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">lt</stringProp>
                    <stringProp name="Argument.value">1738745198426+5.5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ps" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ps</stringProp>
                    <stringProp name="Argument.value">true,true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="cv" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cv</stringProp>
                    <stringProp name="Argument.value">3f2ba45eea7a02b4fa8b1380f69df572c6ddc28c</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fp</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sp</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="br" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">br</stringProp>
                    <stringProp name="Argument.value">Chrome</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ieps" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ieps</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="av" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">av</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="z" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">z</stringProp>
                    <stringProp name="Argument.value">{&quot;a&quot;:1373852002,&quot;b&quot;:1,&quot;c&quot;:1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="zh" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">zh</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="jsv" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">jsv</stringProp>
                    <stringProp name="Argument.value">1.5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="nav" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">nav</stringProp>
                    <stringProp name="Argument.value">{&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36&quot;,&quot;appName&quot;:&quot;Netscape&quot;,&quot;appCodeName&quot;:&quot;Mozilla&quot;,&quot;appVersion&quot;:&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36&quot;,&quot;appMinorVersion&quot;:0,&quot;product&quot;:&quot;Gecko&quot;,&quot;productSub&quot;:&quot;20030107&quot;,&quot;vendor&quot;:&quot;Google Inc.&quot;,&quot;vendorSub&quot;:&quot;&quot;,&quot;buildID&quot;:0,&quot;platform&quot;:&quot;Win32&quot;,&quot;oscpu&quot;:0,&quot;hardwareConcurrency&quot;:4,&quot;language&quot;:&quot;en-US&quot;,&quot;languages&quot;:[&quot;en-US&quot;],&quot;systemLanguage&quot;:0,&quot;userLanguage&quot;:0,&quot;doNotTrack&quot;:null,&quot;msDoNotTrack&quot;:0,&quot;cookieEnabled&quot;:true,&quot;geolocation&quot;:1,&quot;vibrate&quot;:1,&quot;maxTouchPoints&quot;:0,&quot;webdriver&quot;:false,&quot;plugins&quot;:[&quot;PDF Viewer&quot;,&quot;Chrome PDF Viewer&quot;,&quot;Chromium PDF Viewer&quot;,&quot;Microsoft Edge PDF Viewer&quot;,&quot;WebKit built-in PDF&quot;]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="crc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">crc</stringProp>
                    <stringProp name="Argument.value">{&quot;window.chrome&quot;:{&quot;app&quot;:{&quot;isInstalled&quot;:false,&quot;InstallState&quot;:{&quot;DISABLED&quot;:&quot;disabled&quot;,&quot;INSTALLED&quot;:&quot;installed&quot;,&quot;NOT_INSTALLED&quot;:&quot;not_installed&quot;},&quot;RunningState&quot;:{&quot;CANNOT_RUN&quot;:&quot;cannot_run&quot;,&quot;READY_TO_RUN&quot;:&quot;ready_to_run&quot;,&quot;RUNNING&quot;:&quot;running&quot;}}}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="t" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">t</stringProp>
                    <stringProp name="Argument.value">4a3d7ded883b4bc009031833655fe81a75d47032</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="u" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">u</stringProp>
                    <stringProp name="Argument.value">7138950595d65ec7bf5b2fd9b1ad12e9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="nap" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nap</stringProp>
                    <stringProp name="Argument.value">11311144241322244122</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-87 /home/_next/static/chunks/4949.f594a1d4cc6104b0.js" enabled="false">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/home/_next/static/chunks/4949.f594a1d4cc6104b0.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-20 /FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1pzGYazkrEcEY/QnNbb2hwcAY/Oh/wyfHRlM0I" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1pzGYazkrEcEY/QnNbb2hwcAY/Oh/wyfHRlM0I</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-41 /FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1zi/Ykk-b2hwcAY/bE/dvcE13SRUq" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1zi/Ykk-b2hwcAY/bE/dvcE13SRUq</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-3 /static-assets/js/common.js" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/static-assets/js/common.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-85 /home/_next/static/chunks/1016.223fb5f4a2464b28.js" enabled="false">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/home/_next/static/chunks/1016.223fb5f4a2464b28.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-2 /" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-71 /-/media/Project/Campaigns/Valentine-s-Day/Dark-Icon/web-Icon/federal.png" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Campaigns/Valentine-s-Day/Dark-Icon/web-Icon/federal.png</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T2_Click_ON_Login" enabled="false">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-148 /login" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/login</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-156 /FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1pzGYazkrEcEY/QnNbb2hwcAY/Oh/wyfHRlM0I" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1pzGYazkrEcEY/QnNbb2hwcAY/Oh/wyfHRlM0I</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-188 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/CountrySelected</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">{B5AC63B3-9934-4423-8FF9-F619303AC8DF}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">cmn</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-195 /manifest.json" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/manifest.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-199 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/sitecore/content/AirportHome/FlightSearch/Other-Airport-App/FooterData</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">{B5AC63B3-9934-4423-8FF9-F619303AC8DF}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">cmn</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T3_Enter_Number_And_Validate" enabled="false">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,271 /akam/13/51e350d1" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/akam/13/51e350d1</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,274 /flight/statics/fonts/fontello/fontello.woff2" enabled="false">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/flight/statics/fonts/fontello/fontello.woff2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="_v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_v</stringProp>
                    <stringProp name="Argument.value">960412</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://assets.adanione.com/flight/statics/css/cdn/bundles/libs/default/updated-wm.css?_v=undefined</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">font</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,273 /flight/statics/fonts/fontello/fontello.woff2" enabled="false">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/flight/statics/fonts/fontello/fontello.woff2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="_v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_v</stringProp>
                    <stringProp name="Argument.value">96041</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://assets.adanione.com/flight/statics/css/cdn/bundles/libs/default/updated-wm.css?_v=undefined</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">font</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,244 /api/identityproviderv2/api/v2/AuthenticateApiv2/SendOtp?ref=web&amp;org=shared" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/SendOtp?ref=web&amp;org=shared</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;PhoneNumber&quot;:&quot;7618831881&quot;,&quot;CountryCode&quot;:&quot;91&quot;,&quot;isWhatsapp&quot;:false,&quot;ResendOtp&quot;:false,&quot;isPrivacyAndTcConsent&quot;:true,&quot;isGDPRConsent&quot;:false,&quot;CountryISOCode&quot;:&quot;IND&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/login</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="audience" elementType="Header">
                    <stringProp name="Header.name">audience</stringProp>
                    <stringProp name="Header.value">https://localhost:7137</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="ContentType" elementType="Header">
                    <stringProp name="Header.name">ContentType</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="source" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="RegexExtractor.refname">source</stringProp>
                <stringProp name="RegexExtractor.regex">SOURCE:\s+(.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NF</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,277 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscription-key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">subscription-key</stringProp>
                    <stringProp name="Argument.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="customer" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">customer</stringProp>
                    <stringProp name="Argument.value">aHPRLeQ+kafL/0by6p8CppUD9h2WM0HH2Ddeso9dKIY0N8xdjPAOcjMAfck0lTlD9/sS1xev9JkiqkMGNgu8HQuG7/9Wi2kWh62nQuloAGfkiLcQ6N2E7JsCs5GBmnL785wNHxDkkal8DiriiICcpRjTm6sBz7AneJ2fVwGv8FG9BKN2jQD9vi3A3Eu8tsYAiAOivJYI5sM0MDPfQ02B19QLIXHzQMM49SHKy971BF1QorfoQhjV7Fl3TNGl04BRQBY2veZqWT5iKBGgcye782C+ZVvFW1tOHZKrZeCI/EJzeHYZMAGGYAWdEgZEKW+Pmt+pnhXkLIZZ7qNg3Hlfsg==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,270 /flight/statics/css/cdn/bundles/verticals/booking/default/widgets/be/base.css" enabled="false">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/flight/statics/css/cdn/bundles/verticals/booking/default/widgets/be/base.css</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="_v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_v</stringProp>
                    <stringProp name="Argument.value">u2jGL08rgvcss</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">style</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,258 /api/identityproviderv2/api/v2/AuthenticateApiv2/ValidateOtpV3?ref=web&amp;org=shared" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/ValidateOtpV3?ref=web&amp;org=shared</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Source&quot;:&quot;${source}&quot;,&quot;OtpCode&quot;:&quot;759236c20bf06ca967d40cbb51575446486693f1330f13f76850db1e55442590&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/login</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="audience" elementType="Header">
                    <stringProp name="Header.name">audience</stringProp>
                    <stringProp name="Header.value">https://localhost:7137</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="ContentType" elementType="Header">
                    <stringProp name="Header.name">ContentType</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BearerToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">BearerToken</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;accessToken&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NF</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,268 /flight/statics/js/cdn/bundles/libs/core.js" enabled="false">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/flight/statics/js/cdn/bundles/libs/core.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="_v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_v</stringProp>
                    <stringProp name="Argument.value">undefined</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,276 /api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceid" elementType="Header">
                    <stringProp name="Header.name">traceid</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="audience" elementType="Header">
                    <stringProp name="Header.name">audience</stringProp>
                    <stringProp name="Header.value">https://localhost:7137</stringProp>
                  </elementProp>
                  <elementProp name="clientid" elementType="Header">
                    <stringProp name="Header.name">clientid</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="ocp-apim-subscription-key" elementType="Header">
                    <stringProp name="Header.name">ocp-apim-subscription-key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="channelid" elementType="Header">
                    <stringProp name="Header.name">channelid</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,259 /api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">shared</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/login</stringProp>
                  </elementProp>
                  <elementProp name="audience" elementType="Header">
                    <stringProp name="Header.name">audience</stringProp>
                    <stringProp name="Header.value">https://localhost:7137</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="ContentType" elementType="Header">
                    <stringProp name="Header.name">ContentType</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,275 /manifest.json" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/manifest.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,281 /api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">cmn</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,269 /flight/statics/css/cdn/bundles/libs/default/updated-wm.css" enabled="false">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/flight/statics/css/cdn/bundles/libs/default/updated-wm.css</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="_v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_v</stringProp>
                    <stringProp name="Argument.value">undefined</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">style</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
              <collectionProp name="AuthManager.auth_list">
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/identityproviderv2/api/v2/AuthenticateApiv2/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/authenticatorv2/api/MyBooking/getActiveCart/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/lending/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/authenticatorv2/api/User/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/loyaltyv2/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/flight-tracker/api/saveflight/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/dutyfreeservicev2/api/DutyFree/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://android.clients.google.com/c2dm/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/loyaltyv2/point/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/dutyfreeservicev2/api/DutyFreeV2/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/dutyfreeservicev2/api/DutyFree/validateCart/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/commonservicev2/api/Whatsapp/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/paymentv2/emi/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
              </collectionProp>
              <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
            </AuthManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,278 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,283 /api/lending/profile" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/lending/profile</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,284 /api/authenticatorv2/api/User/GetLatestLobDetails" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/User/GetLatestLobDetails</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="CustomerId" elementType="Header">
                    <stringProp name="Header.name">CustomerId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,285 /flight/statics/js/cdn/bundles/libs/core.js" enabled="true">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/flight/statics/js/cdn/bundles/libs/core.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="_v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_v</stringProp>
                    <stringProp name="Argument.value">u2jGL08rgv</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,288 /flight/statics/js/cdn/bundles/widgets/booking/be/base.js" enabled="false">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/flight/statics/js/cdn/bundles/widgets/booking/be/base.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="_v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_v</stringProp>
                    <stringProp name="Argument.value">u2jGL08rgv</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,282 /api/loyaltyv2/point" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/loyaltyv2/point</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="balanceTypes" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">balanceTypes</stringProp>
                    <stringProp name="Argument.value">available</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,287 /api/flight-tracker/api/saveflight/list" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/flight-tracker/api/saveflight/list</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,290 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/AirlineList</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fields" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fields</stringProp>
                    <stringProp name="Argument.value">all</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">B5AC63B3-9934-4423-8FF9-F619303AC8DF</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">cmn</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,293 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/AppAirportList</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">B5AC63B3-9934-4423-8FF9-F619303AC8DF</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">cmn</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T4_ClickON_Duty_Free" enabled="true">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,336 /services/duty-free" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/services/duty-free</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BuildID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">BuildID</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;buildId\\&quot;:\\&quot;(.+?)\\&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NF</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                <stringProp name="RegexExtractor.match_number">0</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,311 /api/flight-tracker/api/saveflight/list" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/flight-tracker/api/saveflight/list</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,344 /pranaam-services/widget/core.js" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/pranaam-services/widget/core.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">08022025</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/services/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,360 /static-assets/js/common.js" enabled="true">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/static-assets/js/common.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,402 /pranaam-services/widget/core.js" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/pranaam-services/widget/core.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">10022025</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/services/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,373 /seopages/_next/static/media/web-icons.33531d45.woff2" enabled="false">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/seopages/_next/static/media/web-icons.33531d45.woff2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://assets.adanione.com/seopages/_next/static/css/80850981fc65d3ab.css</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">font</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,404 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/services/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">974172ec5d004bd3bb75487ca400f97b</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,405 /api/loyaltyv2/point" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/loyaltyv2/point</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="balanceTypes" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">balanceTypes</stringProp>
                    <stringProp name="Argument.value">available</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/services/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">974172ec5d004bd3bb75487ca400f97b</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,408 /pranaam-services/api/widget" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/pranaam-services/api/widget</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;originUrl&quot;:&quot;https://www.adanione.com&quot;,&quot;shouldCache&quot;:true,&quot;container&quot;:&quot;pranaamPorterWidget&quot;,&quot;name&quot;:&quot;porter&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/services/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,407 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscription-key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">subscription-key</stringProp>
                    <stringProp name="Argument.value">974172ec5d004bd3bb75487ca400f97b</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="customer" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">customer</stringProp>
                    <stringProp name="Argument.value">QyAoKLhqVnls9qrrHHqD9zXiOEMOawoUJU8Jh+m8M/g2x96I3W/3UCkJkkWPsr+8LShrlHQs7zLEd3+ui3YMRmQIPBVhmccHwUKSMg8pLeCwQTTQux/B5CdKhKn/O8XWJaUvn1jrQmmFg1Ea3Oei0Q1YQerKAumEJvdUiYIaETuOwScyoMi6km3jUxtffbzadQS80XHM+vE7WGi9u2X1i7uB/fjWXt80r3jHJFPj93hDXcKCZn+MZgqhCRJvZY2P0MLr69ENY4z63mtMSzxvarg0wccP9EE75TooXYePzwlCn4pdQirOR7oe7l8QsgAmWfVH4tJzz0wnsj11rVQuNw==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/services/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,406 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscription-key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">subscription-key</stringProp>
                    <stringProp name="Argument.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="customer" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">customer</stringProp>
                    <stringProp name="Argument.value">k0FGClhvGZOiJ78fjUVSn1t52DcM+dNi2J0aW0HjYc2wK2W+gu0yrEFM9qQALxF1CYSLk85CECAqYpKQEZAKgcjS+x4WfOgvTLI3K1qSG8ScC8z9lH4Nc9ARHdf6fPqWDe36qf0buwpyfktuIUQK0KXLHxsygpf27wfIq7t2YUTwgeJFh1VTFha4/FMM2YG6tJaOSd90uo1H1XJetmq0ghkrWyn8I7sOmP9mF0P64NXSgcWQ6tTAJc645z9ZX7jFrcpI0P9xin10TpO37/MX92XpWeSA6qMzgvFSv4g2CVOn2xs4WF8TEbIOSUPqxcDqMLHhggETA+v+mliQ7HqfuQ==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/services/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T5_Select_Airport" enabled="true">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,442 /svpia-ahmedabad-airport/duty-free" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/${P_Airport_Name}/duty-free</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/services/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">departure,arrival</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String[] params = Parameters.split(&quot;,&quot;);
Random random = new Random();
String randomValue = params[random.nextInt(params.length)];
vars.put(&quot;C_storeType&quot;, randomValue);</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BuildID" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">BuildID</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;buildId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NF</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,475 /dutyfree/_next/static/media/web-icons.33531d45.woff2" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/dutyfree/_next/static/media/web-icons.33531d45.woff2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sa.adanione.com/dutyfree/_next/static/css/9971b759f8c2ab5c.css</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">font</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,476 /dutyfree/_next/static/media/lg-font.b6f57442.woff2" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/dutyfree/_next/static/media/lg-font.b6f57442.woff2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sa.adanione.com/dutyfree/_next/static/css/9971b759f8c2ab5c.css</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">font</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,536 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,538 /api/loyaltyv2/point" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/loyaltyv2/point</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="balanceTypes" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">balanceTypes</stringProp>
                    <stringProp name="Argument.value">available</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,540 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="language" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">language</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="airportCode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">airportCode</stringProp>
                    <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">df</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,537 /api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">cmn</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,541 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/sitecore/content/AirportHome/FlightSearch/AdaniAirportList</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">{B5AC63B3-9934-4423-8FF9-F619303AC8DF}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">df</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,543 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscription-key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">subscription-key</stringProp>
                    <stringProp name="Argument.value">974172ec5d004bd3bb75487ca400f97b</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="customer" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">customer</stringProp>
                    <stringProp name="Argument.value">QyAoKLhqVnls9qrrHHqD9zXiOEMOawoUJU8Jh+m8M/g2x96I3W/3UCkJkkWPsr+8LShrlHQs7zLEd3+ui3YMRmQIPBVhmccHwUKSMg8pLeCwQTTQux/B5CdKhKn/O8XWJaUvn1jrQmmFg1Ea3Oei0Q1YQerKAumEJvdUiYIaETuOwScyoMi6km3jUxtffbzadQS80XHM+vE7WGi9u2X1i7uB/fjWXt80r3jHJFPj93hDXcKCZn+MZgqhCRJvZY2P0MLr69ENY4z63mtMSzxvarg0wccP9EE75TooXYePzwlCn4pdQirOR7oe7l8QsgAmWfVH4tJzz0wnsj11rVQuNw==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,546 /manifest.json" enabled="false">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/manifest.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,545 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/sitecore/content/AirportHome/Cobrand/Co-Branding</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">{B5AC63B3-9934-4423-8FF9-F619303AC8DF}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lob" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lob</stringProp>
                    <stringProp name="Argument.value">dutyfree</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">cmn</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,548 /-/media/Project/Campaigns/Icici-co-brand/Icons-and-Illustrations---Touch-Points-Co-Branded/Both-card.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Campaigns/Icici-co-brand/Icons-and-Illustrations---Touch-Points-Co-Branded/Both-card.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,539 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/sitecore/content/airporthome/DutyFreeAirports/Ahmedabad/Dutyfree-Navigation</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">{B5AC63B3-9934-4423-8FF9-F619303AC8DF}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_storetype" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_storetype</stringProp>
                    <stringProp name="Argument.value">${C_storeType}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_airport" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_airport</stringProp>
                    <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_restricted" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_restricted</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_tobacco_restricted" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_tobacco_restricted</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">df</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T6_Select_T2_Departure_And_Age_Confirm" enabled="true">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,585 /svpia-ahmedabad-airport/duty-free" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/${P_Airport_Name}/duty-free</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="location" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">location</stringProp>
                    <stringProp name="Argument.value">${C_storeType}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BuildID" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">BuildID</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;buildId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NF</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">departure,arrival</stringProp>
                <stringProp name="script">String[] params = Parameters.split(&quot;,&quot;);
Random random = new Random();
String randomValue = params[random.nextInt(params.length)];
vars.put(&quot;C_storeType&quot;, randomValue);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,610 /dutyfree/_next/static/media/web-icons.120e32b4.woff2" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/dutyfree/_next/static/media/web-icons.120e32b4.woff2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sa.adanione.com/dutyfree/_next/static/css/e672250710567c59.css</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">font</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,614 /api/loyaltyv2/point" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/loyaltyv2/point</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="balanceTypes" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">balanceTypes</stringProp>
                    <stringProp name="Argument.value">available</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,613 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,616 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="language" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">language</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="airportCode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">airportCode</stringProp>
                    <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">df</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,623 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscription-key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">subscription-key</stringProp>
                    <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="customer" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">customer</stringProp>
                    <stringProp name="Argument.value">RnuhG6NcRneW/nBlx1xUL1zn9/VjWB7JUz3Z7yp1lNnJLE3eq1g5+R76DI2ZJexthP4T5/UdcJuxEc7xy3PN1spydH3tG+M49wcABpqV3X7fn5FJhVI3dKWPoK7Ff4ay46c4WA6ZA6uN0Tz4Q174PQrikSa/V/kIjl0Ho0TPMU136lvFPrjtqWUYllbBYy7an4eGMvWWjKD2rnwRrvRR/mGRyqVXKOQ1q1kVn5dHjG1qHb4PPdt1w30Wmehp5Ac/UwlH7LQVcifhZIV7kwL2gpAfI8uhMg+5LIBi2qCN6YRBB7qcTSwKXiOaD2KzovzCk4uo9ZWbUylJeYiSeT2iSQ==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,627 /manifest.json" enabled="false">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/manifest.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,615 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/sitecore/content/airporthome/DutyFreeAirports/Ahmedabad/Dutyfree-Navigation</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">{B5AC63B3-9934-4423-8FF9-F619303AC8DF}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_storetype" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_storetype</stringProp>
                    <stringProp name="Argument.value">${C_storeType}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_airport" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_airport</stringProp>
                    <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_restricted" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_restricted</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_tobacco_restricted" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_tobacco_restricted</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">df</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random_Product_Selector" enabled="true">
            <intProp name="InterleaveControl.style">1</intProp>
          </RandomController>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="click_on_Product_liquar" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T7_Click_Product_Liquar" enabled="true">
                <boolProp name="TransactionController.parent">true</boolProp>
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,650 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/liquor.json" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/liquor.json</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="location" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">location</stringProp>
                        <stringProp name="Argument.value">${C_storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airport" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airport</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="x-nextjs-data" elementType="Header">
                        <stringProp name="Header.name">x-nextjs-data</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Product_Name" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">Product_Name</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;productName&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">No_Value_Found</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SKU_CODE" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">SKU_CODE</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;skuCode&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NO_VALUE_FOUND</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SRC" enabled="false">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">SRC</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;src&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">No_Value_Found</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="StoreType" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">storeType</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;storeType&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NO_VALUE_fOUND</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="storecode" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">storecode</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;storeCode&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NF</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="price" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">price</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;price&quot;:(.+?),&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NF</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,657 /-/media/Foundation/Adani/Dutyfree/ProductImages/liquor/rum/amrut/02G01177/1_02G01177" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/liquor/rum/amrut/${SKU_CODE}/1_${SKU_CODE}</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,658 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Whisky/02N02009/1_TFG-2020-FINEST-1LTR-NEW-CAP-BOTTLE-CARTON-TRANSPARENT-BKGRD" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Whisky/02N02009/1_TFG-2020-FINEST-1LTR-NEW-CAP-BOTTLE-CARTON-TRANSPARENT-BKGRD</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,659 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Whisky/FamousGrouse/02N02382/1_Dig_flat_Sherry-Cask-Finish-bottle-packshot-1L02N02382" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Whisky/FamousGrouse/02N02382/1_Dig_flat_Sherry-Cask-Finish-bottle-packshot-1L02N02382</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,660 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Whisky/02N03325/02N03325" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Whisky/02N03325/02N03325</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,662 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="language" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">language</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/liquor?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,661 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">header</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/liquor?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">Web</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer ${Bearer_Token}</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,663 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/liquor?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,665 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="subscription-key" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">subscription-key</stringProp>
                        <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="customer" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">customer</stringProp>
                        <stringProp name="Argument.value">Bl6XjMA47HV7s5rhwVSylh1hRWLUK709HV1L1XahePhTmo/84MzQLoLTm9FI8Awzhg3SzcdgPVp4MPD5UDDVFN9rkSX/3YlO1dPIXNerCYH9OBWC783KqOuwIJSgrbqCHGkd+gZwK/dxnPA3AsZVbJwHnYf1YdAM7sJToCIWjtqUl225rfdy3ibd3acQUGqXupcLKt7yB4coAPOixc0+ucuZqkrcv9MjpmDlTLBpWVDR3SJuahzMWCGk1FGLETR0NRskaJGTRqnHdFuUxXOD99vw/OMlefgHOAkOnZiE1+7woPBbqorOpFOXWuIomufHorTtmFGuHgbWDm2LhznP/g==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/liquor?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,671 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Vodka/02F01145/02F01145" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Vodka/02F01145/02F01145</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,672 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01003/02E01003%20BOMBAY%20SAPPHIRE%20100%20CL" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01003/02E01003%20BOMBAY%20SAPPHIRE%20100%20CL</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,674 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01062/1_02E01062%20TANQUERAY%20SEVILLE%20100%20CL" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01062/1_02E01062%20TANQUERAY%20SEVILLE%20100%20CL</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,673 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Cognac/02C01004/02C01004" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Cognac/02C01004/02C01004</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T8_Click_ON_Liquar_Product_amrut-two-indies-rum-75cl " enabled="true">
                <boolProp name="TransactionController.parent">true</boolProp>
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,681 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/p/amrut-two-indies-rum-75cl/02G01177.json" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}.json</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="location" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">location</stringProp>
                        <stringProp name="Argument.value">${C_storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airport" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airport</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/liquor?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="x-nextjs-data" elementType="Header">
                        <stringProp name="Header.name">x-nextjs-data</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="src" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">src</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&quot;productImages&quot;:[&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot;]</stringProp>
                    <stringProp name="BoundaryExtractor.default">NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,688 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">header</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">Web</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,693 /-/media/Project/SVG%20image/Axixbanklogo" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Axixbanklogo</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,691 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="language" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">language</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,696 /-/media/Project/SVG-image/IDBI" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG-image/IDBI</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,695 /-/media/Project/SVG%20image/DBS-logo" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/DBS-logo</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,692 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,694 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="subscription-key" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">subscription-key</stringProp>
                        <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="customer" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">customer</stringProp>
                        <stringProp name="Argument.value">W1FbF/oaSnxhs5il0/rYg/y8L3gUTcLN3k2KSq019hWkTPCp5BJJhWHXx8DPH02jO/R9ogQx9gQ0NbOgFUoNwC10mjqVkVJcfj+lpc1O4LbBPySreBA50cDB5ixZsnxymxbjq1jsx5eXAF54iwu03kqoGCDaqW2DIyNagWZ65EQge/JEWBl6mlOVnlaWGniLMKfi1QSNcUXY06giqVYeaomOZLziZPDYrKRS0GK2pVraFXW1FNCcKaMecEhSIYAXz4xWBmyVfa/pBnkf0JUggRDALe12yELf8n1UBbqJeulhp1iTi2C5p1JbtKi8wvhutqjBYpkLxo1C2Cg0hNzghQ==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,698 /-/media/Project/SVG%20image/Federal" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Federal</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,697 /-/media/Project/SVG%20image/HSBC" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/HSBC</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,699 /-/media/Project/SVG%20image/Canara%20bank-1" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Canara%20bank-1</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,700 /-/media/Project/SVG%20image/mobikwik" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/mobikwik</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,689 /api/loyaltyv2/point/earning?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/loyaltyv2/point/earning?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;businessSubType&quot;:&quot;DutyFree&quot;,&quot;nonLoyaltyPaymentAmount&quot;:1800,&quot;saleItems&quot;:[{&quot;productCode&quot;:&quot;${SKU_CODE}&quot;,&quot;quantity&quot;:1,&quot;unitPrice&quot;:1800,&quot;taxableUnitPrice&quot;:1800}]}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,703 /static-assets/images/svg/coin.svg" enabled="true">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/static-assets/images/svg/coin.svg</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,690 /api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,704 /api/dutyfreeservicev2/api/DutyFree/GetPriceComparision" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetPriceComparision</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="skuCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">skuCode</stringProp>
                        <stringProp name="Argument.value">${SKU_CODE}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="storeType" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">storeType</stringProp>
                        <stringProp name="Argument.value">${C_storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,705 /-/media/Project/Campaigns/Valentine-s-Day/Duty-Free/1st-CVP/Offer---Filled-3.svg" enabled="true">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/Campaigns/Valentine-s-Day/Duty-Free/1st-CVP/Offer---Filled-3.svg</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Click_ON_Product_Beauty" enabled="false"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ClickON_Product_carollena " enabled="true">
                <boolProp name="TransactionController.parent">true</boolProp>
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-740 /dutyfree/_next/data/ZGlizHSpcbK4Lxzl9nUEz/svpia-ahmedabad-airport/duty-free/beauty.json" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/beauty.json</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="location" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">location</stringProp>
                        <stringProp name="Argument.value">${C_storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airport" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airport</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="x-nextjs-data" elementType="Header">
                        <stringProp name="Header.name">x-nextjs-data</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Product_Name" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">Product_Name</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;productName&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">No_Value_Found</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">2</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SKU_CODE" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">SKU_CODE</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;skuCode&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NO_VALUE_FOUND</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">2</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SRC" enabled="false">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">SRC</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;src&quot;:&quot;(.+?)/06C01231/06C01231&quot;,</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">No_Value_Found</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">2</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="StoreType" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">storeType</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;storeType&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NO_VALUE_fOUND</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-754 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">header</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/beauty?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">Web</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer ${Bearer_Token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-757 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/beauty?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer ${Bearer_Token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-755 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="language" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">language</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/beauty?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer ${Bearer_Token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-759 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="subscription-key" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">subscription-key</stringProp>
                        <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="customer" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">customer</stringProp>
                        <stringProp name="Argument.value">qDk8d3nqE1w9S5RpVuaw1q6Fmm0HNcwLeql5L+hgpowt8ycS9Le7DKh5QF1kTZqHSvD+LICwTuWfytmPjC6MfCR3b2w/SsfB3dSDXOgzpqILGFoI85PEQmDkOVaDMcqLALAqwSVBEqpxuBMswcykSeHPNA9Wn3rfivCyRteukCz2zDERhRAnygAPCHMb85ghn50q8SwI8f/Db986hJmidcxiRhISJ9BNIJI2VsHKY8EItEJ8j+2yhsF22cDn86Yv5TZ66UwpFf+64/4Kat6are0YdawEQxdPVFGyoVcKMYOctmOMAmsvr0m5EOatgwIEg4GwHbW2CPU5HO2yFjOF4Q==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/beauty?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transaction Controller" enabled="true">
                <boolProp name="TransactionController.parent">true</boolProp>
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-798 /dutyfree/_next/data/ZGlizHSpcbK4Lxzl9nUEz/svpia-ahmedabad-airport/duty-free/p/calvin-klein-ck-be-edt-100ml-spray/06C01231.json" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}.json</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="location" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">location</stringProp>
                        <stringProp name="Argument.value">${C_storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airport" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airport</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/beauty?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="x-nextjs-data" elementType="Header">
                        <stringProp name="Header.name">x-nextjs-data</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-814 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="language" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">language</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer ${Bearer_Token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-818 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="subscription-key" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">subscription-key</stringProp>
                        <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="customer" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">customer</stringProp>
                        <stringProp name="Argument.value">Ts3Dd5wB2ylvJbp3vtMJ/2c/EWD3y9VZM1UGvVgrhe4t5EHNveN+1iqhbVOCLdZO/fHoL2Ddl15cu/taCy3D+QhrTNo+CPuFOGZScWqavtvJRJEHw5sKF20ECGJ0nNv16BUc5I3cs7Ms6ncCDoSGY9EbMXjqPMBbHoyjk9CM9cMC3eBnwdEGCpRx0xTZtJanXIAfAIhhVbLXoQmCYahhuvGb9mICjo3MabtlhLPJo1U5oCmU2G8f8WUJYWSH9TA+QnKGLevOGJcRxa8rQDrBBWGFOHCjfL66wyMDYjC9YgfAXN1BTAvhWeT9I7gtFMsfMHMOtwzcgcqLBFAGJSYe1Q==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-819 /-/media/Project/SVG%20image/Axixbanklogo" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Axixbanklogo</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-822 /-/media/Project/SVG%20image/DBS-logo" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/DBS-logo</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-825 /-/media/Project/SVG%20image/AU-Bank-3x" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/AU-Bank-3x</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-827 /-/media/Project/SVG-image/IDBI" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG-image/IDBI</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-828 /-/media/Project/SVG%20image/HSBC" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/HSBC</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-816 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer ${Bearer_Token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-830 /-/media/Project/SVG%20image/Federal" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Federal</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-813 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">header</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">Web</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer ${Bearer_Token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-831 /-/media/Project/SVG%20image/Canara%20bank-1" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Canara%20bank-1</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-833 /-/media/Project/SVG%20image/mobikwik" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/mobikwik</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-815 /api/loyaltyv2/point/earning?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/loyaltyv2/point/earning?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;businessSubType&quot;:&quot;DutyFree&quot;,&quot;nonLoyaltyPaymentAmount&quot;:3200,&quot;saleItems&quot;:[{&quot;productCode&quot;:&quot;${SKU_CODE}&quot;,&quot;quantity&quot;:1,&quot;unitPrice&quot;:3200,&quot;taxableUnitPrice&quot;:3200}]}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-836 /api/dutyfreeservicev2/api/DutyFree/GetPriceComparision" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetPriceComparision</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="skuCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">skuCode</stringProp>
                        <stringProp name="Argument.value">${SKU_CODE}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="storeType" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">storeType</stringProp>
                        <stringProp name="Argument.value">${storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer ${Bearer_Token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-817 /api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ClickON_Product_Confentionary" enabled="false"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ClickON_Product_Confentionary" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree/>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Click_ON_Product_Butlers_Mixed" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller_Departure" enabled="false">
            <stringProp name="IfController.condition">&quot;${C_storeType}&quot;==&quot;departure&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">true</boolProp>
            <boolProp name="IfController.useExpression">false</boolProp>
          </IfController>
          <hashTree>
            <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
              <intProp name="InterleaveControl.style">1</intProp>
            </RandomController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Cart" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Add_To_Cart" enabled="true">
                  <boolProp name="TransactionController.parent">true</boolProp>
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                </TransactionController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,707 /8NOD/G6ny/ww/0kDk/azIQ/pEurGJh9bYmciD/SnYEAg/W0lzVi/VHcDU" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                    <stringProp name="HTTPSampler.path">/8NOD/G6ny/ww/0kDk/azIQ/pEurGJh9bYmciD/SnYEAg/W0lzVi/VHcDU</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;sensor_data&quot;:&quot;3;0;1;0;3294520;eJuRaXhSX6t5P1V/nc686Pfwx29VatKYm+eR69kgARU=;114,2,0,1,13,242;\&quot;a~^]Z\&quot;mXO^V5E~5bGQalYF+c]k[!=  iqEJ`aWn&gt;LoM2n^GVg.\&quot;G\&quot;j*m\&quot;rkq-C\&quot;yp9\&quot;h3wq!O`Q@PLoQcH\&quot;rLl\&quot;4\&quot;\&quot;d\&quot;{C\&quot;^\&quot;\&quot;,\&quot;VK[\&quot;#\&quot;\&quot;;PN\&quot;]zV\&quot;kUevl&gt;\&quot;Rc4V\&quot;w\&quot;{+8(p-L4v%|9=_^74 +i3bX5ySX7Z:U-BndmC+&amp;2W6gQ3(\&quot;9UJ\&quot;zDZ\&quot;#\&quot;qUdAzsgKHnl%4M@5\&quot;k\&quot;#Sk\&quot;]fW?$IPkQ\&quot;$Q9\&quot;r&lt;X!/\&quot;sR)q\&quot;KPe0Q\&quot;%(K\&quot;d\&quot;aY^.A{QCoR|f|\&quot;7Hn\&quot;1{D\&quot;K\&quot;D\&quot;|7M\&quot;1c5\&quot;|Aaub3|;jLf+4/\&quot;@I3\&quot;Bswfv\&quot;`r\&quot;U\&quot;ESe5[j0udC\&quot;_ b]\&quot;|S]3hS\&quot;|hQTd\&quot;l4c\&quot;TF#\&quot;o\&quot;6-\&quot;GTr\&quot;CT&gt;&amp;\&quot;d:[5eT~XoAE\&quot;2z &gt;\&quot;ybN)rE\&quot;\&quot;D\&quot;mEv\&quot;D\&quot;-O5jX d7gv6*o,@4sUKPGD-~bCb~pg!7gG\&quot;Y\&quot;d^+\&quot;?VNx&gt;_l\&quot;\&quot;0\&quot;|r!\&quot;|ejE.\&quot;/A\&quot;&amp;oF6dFS\&quot;\&quot;l\&quot;H^;\&quot;+&amp;y`gom9|e[.8Yu4`SQ93uTG.Y\&quot;\&quot;x\&quot;BG%\&quot;[gllu{\&quot;Kg=K8q?\&quot;-\&quot;i\&quot;AV(\&quot;}dH\&quot;]! Sni\&quot;y0FD\&quot;e,mrr?R^5\&quot;hs\&quot;=ugk&gt;^+S#tfaIX\&quot;y64\&quot;oYM\&quot;q\&quot;\&quot;R#IaZYiH/sA\&quot;K}i\&quot;3\&quot;`L^3&lt;\&quot;ZuG\&quot;*.q\&quot;vG\&quot;ORY\&quot;|iJYkY\&quot;q{%NZiuGqSMA/u.K0Y_Vls&amp;.6=)mZz,ofwi4pi*Kd/#f]AZcQn~,/Bnm=^k%w5[CC&gt;{Y#$6|!Hs&amp;bJ4(vQZO$.;V/?]D5LyoWvCw?vKfqAM^YhW6-)=RyM8]{v(E&lt;c,&amp;{8Q$X.&amp;{P!Ce#!H*ol~ [l;Hv$A/1k;=71U,_p&lt;pT \&quot;de!\&quot;6\&quot;\&quot;&lt;\&quot;Pn&lt;\&quot;eo$nf.&gt;?Gj|f,\&quot;P*b\&quot;:kbuL%5}Ud&gt;^,X,/cO\&quot;*`r\&quot;o1gO1\&quot;T$+@\&quot;N\&quot;\&quot;o\&quot;V$J\&quot;lub\&quot;E`q\&quot;-l!4g)(eYA&gt;vb/Xnx\&quot;+:S\&quot;dBVJs\&quot;hCD\&quot;cEMg&lt;\&quot;&gt;,O\&quot;D\&quot;?+S~l\&quot;x@?\&quot;&amp;~H32\&quot;Dq  oZ(pZ2={0sl%Z9{V^K;U^ZdS8&amp;T?iB`Fnq@[6#}$kspn%1/Di.a9 oEIy)ME{qf3~~LpwIR?as{&lt;MP?kL0/P bHnHC++aBda% Ww|ilfq\&quot;V\&quot;Bw$\&quot;H9/FnA`X/&gt;2,sVxHMI)VKQ}!7B /:+zK020^5#kbUbS[=:a/3DrKS=Zd+0IXj_c/b&amp;~g7)kur}xth\&quot;(\&quot;AbH\&quot;J\&quot;\&quot;S\&quot;jBI\&quot;+0kL`^?j\&quot;@[H\&quot;-[o\&quot;/g(9\&quot;3\&quot;0KX&amp;\&quot;bw(\&quot;2fT\&quot;L\&quot;][Yggz(96,oSh\&quot;j\&quot;AIj\&quot;+8gWP]ZB$VmZ4D|98,# *&amp;\&quot;El%\&quot;)&lt;La-P\&quot;BZ3\&quot;lXKLpOlwte%=p.+}V&amp;6c[LLd/\&quot;r:,\&quot;K\&quot;`a\&quot;hE,\&quot;{r9S\&quot;]\&quot;\&quot;/\&quot;VyH\&quot;lv#cr\&quot;~d7Y\&quot;fPAy8\&quot;w}\&quot;4\&quot;\&quot;!\&quot;:F:\&quot;9\&quot;\&quot;M%3\&quot;!$9\&quot;)`c8&amp;\&quot;Px&amp;!\&quot;pEX6S)zD5\&quot;YAF;#\&quot;6\&quot;kgd|h.Ev&amp;[431&amp;J#&gt;$[}L7Glg4DO.0P:773l?[HST,-rn0GtL$97V=IX=p%:Z/8t|`XrWiCZe^q&gt;My:6[hVI_;5v[=VlIsgNP-eVOnjnH=$&gt;I%O\&quot;F=b\&quot;iFE\&quot;$gzk!WN,32/~yIy&gt;X\&quot;yBY$\&quot;n;%aK\&quot;GY{\&quot;)\&quot;\&quot;/wc\&quot;NA]\&quot;k\&quot;%Gpc\&quot;v\&quot;Jt$\&quot;zQ@z[k1zu8\&quot;(v!\&quot;PG&lt;E7\&quot;V*\&quot;nb &gt;t\&quot;&gt;j$\&quot;~\&quot;BV~(\&quot;G\&quot;5-7\&quot;v\&quot;\&quot;cVj\&quot;gf\&quot;q/O\&quot;WEK\&quot;ME}Ku9vlF~fE`R\&quot;W})\&quot;P\&quot;r9IT}L?vwp!]gN8gOPK2`_Qif-9[[zebF~\&quot;3\&quot;%i[\&quot;)\&quot;#&amp;pikD`7gFR-AFcDJUya5V(JH]!}k}xohtO$N-H`?!he-&amp;.t8X&amp;mN~j\&quot;1\&quot;+=*\&quot;p\&quot;\&quot;(\&quot;k1!\&quot;!gLWD $\&quot;p1\&quot;@=C9t\&quot;D$ov\&quot;H\&quot;\&quot;`\&quot;eT4\&quot;r\&quot;\&quot;g\&quot;a L\&quot;w&gt;S`6\&quot;rc-\&quot;cHK+E):DO7|\&quot;Rq38x4B!\&quot;j4r\&quot;_W&amp;\&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,708 /api/dutyfreeservicev2/api/DutyFree/AddCartV5?language=en&amp;airportCode=AMD&amp;ref=web&amp;org=df" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/AddCartV5?language=en&amp;airportCode=${P_Airport_Code}&amp;ref=web&amp;org=df</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;quantity&quot;:1,&quot;skuCode&quot;:&quot;${SKU_CODE}&quot;,&quot;productImage&quot;:&quot;${src}&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;storeType&quot;:&quot;${C_storeType}&quot;,&quot;IsAgeConsent&quot;:true,&quot;IsSmokingConsent&quot;:true}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,710 /dutyfree/audio/add_cart.mp3" enabled="false">
                    <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/audio/add_cart.mp3</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-site</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Range" elementType="Header">
                          <stringProp name="Header.name">Range</stringProp>
                          <stringProp name="Header.value">bytes=0-</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">identity;q=1, *;q=0</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">audio</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,709 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="ref" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">ref</stringProp>
                          <stringProp name="Argument.value">web</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="org" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">org</stringProp>
                          <stringProp name="Argument.value">header</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">Web</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,715 /api/loyaltyv2/point/earning?ref=web&amp;org=df" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/api/loyaltyv2/point/earning?ref=web&amp;org=df</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;businessSubType&quot;:&quot;DutyFree&quot;,&quot;nonLoyaltyPaymentAmount&quot;:1800,&quot;saleItems&quot;:[{&quot;productCode&quot;:&quot;${SKU_CODE}&quot;,&quot;quantity&quot;:1,&quot;unitPrice&quot;:1800,&quot;taxableUnitPrice&quot;:1800}]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Go_TO_Cart" enabled="true">
                  <boolProp name="TransactionController.parent">true</boolProp>
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                </TransactionController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,719 /8NOD/G6ny/ww/0kDk/azIQ/pEurGJh9bYmciD/SnYEAg/W0lzVi/VHcDU" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                    <stringProp name="HTTPSampler.path">/8NOD/G6ny/ww/0kDk/azIQ/pEurGJh9bYmciD/SnYEAg/W0lzVi/VHcDU</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;sensor_data&quot;:&quot;3;0;1;0;3294520;eJuRaXhSX6t5P1V/nc686Pfwx29VatKYm+eR69kgARU=;88,2,0,3,19,242;\&quot;a~^]Z\&quot;mXO^V5E~5bGQalYF+c]k[!=  iqEJ`aWn&gt;LoM2n^GVg.\&quot;G\&quot;j*m\&quot;rkq-C\&quot;yp9\&quot;h3wq!O`Q@PLoQcH\&quot;rLl\&quot;4\&quot;\&quot;d\&quot;{C\&quot;^\&quot;$,;vg{8sSRGQbmt8*\&quot;]\&quot;EnT\&quot;s\&quot;/I}\&quot;]$8\&quot;A6l\&quot;xdAOHgdr!:\&quot;2^hs\&quot;Z\&quot;y/-rasbkCU^TBd8!T{gBV3-E0Wy2= Mrc8R0C7K.Frs)`H\&quot;XP_\&quot;v0Q\&quot;X\&quot;&lt;=%X(BsCH#RZe9qI\&quot;=\&quot;uK%\&quot;/AG`5f&amp;vA\&quot;19e\&quot;f^*&gt;~M*g&gt;\&quot;4X+%\&quot;-NFFS\&quot;z6)\&quot;9\&quot;`[V4bmuCiE|_&gt;\&quot;RFS\&quot;prd\&quot;j\&quot;%\&quot;c%W\&quot;CPp\&quot;U&amp;gBh*Vj7*hE/j\&quot;_hv\&quot;^cL&amp;7\&quot;.]\&quot;G\&quot;Oc|WAttL$iO)(q\&quot;;[:=\&quot;pDU0u]\&quot;30sn4\&quot;Gf;\&quot;93r\&quot;l\&quot;O6\&quot;ev6\&quot;y1xl\&quot;X0Y@qa&amp;m&amp;gg\&quot;pZ[!\&quot;rUK*%R\&quot;\&quot;^\&quot;=gJ\&quot;,\&quot;g8%_L3}D&amp;2WN7^zbSB09@9:2rawJ&lt;/PhK(\&quot;F\&quot;[N0\&quot;Pp[Gh3D\&quot;&amp;y. =31wf+VNPq5vNL0.vkB*Pmr}FiiJMRm\&quot;x\&quot;mCN\&quot;nkT1G\&quot;`Z\&quot;vQV!Zr&amp;\&quot;\&quot;N\&quot;_;Z\&quot;&lt;ET3O&lt;;5fhFkIlGAuA4=ug#lx+\&quot;\&quot;)\&quot;b|/\&quot;6CL53Z\&quot;JB~T63?\&quot;d\&quot;a\&quot;/sA\&quot;J6]\&quot;3BJe&amp;C\&quot;RBb8\&quot;NTDsl_Vci\&quot;dG\&quot;X$4#nU($DC_squ\&quot;+Ay\&quot;e4*\&quot;g\&quot;\&quot;`Sz@7/tXb(a\&quot;P:x\&quot;4\&quot;*]%.H\&quot;3V_\&quot;,}!\&quot;kr\&quot;4t+\&quot;!5YykV\&quot;!C};q}5M}!k|F8t*/I[}{K@XA5Jwkn~#e Z+*aOM_aI?dUKMQQs&gt;N{!68Y&amp;y*{8Q2Jd&lt;+~Sj{m#IyczZf:G^#JDzw/n6D9_yFv#TGvPOlYS0at8uyRo]xnIkgj13;Bg-j&lt;*lO!4a;/P!y3~T^;[(Z!DcbkB)0&gt;m0s)%_UWJg!@F\&quot;]f+\&quot;k\&quot;dE{Pi4@K|r#9`3}]U=8sc9ln.xUepJ\&quot;&gt;\&quot;*f:\&quot;g_hA|2uS~mEI2\&quot;cV!\&quot;D_G4IZ+LCha9s8wp4s\&quot;orj\&quot;gC&gt;1$\&quot;e/&amp;6\&quot;m\&quot;\&quot;)\&quot;g[B\&quot;+:$\&quot;jzy\&quot;fz[BB&amp;@21+2[Pn#+l\&quot;&amp;eG\&quot;?,VW*\&quot;p90\&quot; /jaX\&quot;:Bx\&quot;y\&quot;`D`tC\&quot;hV&amp;\&quot;CS&lt;z)\&quot;0RN4_08UZTz|&lt;47@o?{8vElG)TdrmY@(H}!DQ24z*2@`Ym|t{!p_eau&amp;&gt;C9C4Wzx&gt;*jzE+!zNCgfDWk.9.d#&lt;_7*o!|STM;9eDK6&gt;u!l7&gt;tx8\&quot;*\&quot;o@-\&quot;xCxiQKx*|4%%Z4CVI+5(FpXnO]6EJ-v)D&amp;][Ygg|(C55rYl*rY_f3G*=t%QZ^LBUjU0P?WZ{):35&amp;\&quot;(\&quot;rWy\&quot;{\&quot;c)`qMRbSVn6ve{}(=iq/+&lt;}{8bOS`n=jCl@cB`e[MtP&gt;,9Cmn4Uu{&gt;ys7^hj{0o/x6(T|L`LRySI&gt;F^+7j*RW{hW0gf^,M!U=kU fvG?9{?I&lt;dk&gt;]1Tz0NJS&amp;Wc_!N2[I1|I(Rx~-f0B5^oJp?{A`r%!o?OK#:*_`6+jVt&gt;Rc&gt;&amp;3.MqHvQ|^lGM^2u*8t8{WX&gt;=wh6d~0lZc{E]HkVxfy]`}b6UnJxcSW?L&amp;z9)1J:+8G#I)_=wn$lp&amp;thz3$MS(2,4!lI4HvZDXvH!g=&lt;a_!^|0!(Dg@#qorcsieC*GxkP~9oJ=|lN:tUn2)zKsT/=:JLMQE1wDhje.C*k_5H{{Z?Zw!zLxiYNLmp#o.no3_]c0O;uneYDF#v.hltOxgQeaz+JNKG&gt;sDHW$NNx}o!]kQ?k@QQ7e_Uni&lt;&gt;^[~`gJx$3o?6{|!,y5qb3jv-pEOB^a1?`u6.5rH_rM&amp; p#i,(2 sP+Ai={}#AP)BnvB:F+e/7!^][^gmx3{+U?XyhAYV-Bo3Yl2&gt;]&gt;)4`A.9$BHjo .}`Gm,&amp;p{ MxFiBg3EO=*Nl^KOYl}&lt;Kp^v_Q|66t4&gt;~@|;!Ew C2/M|uago-8m(EMUQ?e:.!P[&lt;^AfTvVl/txP|w[n!Qg;I|t;)&amp;_-.uM_DrS*q;~@iXY&amp;hhbz,VpTi8Eagg&gt;qmo1YGqX3*aFp(2BoMOSp*RxVvKY1,6j?Zc*P2z^A*qS LNhK25-_yW{Q%RtA@L8z{0n5-ZXDB|]3Zq&amp;rLkk1X4n?#a*MXkA9?`Alc&gt;D.9ja5q3H)j!*n5wE,lS~C]tVPa}^5.m{kkTN.p)L4#J]=YJos?9d7TeSKm&lt;sMQCSJRD/|XwAD9]eDrs?: hK3CcPHr7*ju]jnwx|OGd7=4PnM%yddI&gt;kcuEA8m/( zs %7=L8|NpxrOjI&lt;8$&amp;ce?&amp;P&amp;)-R!qiw}:.YU_eT#PXY,_J1-v.mq]K YZf5g^Ukv;KlnwxjEz,7zAB{#o%} qeBl|(gFF5Tc)?dk||)`=R[Hmn[ldor*zuD,0H2msx9Ds*Pa}&amp;:rR~$g=&gt;3QOaesdlM-=]P,KRkyNd4Ru$+{X#9/m^m$%GCZKe=+Qg^HYb.LtBz@hu#q^)F0w&amp;,B&gt;sp78?2!JvbVZsGjCvMh?OmWRnG2!B;V[38ci qp#]IEpwTvf/q0iyA35l7,r5&gt;jyCa79TA?jE:@Z#R{g&gt;!M2HvpoM zg*+b&amp;Z}FGpmf@n{+EoG|h?,cLl3;&lt;}RSCv/R#_}Dj+*-jJLI*L4iW=:jP|DNUA$%,MbSkIlLt8EI*cw{W}wKI#+lW{Oan]ELP$:yJAfAV:;F4 0&gt; PEv{jeSKvPZ}sU^yJn[+t5!J&amp;7T=|&gt;fDpYIP?K&lt;.T?WvoYw Y,uN4zn-z#@% ?UL(xnllxeV&lt;1BxlYp4kA8weB4fJ^!wq&gt;aD)&amp;$,#@:9uX6TF?l2jPI&amp;o^I*p:^`K%U:z7+7CUQL@$`)6,YvrH?&amp;2xmU8g(%(d3~t+wKK[XhZL6Zc]:_R+6|~kyYLqL[`&gt;lrKkh8&gt;Zj{]mA!|8i4=yvnvo~i^+ek ^9)7PU|/RRxbuY+HQ!a]FNUlblfV%m|+z]`gl-Yi.Bjex^AQa&lt;)+s)4:MQEA*g{&gt;$ltr&lt;Z$H~9DabV7UoS)93[\&quot;h\&quot;feb\&quot;h{62lq&amp;C\&quot;sK \&quot;/`4\&quot;Y|R9\&quot;S\&quot;io4E\&quot;CgC\&quot;LfV\&quot;.\&quot;cx[{]~Vb(qi/R\&quot;;\&quot;/I[\&quot;f}(l*)DgS_{&gt;h(MrZT! H3\&quot;U$p\&quot;EFo%^n)5&gt;\&quot;%_*\&quot;D[~5a;F!Sl9?uw=^Fx18l|Br(\&quot;&lt;7P\&quot;{\&quot;yD\&quot;8wT\&quot;m5mA\&quot;5\&quot;\&quot;D\&quot;)Oc\&quot;{GU?I\&quot;d[Ft\&quot;Rt&lt;$N? o\&quot;}2\&quot;J\&quot;\&quot;Y\&quot;Pr#\&quot;W\&quot;\&quot;!Lf\&quot;YSx\&quot;tAfV0/iM:#\&quot;gq4t\&quot;9=Z.`(U;g\&quot;A]iHL\&quot;}\&quot;&gt;QI0w~[sK{1@1Ju)N!j146~pIW{]R`M7t:z}ZUcP(S/~j[vyX+ZHJ4&amp;M,&gt;aW.V:!hZF6pkaW40w[TOm;tg|j_:&amp;{Wp8,)EmZ70Vxty{{#u?l^P)\&quot;kT/\&quot;eM;\&quot;-5_;[2XI%&lt;5BL]BZ0\&quot;:pjh\&quot;%l52m\&quot;VS3\&quot;]\&quot;\&quot;tYq\&quot;&gt;Sg\&quot;J\&quot;T`W\&quot;s\&quot;33v\&quot;N.$w!kkB9U\&quot;m-e\&quot;bCa^$$3HN\&quot;1o\&quot;u}9z`\&quot;I,@\&quot;m\&quot;Bj@[\&quot;?\&quot;LPo\&quot;a\&quot;\&quot;-$D\&quot;rv\&quot;3kB\&quot;lfo\&quot;DH7pO}acQ95}NM\&quot;s@f\&quot;?\&quot;#nz;pSR@NKgh~zpV:OgQ.BA[uPiBOqx,ji\&quot;/\&quot;A3:\&quot;v\&quot;CRBW_T%g=9I1Yz=;E](+q1&amp;EXyRl^|.2&gt;VF(fQ#F:*%/YozoGtGLA}}\&quot;e\&quot;!@1\&quot;:\&quot;\&quot;/\&quot;$]k\&quot;|vh*!b$\&quot; T\&quot;&amp;1KL.\&quot;/yk}\&quot;!\&quot;\&quot;`\&quot;&amp;!t\&quot;u\&quot;\&quot;9\&quot;S)P\&quot;=):Z=\&quot;=Au\&quot;nhxk4yIh!|o\&quot;U+gqo/I&gt;\&quot;9}a\&quot;n%V\&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,720 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/checkout.json" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/checkout.json</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="airport" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">airport</stringProp>
                          <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="x-nextjs-data" elementType="Header">
                          <stringProp name="Header.name">x-nextjs-data</stringProp>
                          <stringProp name="Header.value">1</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,731 //-/media/Foundation/Adani/Dutyfree/ProductImages/liquor/rum/amrut/02G01177/1_02G01177" enabled="true">
                    <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">//-/media/Foundation/Adani/Dutyfree/ProductImages/liquor/rum/amrut/${SKU_CODE}/1_${SKU_CODE}</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-site</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,729 /dutyfree/api/offer/cart-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cart-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;AirportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;language&quot;:&quot;en&quot;,&quot;appType&quot;:&quot;web&quot;,&quot;LOB&quot;:&quot;dutyfree&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,732 /dutyfree/api/offer/cart-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cart-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;AirportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;language&quot;:&quot;en&quot;,&quot;appType&quot;:&quot;web&quot;,&quot;LOB&quot;:&quot;dutyfree&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,730 /dutyfree/api/offer/cvp-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cvp-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;airportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;offerUniqueID&quot;:&quot;dutyfree-cvpoffers-1&quot;,&quot;apptype&quot;:&quot;web&quot;,&quot;offerLOB&quot;:&quot;dutyfree&quot;,&quot;type&quot;:&quot;type2&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,733 /dutyfree/api/offer/cvp-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cvp-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;airportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;offerUniqueID&quot;:&quot;dutyfree-cvpoffers-1&quot;,&quot;apptype&quot;:&quot;web&quot;,&quot;offerLOB&quot;:&quot;dutyfree&quot;,&quot;type&quot;:&quot;type2&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,735 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subscription-key" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">subscription-key</stringProp>
                          <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="customer" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.name">customer</stringProp>
                          <stringProp name="Argument.value">miynyrg4y5QP72abo3fliOsrmOvF7qRMEYF6BkRD4aBjdvX54TaXMPiU12RYkbMGtimpkh9tB50kOPyWrN2TFi5ZaVDFCB6s/WdK+RvYQa8YrWm5hhq9+J1p5wC5UMJr82SeVzgP/yWD0KWbV4z2OXr3ZwJwWjcrEi2PXIdNZG2RD/kzeWVnhu1U128sNBwyc2m82RZ5PLv9++JXSbB3fbTsAM1W+DYR1wDAOYw9KoMigUh7FSFP1dZm7iWkGhZ0P8WAGxXpormnt6qnzQSQLApeoN1aD4By0xd4tZOJlbbvsj5UCcZ8QVf4gDvO9vxR4e/fERd4w5ywEhb4iGGDZA==</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,734 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="language" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">language</stringProp>
                          <stringProp name="Argument.value">en</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="airportCode" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">airportCode</stringProp>
                          <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="ref" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">ref</stringProp>
                          <stringProp name="Argument.value">web</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="org" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">org</stringProp>
                          <stringProp name="Argument.value">df</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="isCartPage" elementType="Header">
                          <stringProp name="Header.name">isCartPage</stringProp>
                          <stringProp name="Header.value">true</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,741 /dutyfree/api/offer/cart-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cart-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;AirportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;language&quot;:&quot;en&quot;,&quot;appType&quot;:&quot;web&quot;,&quot;LOB&quot;:&quot;dutyfree&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,742 /dutyfree/api/offer/cvp-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cvp-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;airportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;offerUniqueID&quot;:&quot;dutyfree-cvpoffers-1&quot;,&quot;apptype&quot;:&quot;web&quot;,&quot;offerLOB&quot;:&quot;dutyfree&quot;,&quot;type&quot;:&quot;type2&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,743 /api/dutyfreeservicev2/api/DutyFreeV2/similarProductRecommendation?ref=web&amp;org=df" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFreeV2/similarProductRecommendation?ref=web&amp;org=df</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;language&quot;:&quot;en&quot;,&quot;skuCode&quot;:&quot;&quot;,&quot;storeType&quot;:&quot;${StoreType}&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;ageConsent&quot;:true,&quot;tobaccoRestricted&quot;:false,&quot;recommendedType&quot;:&quot;cart&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="isCartPage" elementType="Header">
                          <stringProp name="Header.name">isCartPage</stringProp>
                          <stringProp name="Header.value">true</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,749 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/Sipsmith/02E01078/1_02E01078" enabled="true">
                    <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/Sipsmith/02E01078/1_02E01078</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-site</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,748 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01028/The%20Botanist-Bottle-The%20Botanist-Bottle-TheBotanist_1000_eu_NoMandatories-02E01028" enabled="true">
                    <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01028/The%20Botanist-Bottle-The%20Botanist-Bottle-TheBotanist_1000_eu_NoMandatories-02E01028</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-site</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,744 /api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="isCartPage" elementType="Header">
                          <stringProp name="Header.name">isCartPage</stringProp>
                          <stringProp name="Header.value">true</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,752 /-/media/Project/SVG%20image/DBS-logo" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/DBS-logo</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,751 /-/media/Project/SVG%20image/Axixbanklogo" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Axixbanklogo</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T7_Search_And_Select_Product" enabled="true">
                <boolProp name="TransactionController.parent">true</boolProp>
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-272 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/search/Calvin%20Klein%20CK%20Be%20EDT%20100ml%20Spray.json" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/search/${Brandname}.json</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="airport" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airport</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="x-nextjs-data" elementType="Header">
                        <stringProp name="Header.name">x-nextjs-data</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-334 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/CalvinKlein/06A12103/1_3616302016716_CK%20Defy%20EDP%2050ml" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/CalvinKlein/06A12103/1_3616302016716_CK%20Defy%20EDP%2050ml</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-324 /-/media/Project/SVG-image/IDBI" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG-image/IDBI</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-287 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="subscription-key" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">subscription-key</stringProp>
                        <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="customer" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">customer</stringProp>
                        <stringProp name="Argument.value">EJwH9veCHZyLhVGqWuYo56FNpUKi0g8VjfcQcLTC0M4zeyDMqTR+PgZMOFh1RIGCbSGuNdFTtHM0nyHKjDxcbVGvy6xvqsYbVp99OKJNu4PL/gZ/yf+3vwrvw0QP9kO0u65XG2jtZl7UO6HDgkEFZ4k1fKpKc0pSk5xVlqesVUUPPI4m/26Sg3dkVW8X0M7wpePgurp3PRuoEWaGXUPzKmZSEEvIScQ+SNgwGOfiOHp8nBTS/asKfO72J4Dd98pw4jQnTx9oZplsZnbzvNY0XVJ5Q3BJIdengUXBVYRMUN+qoMtRh1W/IfUVyeQWnn6yrTYvZbpmtvP+khiegGo4wA==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-328 /-/media/Project/SVG%20image/Canara%20bank-1" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Canara%20bank-1</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-331 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="subscription-key" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">subscription-key</stringProp>
                        <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="customer" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">customer</stringProp>
                        <stringProp name="Argument.value">QofFD/ED2Tz55omBoQeHFXawRemuuLz1xd9SIYoMVza3Fdrw4lvW+iB/XoyTEpKWSlAPH39aqeQBRTna1oig/kp/ZKtqeN4TuMhTDfV+QJ6Oz/JXm/N5qNKJRwiSW732fcEB5i2rwdoMZmxPnzvPG40wRXRrRCjzGOcrzW+ZtnvSkJkmvG9Q/pyiOts4J3dbv1qIy9Jc5dKHwoJ1WVgRMrBEfq0p1zTrimp/CEibj+rqvbKXUcn8x4Yg1PbyWIneKEc/6R9HBNlUCELr9J809x/oMwx8FfzaxoaUjssH7vPm9FWyJ4w3bCaXwZybIWN4D6OvRhstoSXRlu5x3cU0/A==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-264 /api/dutyfreeservicev2/api/DutyFree/GetProductsforSearchText?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetProductsforSearchText?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;searchText&quot;:&quot;&quot;,&quot;filterType&quot;:&quot;popular&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;storeType&quot;:&quot;${storeType}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-265 /api/dutyfreeservicev2/api/DutyFree/GetProductsforSearchText?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetProductsforSearchText?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;searchText&quot;:&quot;${Brandname}&quot;,&quot;filterType&quot;:&quot;&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;storeType&quot;:&quot;${StoreType}&quot;,&quot;restricted&quot;:&quot;false&quot;,&quot;tobaccoRestricted&quot;:&quot;false&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${StoreType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="productname" enabled="false">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">productname</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;productName&quot;:&quot;(.+?)&quot;,</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NF</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="productseohome" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">productseohome</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;productSEOName&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NF</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SKU_CODE" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">SKU_CODE</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;skuCode&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NF</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-326 /-/media/Project/SVG%20image/Federal" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Federal</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-286 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-311 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/06C01231/06C01231.jpg" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/${SKU_CODE}/${SKU_CODE}.jpg</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="sc_lang" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">sc_lang</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-316 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">header</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">Web</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-284 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">header</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">Web</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-305 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/p/calvin-klein-ck-be-edt-100ml-spray/06C01231.json" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}.json</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="location" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">location</stringProp>
                        <stringProp name="Argument.value">${storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airport" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airport</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="x-nextjs-data" elementType="Header">
                        <stringProp name="Header.name">x-nextjs-data</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="src" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">src</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&quot;productImages&quot;:[&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot;]</stringProp>
                    <stringProp name="BoundaryExtractor.default"></stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number"></stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-322 /-/media/Project/SVG%20image/AU-Bank-3x" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/AU-Bank-3x</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-319 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-283 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/06C01231/06C01231" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/${SKU_CODE}/${SKU_CODE}</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-315 /-/media/Project/SVG%20image/Axixbanklogo" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Axixbanklogo</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-321 /-/media/Project/SVG%20image/DBS-logo" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/DBS-logo</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-330 /-/media/Project/SVG%20image/mobikwik" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/mobikwik</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-335 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/CalvinKlein/06C01144/06C01144_1" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/CalvinKlein/06C01144/06C01144_1</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-325 /-/media/Project/SVG%20image/HSBC" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/HSBC</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-317 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="language" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">language</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-285 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="language" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">language</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-338 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/06A06004/06A06004" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/06A06004/06A06004</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-320 /api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-318 /api/loyaltyv2/point/earning?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/loyaltyv2/point/earning?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;businessSubType&quot;:&quot;DutyFree&quot;,&quot;nonLoyaltyPaymentAmount&quot;:3200,&quot;saleItems&quot;:[{&quot;productCode&quot;:&quot;${SKU_CODE}&quot;,&quot;quantity&quot;:1,&quot;unitPrice&quot;:3200,&quot;taxableUnitPrice&quot;:3200}]}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-339 /api/dutyfreeservicev2/api/DutyFree/GetPriceComparision" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetPriceComparision</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="skuCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">skuCode</stringProp>
                        <stringProp name="Argument.value">${SKU_CODE}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="storeType" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">storeType</stringProp>
                        <stringProp name="Argument.value">${storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-340 /-/media/Project/Campaigns/Valentine-s-Day/Duty-Free/1st-CVP/Offer---Filled-3.svg" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/Campaigns/Valentine-s-Day/Duty-Free/1st-CVP/Offer---Filled-3.svg</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller_Arrival" enabled="false">
            <stringProp name="IfController.condition">&quot;${C_storeType}&quot;==&quot;Arrival&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">true</boolProp>
            <boolProp name="IfController.useExpression">false</boolProp>
          </IfController>
          <hashTree>
            <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random_Product_Selector" enabled="true">
              <intProp name="InterleaveControl.style">1</intProp>
            </RandomController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Cart" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Add_To_Cart" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                </TransactionController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,707 /8NOD/G6ny/ww/0kDk/azIQ/pEurGJh9bYmciD/SnYEAg/W0lzVi/VHcDU" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                    <stringProp name="HTTPSampler.path">/8NOD/G6ny/ww/0kDk/azIQ/pEurGJh9bYmciD/SnYEAg/W0lzVi/VHcDU</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;sensor_data&quot;:&quot;3;0;1;0;3294520;eJuRaXhSX6t5P1V/nc686Pfwx29VatKYm+eR69kgARU=;114,2,0,1,13,242;\&quot;a~^]Z\&quot;mXO^V5E~5bGQalYF+c]k[!=  iqEJ`aWn&gt;LoM2n^GVg.\&quot;G\&quot;j*m\&quot;rkq-C\&quot;yp9\&quot;h3wq!O`Q@PLoQcH\&quot;rLl\&quot;4\&quot;\&quot;d\&quot;{C\&quot;^\&quot;\&quot;,\&quot;VK[\&quot;#\&quot;\&quot;;PN\&quot;]zV\&quot;kUevl&gt;\&quot;Rc4V\&quot;w\&quot;{+8(p-L4v%|9=_^74 +i3bX5ySX7Z:U-BndmC+&amp;2W6gQ3(\&quot;9UJ\&quot;zDZ\&quot;#\&quot;qUdAzsgKHnl%4M@5\&quot;k\&quot;#Sk\&quot;]fW?$IPkQ\&quot;$Q9\&quot;r&lt;X!/\&quot;sR)q\&quot;KPe0Q\&quot;%(K\&quot;d\&quot;aY^.A{QCoR|f|\&quot;7Hn\&quot;1{D\&quot;K\&quot;D\&quot;|7M\&quot;1c5\&quot;|Aaub3|;jLf+4/\&quot;@I3\&quot;Bswfv\&quot;`r\&quot;U\&quot;ESe5[j0udC\&quot;_ b]\&quot;|S]3hS\&quot;|hQTd\&quot;l4c\&quot;TF#\&quot;o\&quot;6-\&quot;GTr\&quot;CT&gt;&amp;\&quot;d:[5eT~XoAE\&quot;2z &gt;\&quot;ybN)rE\&quot;\&quot;D\&quot;mEv\&quot;D\&quot;-O5jX d7gv6*o,@4sUKPGD-~bCb~pg!7gG\&quot;Y\&quot;d^+\&quot;?VNx&gt;_l\&quot;\&quot;0\&quot;|r!\&quot;|ejE.\&quot;/A\&quot;&amp;oF6dFS\&quot;\&quot;l\&quot;H^;\&quot;+&amp;y`gom9|e[.8Yu4`SQ93uTG.Y\&quot;\&quot;x\&quot;BG%\&quot;[gllu{\&quot;Kg=K8q?\&quot;-\&quot;i\&quot;AV(\&quot;}dH\&quot;]! Sni\&quot;y0FD\&quot;e,mrr?R^5\&quot;hs\&quot;=ugk&gt;^+S#tfaIX\&quot;y64\&quot;oYM\&quot;q\&quot;\&quot;R#IaZYiH/sA\&quot;K}i\&quot;3\&quot;`L^3&lt;\&quot;ZuG\&quot;*.q\&quot;vG\&quot;ORY\&quot;|iJYkY\&quot;q{%NZiuGqSMA/u.K0Y_Vls&amp;.6=)mZz,ofwi4pi*Kd/#f]AZcQn~,/Bnm=^k%w5[CC&gt;{Y#$6|!Hs&amp;bJ4(vQZO$.;V/?]D5LyoWvCw?vKfqAM^YhW6-)=RyM8]{v(E&lt;c,&amp;{8Q$X.&amp;{P!Ce#!H*ol~ [l;Hv$A/1k;=71U,_p&lt;pT \&quot;de!\&quot;6\&quot;\&quot;&lt;\&quot;Pn&lt;\&quot;eo$nf.&gt;?Gj|f,\&quot;P*b\&quot;:kbuL%5}Ud&gt;^,X,/cO\&quot;*`r\&quot;o1gO1\&quot;T$+@\&quot;N\&quot;\&quot;o\&quot;V$J\&quot;lub\&quot;E`q\&quot;-l!4g)(eYA&gt;vb/Xnx\&quot;+:S\&quot;dBVJs\&quot;hCD\&quot;cEMg&lt;\&quot;&gt;,O\&quot;D\&quot;?+S~l\&quot;x@?\&quot;&amp;~H32\&quot;Dq  oZ(pZ2={0sl%Z9{V^K;U^ZdS8&amp;T?iB`Fnq@[6#}$kspn%1/Di.a9 oEIy)ME{qf3~~LpwIR?as{&lt;MP?kL0/P bHnHC++aBda% Ww|ilfq\&quot;V\&quot;Bw$\&quot;H9/FnA`X/&gt;2,sVxHMI)VKQ}!7B /:+zK020^5#kbUbS[=:a/3DrKS=Zd+0IXj_c/b&amp;~g7)kur}xth\&quot;(\&quot;AbH\&quot;J\&quot;\&quot;S\&quot;jBI\&quot;+0kL`^?j\&quot;@[H\&quot;-[o\&quot;/g(9\&quot;3\&quot;0KX&amp;\&quot;bw(\&quot;2fT\&quot;L\&quot;][Yggz(96,oSh\&quot;j\&quot;AIj\&quot;+8gWP]ZB$VmZ4D|98,# *&amp;\&quot;El%\&quot;)&lt;La-P\&quot;BZ3\&quot;lXKLpOlwte%=p.+}V&amp;6c[LLd/\&quot;r:,\&quot;K\&quot;`a\&quot;hE,\&quot;{r9S\&quot;]\&quot;\&quot;/\&quot;VyH\&quot;lv#cr\&quot;~d7Y\&quot;fPAy8\&quot;w}\&quot;4\&quot;\&quot;!\&quot;:F:\&quot;9\&quot;\&quot;M%3\&quot;!$9\&quot;)`c8&amp;\&quot;Px&amp;!\&quot;pEX6S)zD5\&quot;YAF;#\&quot;6\&quot;kgd|h.Ev&amp;[431&amp;J#&gt;$[}L7Glg4DO.0P:773l?[HST,-rn0GtL$97V=IX=p%:Z/8t|`XrWiCZe^q&gt;My:6[hVI_;5v[=VlIsgNP-eVOnjnH=$&gt;I%O\&quot;F=b\&quot;iFE\&quot;$gzk!WN,32/~yIy&gt;X\&quot;yBY$\&quot;n;%aK\&quot;GY{\&quot;)\&quot;\&quot;/wc\&quot;NA]\&quot;k\&quot;%Gpc\&quot;v\&quot;Jt$\&quot;zQ@z[k1zu8\&quot;(v!\&quot;PG&lt;E7\&quot;V*\&quot;nb &gt;t\&quot;&gt;j$\&quot;~\&quot;BV~(\&quot;G\&quot;5-7\&quot;v\&quot;\&quot;cVj\&quot;gf\&quot;q/O\&quot;WEK\&quot;ME}Ku9vlF~fE`R\&quot;W})\&quot;P\&quot;r9IT}L?vwp!]gN8gOPK2`_Qif-9[[zebF~\&quot;3\&quot;%i[\&quot;)\&quot;#&amp;pikD`7gFR-AFcDJUya5V(JH]!}k}xohtO$N-H`?!he-&amp;.t8X&amp;mN~j\&quot;1\&quot;+=*\&quot;p\&quot;\&quot;(\&quot;k1!\&quot;!gLWD $\&quot;p1\&quot;@=C9t\&quot;D$ov\&quot;H\&quot;\&quot;`\&quot;eT4\&quot;r\&quot;\&quot;g\&quot;a L\&quot;w&gt;S`6\&quot;rc-\&quot;cHK+E):DO7|\&quot;Rq38x4B!\&quot;j4r\&quot;_W&amp;\&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,708 /api/dutyfreeservicev2/api/DutyFree/AddCartV5?language=en&amp;airportCode=AMD&amp;ref=web&amp;org=df" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/AddCartV5?language=en&amp;airportCode=${P_Airport_Code}&amp;ref=web&amp;org=df</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;quantity&quot;:1,&quot;skuCode&quot;:&quot;${SKU_CODE}&quot;,&quot;productImage&quot;:&quot;${src}&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;storeType&quot;:&quot;${C_storeType}&quot;,&quot;IsAgeConsent&quot;:true,&quot;IsSmokingConsent&quot;:true}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,710 /dutyfree/audio/add_cart.mp3" enabled="false">
                    <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/audio/add_cart.mp3</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-site</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Range" elementType="Header">
                          <stringProp name="Header.name">Range</stringProp>
                          <stringProp name="Header.value">bytes=0-</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">identity;q=1, *;q=0</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">audio</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,709 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="ref" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">ref</stringProp>
                          <stringProp name="Argument.value">web</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="org" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">org</stringProp>
                          <stringProp name="Argument.value">header</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">Web</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,715 /api/loyaltyv2/point/earning?ref=web&amp;org=df" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/api/loyaltyv2/point/earning?ref=web&amp;org=df</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;businessSubType&quot;:&quot;DutyFree&quot;,&quot;nonLoyaltyPaymentAmount&quot;:1800,&quot;saleItems&quot;:[{&quot;productCode&quot;:&quot;${SKU_CODE}&quot;,&quot;quantity&quot;:1,&quot;unitPrice&quot;:1800,&quot;taxableUnitPrice&quot;:1800}]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Go_TO_Cart" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                </TransactionController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,719 /8NOD/G6ny/ww/0kDk/azIQ/pEurGJh9bYmciD/SnYEAg/W0lzVi/VHcDU" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                    <stringProp name="HTTPSampler.path">/8NOD/G6ny/ww/0kDk/azIQ/pEurGJh9bYmciD/SnYEAg/W0lzVi/VHcDU</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;sensor_data&quot;:&quot;3;0;1;0;3294520;eJuRaXhSX6t5P1V/nc686Pfwx29VatKYm+eR69kgARU=;88,2,0,3,19,242;\&quot;a~^]Z\&quot;mXO^V5E~5bGQalYF+c]k[!=  iqEJ`aWn&gt;LoM2n^GVg.\&quot;G\&quot;j*m\&quot;rkq-C\&quot;yp9\&quot;h3wq!O`Q@PLoQcH\&quot;rLl\&quot;4\&quot;\&quot;d\&quot;{C\&quot;^\&quot;$,;vg{8sSRGQbmt8*\&quot;]\&quot;EnT\&quot;s\&quot;/I}\&quot;]$8\&quot;A6l\&quot;xdAOHgdr!:\&quot;2^hs\&quot;Z\&quot;y/-rasbkCU^TBd8!T{gBV3-E0Wy2= Mrc8R0C7K.Frs)`H\&quot;XP_\&quot;v0Q\&quot;X\&quot;&lt;=%X(BsCH#RZe9qI\&quot;=\&quot;uK%\&quot;/AG`5f&amp;vA\&quot;19e\&quot;f^*&gt;~M*g&gt;\&quot;4X+%\&quot;-NFFS\&quot;z6)\&quot;9\&quot;`[V4bmuCiE|_&gt;\&quot;RFS\&quot;prd\&quot;j\&quot;%\&quot;c%W\&quot;CPp\&quot;U&amp;gBh*Vj7*hE/j\&quot;_hv\&quot;^cL&amp;7\&quot;.]\&quot;G\&quot;Oc|WAttL$iO)(q\&quot;;[:=\&quot;pDU0u]\&quot;30sn4\&quot;Gf;\&quot;93r\&quot;l\&quot;O6\&quot;ev6\&quot;y1xl\&quot;X0Y@qa&amp;m&amp;gg\&quot;pZ[!\&quot;rUK*%R\&quot;\&quot;^\&quot;=gJ\&quot;,\&quot;g8%_L3}D&amp;2WN7^zbSB09@9:2rawJ&lt;/PhK(\&quot;F\&quot;[N0\&quot;Pp[Gh3D\&quot;&amp;y. =31wf+VNPq5vNL0.vkB*Pmr}FiiJMRm\&quot;x\&quot;mCN\&quot;nkT1G\&quot;`Z\&quot;vQV!Zr&amp;\&quot;\&quot;N\&quot;_;Z\&quot;&lt;ET3O&lt;;5fhFkIlGAuA4=ug#lx+\&quot;\&quot;)\&quot;b|/\&quot;6CL53Z\&quot;JB~T63?\&quot;d\&quot;a\&quot;/sA\&quot;J6]\&quot;3BJe&amp;C\&quot;RBb8\&quot;NTDsl_Vci\&quot;dG\&quot;X$4#nU($DC_squ\&quot;+Ay\&quot;e4*\&quot;g\&quot;\&quot;`Sz@7/tXb(a\&quot;P:x\&quot;4\&quot;*]%.H\&quot;3V_\&quot;,}!\&quot;kr\&quot;4t+\&quot;!5YykV\&quot;!C};q}5M}!k|F8t*/I[}{K@XA5Jwkn~#e Z+*aOM_aI?dUKMQQs&gt;N{!68Y&amp;y*{8Q2Jd&lt;+~Sj{m#IyczZf:G^#JDzw/n6D9_yFv#TGvPOlYS0at8uyRo]xnIkgj13;Bg-j&lt;*lO!4a;/P!y3~T^;[(Z!DcbkB)0&gt;m0s)%_UWJg!@F\&quot;]f+\&quot;k\&quot;dE{Pi4@K|r#9`3}]U=8sc9ln.xUepJ\&quot;&gt;\&quot;*f:\&quot;g_hA|2uS~mEI2\&quot;cV!\&quot;D_G4IZ+LCha9s8wp4s\&quot;orj\&quot;gC&gt;1$\&quot;e/&amp;6\&quot;m\&quot;\&quot;)\&quot;g[B\&quot;+:$\&quot;jzy\&quot;fz[BB&amp;@21+2[Pn#+l\&quot;&amp;eG\&quot;?,VW*\&quot;p90\&quot; /jaX\&quot;:Bx\&quot;y\&quot;`D`tC\&quot;hV&amp;\&quot;CS&lt;z)\&quot;0RN4_08UZTz|&lt;47@o?{8vElG)TdrmY@(H}!DQ24z*2@`Ym|t{!p_eau&amp;&gt;C9C4Wzx&gt;*jzE+!zNCgfDWk.9.d#&lt;_7*o!|STM;9eDK6&gt;u!l7&gt;tx8\&quot;*\&quot;o@-\&quot;xCxiQKx*|4%%Z4CVI+5(FpXnO]6EJ-v)D&amp;][Ygg|(C55rYl*rY_f3G*=t%QZ^LBUjU0P?WZ{):35&amp;\&quot;(\&quot;rWy\&quot;{\&quot;c)`qMRbSVn6ve{}(=iq/+&lt;}{8bOS`n=jCl@cB`e[MtP&gt;,9Cmn4Uu{&gt;ys7^hj{0o/x6(T|L`LRySI&gt;F^+7j*RW{hW0gf^,M!U=kU fvG?9{?I&lt;dk&gt;]1Tz0NJS&amp;Wc_!N2[I1|I(Rx~-f0B5^oJp?{A`r%!o?OK#:*_`6+jVt&gt;Rc&gt;&amp;3.MqHvQ|^lGM^2u*8t8{WX&gt;=wh6d~0lZc{E]HkVxfy]`}b6UnJxcSW?L&amp;z9)1J:+8G#I)_=wn$lp&amp;thz3$MS(2,4!lI4HvZDXvH!g=&lt;a_!^|0!(Dg@#qorcsieC*GxkP~9oJ=|lN:tUn2)zKsT/=:JLMQE1wDhje.C*k_5H{{Z?Zw!zLxiYNLmp#o.no3_]c0O;uneYDF#v.hltOxgQeaz+JNKG&gt;sDHW$NNx}o!]kQ?k@QQ7e_Uni&lt;&gt;^[~`gJx$3o?6{|!,y5qb3jv-pEOB^a1?`u6.5rH_rM&amp; p#i,(2 sP+Ai={}#AP)BnvB:F+e/7!^][^gmx3{+U?XyhAYV-Bo3Yl2&gt;]&gt;)4`A.9$BHjo .}`Gm,&amp;p{ MxFiBg3EO=*Nl^KOYl}&lt;Kp^v_Q|66t4&gt;~@|;!Ew C2/M|uago-8m(EMUQ?e:.!P[&lt;^AfTvVl/txP|w[n!Qg;I|t;)&amp;_-.uM_DrS*q;~@iXY&amp;hhbz,VpTi8Eagg&gt;qmo1YGqX3*aFp(2BoMOSp*RxVvKY1,6j?Zc*P2z^A*qS LNhK25-_yW{Q%RtA@L8z{0n5-ZXDB|]3Zq&amp;rLkk1X4n?#a*MXkA9?`Alc&gt;D.9ja5q3H)j!*n5wE,lS~C]tVPa}^5.m{kkTN.p)L4#J]=YJos?9d7TeSKm&lt;sMQCSJRD/|XwAD9]eDrs?: hK3CcPHr7*ju]jnwx|OGd7=4PnM%yddI&gt;kcuEA8m/( zs %7=L8|NpxrOjI&lt;8$&amp;ce?&amp;P&amp;)-R!qiw}:.YU_eT#PXY,_J1-v.mq]K YZf5g^Ukv;KlnwxjEz,7zAB{#o%} qeBl|(gFF5Tc)?dk||)`=R[Hmn[ldor*zuD,0H2msx9Ds*Pa}&amp;:rR~$g=&gt;3QOaesdlM-=]P,KRkyNd4Ru$+{X#9/m^m$%GCZKe=+Qg^HYb.LtBz@hu#q^)F0w&amp;,B&gt;sp78?2!JvbVZsGjCvMh?OmWRnG2!B;V[38ci qp#]IEpwTvf/q0iyA35l7,r5&gt;jyCa79TA?jE:@Z#R{g&gt;!M2HvpoM zg*+b&amp;Z}FGpmf@n{+EoG|h?,cLl3;&lt;}RSCv/R#_}Dj+*-jJLI*L4iW=:jP|DNUA$%,MbSkIlLt8EI*cw{W}wKI#+lW{Oan]ELP$:yJAfAV:;F4 0&gt; PEv{jeSKvPZ}sU^yJn[+t5!J&amp;7T=|&gt;fDpYIP?K&lt;.T?WvoYw Y,uN4zn-z#@% ?UL(xnllxeV&lt;1BxlYp4kA8weB4fJ^!wq&gt;aD)&amp;$,#@:9uX6TF?l2jPI&amp;o^I*p:^`K%U:z7+7CUQL@$`)6,YvrH?&amp;2xmU8g(%(d3~t+wKK[XhZL6Zc]:_R+6|~kyYLqL[`&gt;lrKkh8&gt;Zj{]mA!|8i4=yvnvo~i^+ek ^9)7PU|/RRxbuY+HQ!a]FNUlblfV%m|+z]`gl-Yi.Bjex^AQa&lt;)+s)4:MQEA*g{&gt;$ltr&lt;Z$H~9DabV7UoS)93[\&quot;h\&quot;feb\&quot;h{62lq&amp;C\&quot;sK \&quot;/`4\&quot;Y|R9\&quot;S\&quot;io4E\&quot;CgC\&quot;LfV\&quot;.\&quot;cx[{]~Vb(qi/R\&quot;;\&quot;/I[\&quot;f}(l*)DgS_{&gt;h(MrZT! H3\&quot;U$p\&quot;EFo%^n)5&gt;\&quot;%_*\&quot;D[~5a;F!Sl9?uw=^Fx18l|Br(\&quot;&lt;7P\&quot;{\&quot;yD\&quot;8wT\&quot;m5mA\&quot;5\&quot;\&quot;D\&quot;)Oc\&quot;{GU?I\&quot;d[Ft\&quot;Rt&lt;$N? o\&quot;}2\&quot;J\&quot;\&quot;Y\&quot;Pr#\&quot;W\&quot;\&quot;!Lf\&quot;YSx\&quot;tAfV0/iM:#\&quot;gq4t\&quot;9=Z.`(U;g\&quot;A]iHL\&quot;}\&quot;&gt;QI0w~[sK{1@1Ju)N!j146~pIW{]R`M7t:z}ZUcP(S/~j[vyX+ZHJ4&amp;M,&gt;aW.V:!hZF6pkaW40w[TOm;tg|j_:&amp;{Wp8,)EmZ70Vxty{{#u?l^P)\&quot;kT/\&quot;eM;\&quot;-5_;[2XI%&lt;5BL]BZ0\&quot;:pjh\&quot;%l52m\&quot;VS3\&quot;]\&quot;\&quot;tYq\&quot;&gt;Sg\&quot;J\&quot;T`W\&quot;s\&quot;33v\&quot;N.$w!kkB9U\&quot;m-e\&quot;bCa^$$3HN\&quot;1o\&quot;u}9z`\&quot;I,@\&quot;m\&quot;Bj@[\&quot;?\&quot;LPo\&quot;a\&quot;\&quot;-$D\&quot;rv\&quot;3kB\&quot;lfo\&quot;DH7pO}acQ95}NM\&quot;s@f\&quot;?\&quot;#nz;pSR@NKgh~zpV:OgQ.BA[uPiBOqx,ji\&quot;/\&quot;A3:\&quot;v\&quot;CRBW_T%g=9I1Yz=;E](+q1&amp;EXyRl^|.2&gt;VF(fQ#F:*%/YozoGtGLA}}\&quot;e\&quot;!@1\&quot;:\&quot;\&quot;/\&quot;$]k\&quot;|vh*!b$\&quot; T\&quot;&amp;1KL.\&quot;/yk}\&quot;!\&quot;\&quot;`\&quot;&amp;!t\&quot;u\&quot;\&quot;9\&quot;S)P\&quot;=):Z=\&quot;=Au\&quot;nhxk4yIh!|o\&quot;U+gqo/I&gt;\&quot;9}a\&quot;n%V\&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,720 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/checkout.json" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/checkout.json</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="airport" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">airport</stringProp>
                          <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="x-nextjs-data" elementType="Header">
                          <stringProp name="Header.name">x-nextjs-data</stringProp>
                          <stringProp name="Header.value">1</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,731 //-/media/Foundation/Adani/Dutyfree/ProductImages/liquor/rum/amrut/02G01177/1_02G01177" enabled="true">
                    <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">//-/media/Foundation/Adani/Dutyfree/ProductImages/liquor/rum/amrut/${SKU_CODE}/1_${SKU_CODE}</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-site</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,729 /dutyfree/api/offer/cart-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cart-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;AirportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;language&quot;:&quot;en&quot;,&quot;appType&quot;:&quot;web&quot;,&quot;LOB&quot;:&quot;dutyfree&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,732 /dutyfree/api/offer/cart-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cart-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;AirportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;language&quot;:&quot;en&quot;,&quot;appType&quot;:&quot;web&quot;,&quot;LOB&quot;:&quot;dutyfree&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,730 /dutyfree/api/offer/cvp-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cvp-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;airportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;offerUniqueID&quot;:&quot;dutyfree-cvpoffers-1&quot;,&quot;apptype&quot;:&quot;web&quot;,&quot;offerLOB&quot;:&quot;dutyfree&quot;,&quot;type&quot;:&quot;type2&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,733 /dutyfree/api/offer/cvp-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cvp-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;airportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;offerUniqueID&quot;:&quot;dutyfree-cvpoffers-1&quot;,&quot;apptype&quot;:&quot;web&quot;,&quot;offerLOB&quot;:&quot;dutyfree&quot;,&quot;type&quot;:&quot;type2&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,735 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subscription-key" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">subscription-key</stringProp>
                          <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="customer" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.name">customer</stringProp>
                          <stringProp name="Argument.value">miynyrg4y5QP72abo3fliOsrmOvF7qRMEYF6BkRD4aBjdvX54TaXMPiU12RYkbMGtimpkh9tB50kOPyWrN2TFi5ZaVDFCB6s/WdK+RvYQa8YrWm5hhq9+J1p5wC5UMJr82SeVzgP/yWD0KWbV4z2OXr3ZwJwWjcrEi2PXIdNZG2RD/kzeWVnhu1U128sNBwyc2m82RZ5PLv9++JXSbB3fbTsAM1W+DYR1wDAOYw9KoMigUh7FSFP1dZm7iWkGhZ0P8WAGxXpormnt6qnzQSQLApeoN1aD4By0xd4tZOJlbbvsj5UCcZ8QVf4gDvO9vxR4e/fERd4w5ywEhb4iGGDZA==</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,734 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="language" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">language</stringProp>
                          <stringProp name="Argument.value">en</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="airportCode" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">airportCode</stringProp>
                          <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="ref" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">ref</stringProp>
                          <stringProp name="Argument.value">web</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="org" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">org</stringProp>
                          <stringProp name="Argument.value">df</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="isCartPage" elementType="Header">
                          <stringProp name="Header.name">isCartPage</stringProp>
                          <stringProp name="Header.value">true</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,741 /dutyfree/api/offer/cart-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cart-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;AirportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;language&quot;:&quot;en&quot;,&quot;appType&quot;:&quot;web&quot;,&quot;LOB&quot;:&quot;dutyfree&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,742 /dutyfree/api/offer/cvp-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cvp-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;airportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;offerUniqueID&quot;:&quot;dutyfree-cvpoffers-1&quot;,&quot;apptype&quot;:&quot;web&quot;,&quot;offerLOB&quot;:&quot;dutyfree&quot;,&quot;type&quot;:&quot;type2&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,743 /api/dutyfreeservicev2/api/DutyFreeV2/similarProductRecommendation?ref=web&amp;org=df" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFreeV2/similarProductRecommendation?ref=web&amp;org=df</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;language&quot;:&quot;en&quot;,&quot;skuCode&quot;:&quot;&quot;,&quot;storeType&quot;:&quot;${StoreType}&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;ageConsent&quot;:true,&quot;tobaccoRestricted&quot;:false,&quot;recommendedType&quot;:&quot;cart&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="isCartPage" elementType="Header">
                          <stringProp name="Header.name">isCartPage</stringProp>
                          <stringProp name="Header.value">true</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,749 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/Sipsmith/02E01078/1_02E01078" enabled="true">
                    <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/Sipsmith/02E01078/1_02E01078</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-site</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,748 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01028/The%20Botanist-Bottle-The%20Botanist-Bottle-TheBotanist_1000_eu_NoMandatories-02E01028" enabled="true">
                    <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01028/The%20Botanist-Bottle-The%20Botanist-Bottle-TheBotanist_1000_eu_NoMandatories-02E01028</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-site</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,744 /api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="isCartPage" elementType="Header">
                          <stringProp name="Header.name">isCartPage</stringProp>
                          <stringProp name="Header.value">true</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,752 /-/media/Project/SVG%20image/DBS-logo" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/DBS-logo</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,751 /-/media/Project/SVG%20image/Axixbanklogo" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Axixbanklogo</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T7_Search_And_Select_Product" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-272 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/search/Calvin%20Klein%20CK%20Be%20EDT%20100ml%20Spray.json" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/search/${Brandname}.json</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="airport" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airport</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="x-nextjs-data" elementType="Header">
                        <stringProp name="Header.name">x-nextjs-data</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-334 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/CalvinKlein/06A12103/1_3616302016716_CK%20Defy%20EDP%2050ml" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/CalvinKlein/06A12103/1_3616302016716_CK%20Defy%20EDP%2050ml</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-324 /-/media/Project/SVG-image/IDBI" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG-image/IDBI</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-287 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="subscription-key" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">subscription-key</stringProp>
                        <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="customer" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">customer</stringProp>
                        <stringProp name="Argument.value">EJwH9veCHZyLhVGqWuYo56FNpUKi0g8VjfcQcLTC0M4zeyDMqTR+PgZMOFh1RIGCbSGuNdFTtHM0nyHKjDxcbVGvy6xvqsYbVp99OKJNu4PL/gZ/yf+3vwrvw0QP9kO0u65XG2jtZl7UO6HDgkEFZ4k1fKpKc0pSk5xVlqesVUUPPI4m/26Sg3dkVW8X0M7wpePgurp3PRuoEWaGXUPzKmZSEEvIScQ+SNgwGOfiOHp8nBTS/asKfO72J4Dd98pw4jQnTx9oZplsZnbzvNY0XVJ5Q3BJIdengUXBVYRMUN+qoMtRh1W/IfUVyeQWnn6yrTYvZbpmtvP+khiegGo4wA==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-328 /-/media/Project/SVG%20image/Canara%20bank-1" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Canara%20bank-1</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-331 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="subscription-key" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">subscription-key</stringProp>
                        <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="customer" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">customer</stringProp>
                        <stringProp name="Argument.value">QofFD/ED2Tz55omBoQeHFXawRemuuLz1xd9SIYoMVza3Fdrw4lvW+iB/XoyTEpKWSlAPH39aqeQBRTna1oig/kp/ZKtqeN4TuMhTDfV+QJ6Oz/JXm/N5qNKJRwiSW732fcEB5i2rwdoMZmxPnzvPG40wRXRrRCjzGOcrzW+ZtnvSkJkmvG9Q/pyiOts4J3dbv1qIy9Jc5dKHwoJ1WVgRMrBEfq0p1zTrimp/CEibj+rqvbKXUcn8x4Yg1PbyWIneKEc/6R9HBNlUCELr9J809x/oMwx8FfzaxoaUjssH7vPm9FWyJ4w3bCaXwZybIWN4D6OvRhstoSXRlu5x3cU0/A==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-264 /api/dutyfreeservicev2/api/DutyFree/GetProductsforSearchText?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetProductsforSearchText?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;searchText&quot;:&quot;&quot;,&quot;filterType&quot;:&quot;popular&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;storeType&quot;:&quot;${storeType}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-265 /api/dutyfreeservicev2/api/DutyFree/GetProductsforSearchText?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetProductsforSearchText?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;searchText&quot;:&quot;${Brandname}&quot;,&quot;filterType&quot;:&quot;&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;storeType&quot;:&quot;${StoreType}&quot;,&quot;restricted&quot;:&quot;false&quot;,&quot;tobaccoRestricted&quot;:&quot;false&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${StoreType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="productname" enabled="false">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">productname</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;productName&quot;:&quot;(.+?)&quot;,</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NF</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="productseohome" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">productseohome</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;productSEOName&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NF</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SKU_CODE" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">SKU_CODE</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;skuCode&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NF</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-326 /-/media/Project/SVG%20image/Federal" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Federal</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-286 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-311 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/06C01231/06C01231.jpg" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/${SKU_CODE}/${SKU_CODE}.jpg</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="sc_lang" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">sc_lang</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-316 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">header</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">Web</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-284 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">header</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">Web</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-305 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/p/calvin-klein-ck-be-edt-100ml-spray/06C01231.json" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}.json</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="location" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">location</stringProp>
                        <stringProp name="Argument.value">${storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airport" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airport</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="x-nextjs-data" elementType="Header">
                        <stringProp name="Header.name">x-nextjs-data</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="src" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">src</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&quot;productImages&quot;:[&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot;]</stringProp>
                    <stringProp name="BoundaryExtractor.default"></stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number"></stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-322 /-/media/Project/SVG%20image/AU-Bank-3x" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/AU-Bank-3x</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-319 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-283 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/06C01231/06C01231" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/${SKU_CODE}/${SKU_CODE}</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-315 /-/media/Project/SVG%20image/Axixbanklogo" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Axixbanklogo</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-321 /-/media/Project/SVG%20image/DBS-logo" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/DBS-logo</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-330 /-/media/Project/SVG%20image/mobikwik" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/mobikwik</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-335 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/CalvinKlein/06C01144/06C01144_1" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/CalvinKlein/06C01144/06C01144_1</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-325 /-/media/Project/SVG%20image/HSBC" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/HSBC</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-317 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="language" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">language</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-285 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="language" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">language</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-338 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/06A06004/06A06004" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/06A06004/06A06004</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-320 /api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-318 /api/loyaltyv2/point/earning?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/loyaltyv2/point/earning?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;businessSubType&quot;:&quot;DutyFree&quot;,&quot;nonLoyaltyPaymentAmount&quot;:3200,&quot;saleItems&quot;:[{&quot;productCode&quot;:&quot;${SKU_CODE}&quot;,&quot;quantity&quot;:1,&quot;unitPrice&quot;:3200,&quot;taxableUnitPrice&quot;:3200}]}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-339 /api/dutyfreeservicev2/api/DutyFree/GetPriceComparision" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetPriceComparision</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="skuCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">skuCode</stringProp>
                        <stringProp name="Argument.value">${SKU_CODE}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="storeType" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">storeType</stringProp>
                        <stringProp name="Argument.value">${storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-340 /-/media/Project/Campaigns/Valentine-s-Day/Duty-Free/1st-CVP/Offer---Filled-3.svg" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/Campaigns/Valentine-s-Day/Duty-Free/1st-CVP/Offer---Filled-3.svg</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T10_Continue_And_PickUp_Time" enabled="false">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-420 /api/dutyfreeservicev2/api/DutyFreeV2/ProductRecommendation?ref=web&amp;org=df" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFreeV2/ProductRecommendation?ref=web&amp;org=df</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;language&quot;:&quot;en&quot;,&quot;skuCode&quot;:&quot;&quot;,&quot;storeType&quot;:&quot;${C_storeType}&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;ageConsent&quot;:true,&quot;recommendedType&quot;:&quot;traveller&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="isCartPage" elementType="Header">
                    <stringProp name="Header.name">isCartPage</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-445 /api/commonservicev2/api/Whatsapp/CheckStatus" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/commonservicev2/api/Whatsapp/CheckStatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">df</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/review-details</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-428 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/HugoBoss/06A03650/1_99240002984_Hugo%20Boss_Boss%20Bottled%20Night_EDT_100ml" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/HugoBoss/06A03650/1_99240002984_Hugo%20Boss_Boss%20Bottled%20Night_EDT_100ml</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-441 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscription-key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">subscription-key</stringProp>
                    <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="customer" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">customer</stringProp>
                    <stringProp name="Argument.value">t15ugiXQ5XpSuxCc7U1wDJh84EzbjMtoyImUcUj3oyHdsB1AEvo/dbIAYyhaqBbtRYlm7ZYzVSrFhf64v9yHlT8NOufEjseH7tomSd2aJLt2Mk4KlTYASMJQ748XPOk/uhjCs5UCPam4yqln9ov+og4IqjiWzDFyZf1BZSLrJe3jdW0oH+JynztZZuoQJJ/3xaIGya+LdYke4XCZRF8CGlKhS4FkSKRPISo2UZ0fqJT/iRAzH7H+G0VsUHJkKF6CyPpLKnB9TNHWvmV/t5biJeKmfXdiPnZ28Cx0bpRVtxD0liuuV4g94EmWxRZgMePj4wCWHcaoist3JDKp7ZUe7A==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/review-details</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-409 /api/dutyfreeservicev2/api/DutyFree/validateCart/?ref=web&amp;org=df" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/validateCart/?ref=web&amp;org=df</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="isCartPage" elementType="Header">
                    <stringProp name="Header.name">isCartPage</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-434 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/review-details.json" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/review-details.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="airport" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">airport</stringProp>
                    <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="x-nextjs-data" elementType="Header">
                    <stringProp name="Header.name">x-nextjs-data</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-413 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="language" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">language</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="airportCode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">airportCode</stringProp>
                    <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">df</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="isCartPage" elementType="Header">
                    <stringProp name="Header.name">isCartPage</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-427 /-/media/Foundation/Adani/Dutyfree/ProductImages/Confectionery/Chocolates/Butlers/05A06024/1_A7683%20100g%20Mixed%20Berry%20Bar" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Confectionery/Chocolates/Butlers/05A06024/1_A7683%20100g%20Mixed%20Berry%20Bar</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-425 /-/media/Foundation/Adani/Dutyfree/ProductImages/Confectionery/Chocolates/Butlers/05A06022/1_A7680%20100g%20Milk%20Chocolate%20Bar" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Confectionery/Chocolates/Butlers/05A06022/1_A7680%20100g%20Milk%20Chocolate%20Bar</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-429 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01003/02E01003%20BOMBAY%20SAPPHIRE%20100%20CL" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01003/02E01003%20BOMBAY%20SAPPHIRE%20100%20CL</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-447 /api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">df</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/review-details</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="isCartPage" elementType="Header">
                    <stringProp name="Header.name">isCartPage</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-412 /api/dutyfreeservicev2/api/DutyFree/ValidatePreOrderDiscountV4?ref=web&amp;org=df" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/ValidatePreOrderDiscountV4?ref=web&amp;org=df</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;pickupTime&quot;:&quot;${PickupTime}&quot;,&quot;pickupDate&quot;:&quot;${pickupDate}&quot;,&quot;isPickupNow&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="isCartPage" elementType="Header">
                    <stringProp name="Header.name">isCartPage</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T11_Enter_Details_And_Pay" enabled="false">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-522 /-/media/Project/Adani/Payment_icons/Assets/UPI-Bank--Logos/easy-EMI.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/UPI-Bank--Logos/easy-EMI.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-548 /-/media/Project/Adani/Payment_icons/Assets/Website/upi-upi.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/Website/upi-upi.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-488 /-/media/Project/Adani/Payment_icons/Assets/Website/netbanking.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/Website/netbanking.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-545 /-/media/Project/Adani/Payment_icons/Assets/Website/upi-freecharge.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/Website/upi-freecharge.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-492 /-/media/Project/Adani/Payment_icons/Assets/Website/credit-debit-card.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/Website/credit-debit-card.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-482 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="language" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">language</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">pmnt</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/payment?lob=dutyfree</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-546 /-/media/Project/Adani/Payment_icons/Assets/Website/upi-paytm.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/Website/upi-paytm.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-481 /api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">pmnt</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/payment?lob=dutyfree</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-483 /api/loyaltyv2/point" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/loyaltyv2/point</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="balanceTypes" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">balanceTypes</stringProp>
                    <stringProp name="Argument.value">available</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">cmn</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/payment?lob=dutyfree</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-462 /api/dutyfreeservicev2/api/DutyFree/validateCart/?ref=web&amp;org=df" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/validateCart/?ref=web&amp;org=df</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/review-details</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="isCartPage" elementType="Header">
                    <stringProp name="Header.name">isCartPage</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-480 /manifest.json" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/manifest.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/payment?lob=dutyfree</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-547 /-/media/Project/Adani/Payment_icons/Assets/App/BHIM.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/App/BHIM.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-525 /-/media/Project/Adani/Payment_icons/Assets/App/safe-secure.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/App/safe-secure.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-498 /api/loyaltyv2/point/earning?ref=web&amp;org=pmnt" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/loyaltyv2/point/earning?ref=web&amp;org=pmnt</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;businessSubType&quot;:&quot;DutyFree&quot;,&quot;nonLoyaltyPaymentAmount&quot;:3200,&quot;saleItems&quot;:[{&quot;productCode&quot;:&quot;${SKU_CODE}&quot;,&quot;quantity&quot;:1,&quot;unitPrice&quot;:3200}],&quot;rewardPromoPoints&quot;:0,&quot;grossAmount&quot;:3200,&quot;taxableAmount&quot;:4000,&quot;promoCode&quot;:&quot;&quot;,&quot;additionalFilters&quot;:{&quot;isInternational&quot;:false},&quot;subOrderType&quot;:null}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/payment?lob=dutyfree</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-553 /404" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/404</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-489 /api/paymentv2/emi/plans?promoCode=&amp;paymentMethod=&amp;ref=web&amp;type=DutyFree&amp;org=pmnt" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/paymentv2/emi/plans?promoCode=&amp;paymentMethod=&amp;ref=web&amp;type=DutyFree&amp;org=pmnt</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;merchant_id&quot;:&quot;adanigroup&quot;,&quot;order_amount&quot;:3200,&quot;mobile_number&quot;:&quot;2cb3ea0efe44976d4caf&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/payment?lob=dutyfree</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-543 /-/media/Project/Adani/Payment_icons/Assets/Website/upi-phonePe.svg" enabled="false">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/Website/upi-phonePe.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-494 /-/media/Project/Campaigns/Icici-co-brand/cobrand-payment/co-brand-payment.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Campaigns/Icici-co-brand/cobrand-payment/co-brand-payment.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-467 /api/dutyfreeservicev2/api/DutyFree/UpdatePassengerDetailsV6?ref=web&amp;org=df" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/UpdatePassengerDetailsV6?ref=web&amp;org=df</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;flightNo&quot;:&quot;&quot;,&quot;pickupDate&quot;:&quot;${pickupDate}&quot;,&quot;pickupTime&quot;:&quot;${PickupTime}&quot;,&quot;mobile&quot;:&quot;${MobileNo}&quot;,&quot;emailId&quot;:&quot;${EmailID}&quot;,&quot;countryCode&quot;:&quot;&quot;,&quot;countryDialCode&quot;:&quot;+91&quot;,&quot;isAssistance&quot;:false,&quot;assistanceCode&quot;:&quot;&quot;,&quot;countryISOCode&quot;:&quot;IND&quot;,&quot;passengers&quot;:[{&quot;sequenceNumber&quot;:1,&quot;customerName&quot;:&quot;${customerName}&quot;,&quot;passportNumber&quot;:&quot;${passportNumber}&quot;,&quot;passportExpiry&quot;:&quot;&quot;,&quot;customerDOB&quot;:&quot;${customerDOB}&quot;,&quot;countryName&quot;:&quot;&quot;,&quot;isPrimaryPassenger&quot;:true}],&quot;skuAssistances&quot;:[{&quot;skuCode&quot;:&quot;${SKU_CODE}&quot;,&quot;assistanceCode&quot;:null}],&quot;whatsappOptIn&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/review-details</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="isCartPage" elementType="Header">
                    <stringProp name="Header.name">isCartPage</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-491 /-/media/Project/Adani/Payment_icons/Assets/Website/wallet.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/Website/wallet.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-544 /-/media/Project/Adani/Payment_icons/Assets/App/googlepay.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/App/googlepay.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-493 /-/media/Project/Adani/Payment_icons/Assets/Website/upi.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/Website/upi.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Random Airport Selector" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">import java.util.ArrayList;

ArrayList&lt;Object[]&gt; data = new ArrayList&lt;Object[]&gt;();

data.add(new Object[]{&quot;svpia-ahmedabad-airport&quot;,&quot;AMD&quot;});
//data.add(new Object[]{&quot;lgbia-guwahati-airport&quot;,&quot;GAU&quot;});
data.add(new Object[]{&quot;jaipur-airport&quot;,&quot;JAI&quot;});
data.add(new Object[]{&quot;ccsia-lucknow-airport&quot;,&quot;LKO&quot;});
data.add(new Object[]{&quot;thiruvananthapuram-airport&quot;,&quot;TRV&quot;});
data.add(new Object[]{&quot;mangaluru-airport&quot;,&quot;IXE&quot;});

int randomIndex = ${__Random(0,4,)};

vars.put(&quot;C_Airport&quot;,(String) data[randomIndex][0]);
vars.put(&quot;C_AirportCode&quot;,(String) data[randomIndex][1]);</stringProp>
        </JSR223Sampler>
        <hashTree>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">prev.setIgnore();</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="false"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T1_Launch" enabled="false">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-90 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/sitecore/content/AirportHome/FlightSearch/AdaniAirportList</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">{B5AC63B3-9934-4423-8FF9-F619303AC8DF}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">6dffda4d-022b-4c8b-a4bd-0c9edb2f5b2e</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-66 /FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1pzGYazkrEcEY/QnNbb2hwcAY/Oh/wyfHRlM0I" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1pzGYazkrEcEY/QnNbb2hwcAY/Oh/wyfHRlM0I</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;sensor_data&quot;:&quot;3;0;1;0;3228741;PmwpWWDGwKeYURU87vOh/hSJqy0RDaViqIoiKkE6oUU=;79,168,0,1,31,130;\&quot;|a@;%lB~H]fOyE1o#p!{\&quot;y\&quot;&gt;H[\&quot;PSv/xLN5*Yh9\&quot;$`VI\&quot;w\&quot;VVKkAX`0ufCGDMkj-nfM|I@(dT!$4e&lt;iUs[JMnz}voxVXZVPB04 a@E\&quot;u\&quot;]gi\&quot;TI3GHqn\&quot;|A&lt;\&quot;3s!4[3$s}} }*^X~\&quot;TvH\&quot;QGkz5@sk\&quot;$~]\&quot;u(Yiy03#v! xCy=bs\&quot;)9:W\&quot;T\&quot;\&quot;D\&quot;?bA\&quot;mzJc9\&quot;mu&lt;\&quot;$\&quot;\&quot;D\&quot; G&gt;\&quot;RGov&lt;H_\&quot;Gp0m` )&gt;##(798Gn[fWHfeLl64i}hj}N&amp;Tqa;S@|ff%zzDHenzIS%oc^ntN|Kmz/p!=kXu?*y&gt;n[^4N+4e{zBpc DU6S&gt;hO{HQLST jQq26`oBh\&quot;!N.\&quot;J|)\&quot;o(^`J-Ba?T%v\&quot;2f!f\&quot;_%=h?q$&lt;\&quot;*g;\&quot;:Q~\&quot;f\&quot;\&quot;r\&quot;j$E\&quot;;N\&quot;,|C\&quot;axQQ/.5!1lFD^}\&quot; D&gt;\&quot;Gwm%aQvK\&quot;&amp; \&quot;;\&quot;7o@ 8]azP4RR&amp;[H.*ahL4]:&gt;[B(:Jm7qV\&quot;Y\&quot;&gt;f(\&quot;G\&quot;M$j4(k#:a.Ws_4ybHj&amp;qr^}C~-U0?M]wPZo55LqfeLk\&quot;|DJ\&quot;+9]\&quot;.n?C!f7Sv(\&quot;j*8\&quot;.\&quot;y.#)$sc=c+ux9N8iZ?.lV;y4TOCo2tZhcle!l}RQg:98Tq]6/xkLI w3U\&quot;S\&quot;*%m\&quot;?\&quot;\&quot;`\&quot;O/2\&quot;MJM})}U\&quot;+| z\&quot;u)fhe:PX=\&quot;&lt;T\&quot;J\&quot;W@CtK6N%W9}+$ycuUG$URY7jles|?Gq~ U]MbdJ+ON8Zu2x!d[^&lt;AV%b8=e`6Mp0z{R&gt;z.;+&gt;oz+LZh[&lt;Z*^wLT5I5Gr&gt;7*&gt;x,0vPi$[5dVtm|^iQQ1qC/2v-4v(za&lt;JmqM&lt;%HV=#1~&lt;2%BeOtDXw&lt;2w/5b)[{[r&gt;HoH`C`TDku7B[j.5&lt;2o2gLOesB1+? m\&quot;\&quot;d\&quot;,X{\&quot;581ge\&quot;/Tox\&quot;)CtvN%+\&quot;pX5n\&quot;9\&quot;9m[7Y(|dts!T5Yf.PF~OF&amp;=7A6F)qms0gcZ.dfcQ5Z)!Cp&amp;uts&lt;P!WL;)TJP?wR|\&quot;/x!l\&quot;$^zVt\&quot; dj\&quot;#%n\&quot;~}PO&gt;A\&quot;\&quot;X\&quot;a$a\&quot;Bm[eO*6\&quot;7n5j(V`\&quot;zGhuExhI5}$VTw@QW\&quot;p{3\&quot;K\&quot;V\&quot;]AO\&quot; $w\&quot;ON*G$C\&quot;@Z1B@\&quot;k2x\&quot;btQh}\&quot;@fFs;\&quot;`F5M\&quot;n?&lt;+{zj\&quot;N$m\&quot;bS0YW\&quot;RI9\&quot;pP!Er.&amp;q!X2\&quot;e&lt;\&quot;qqbKw&lt;\&quot;qfn!A#NI+uSC{f\&quot;%%|\&quot;SDu\&quot;M\&quot;KcMe\&quot;!\&quot;UUW\&quot;b\&quot;vtVL\&quot;ua:\&quot;u`r\&quot;4x`mi!l.$\&quot;uW%\&quot;|\&quot;\&quot;X&amp;9\&quot;jiC\&quot;S1Wolfp\&quot;ORwqqt !_ =W38=MyIb 3 XXVU43$X}ll&lt;x{z?D:&amp;jh}\&quot;V\&quot;xUH\&quot;gUcNeI.m4\&quot;&gt;$fUv\&quot;E\&quot;U*&amp;BJ`!ajzeWAs1.\&quot;d\&quot;90|\&quot;9H(nlq 8_\&quot;}6fn\&quot;x\&quot;\&quot;%\&quot;(,w\&quot;Pj]z`\&quot;6n\&quot;z\&quot;;NQq\&quot;Y\&quot;07u\&quot;K+z8S#}o\&quot; zA\&quot;0{rW6\&quot;vm;\&quot;,\&quot;r&gt;g?Z/&gt;E@0WqaFYZnyDIqr(ecsA73AX4LwS(M~4FH=l-$lv/LI$6WjoY`&amp;UCHYvYlK&amp;f6s|?93i..x&lt;Gp Jh5DaFD~JHDk&amp;g6uP-eAa} /[&amp;/0@X-?x4jp5+1`95Ir3|E)bZ0o-U`tKu(+Ob0S0E|:bZYJ%4/c,qM7zpE)^*8K fyt9Z2TGd@[+(:u^pqMxi;:|)eFxKbiXCN`%E)Q&lt;gIqBF^6&amp;8R,dT06u~cY)^#:(cy&amp;]#lI)bKx8XmaMgxZ:/n#kzWU5y L&gt;,K\&quot;4\&quot;{jF\&quot;K`E+ZBb\&quot;wc=?7`\&quot;\&quot;8&lt;n\&quot;`3;\&quot;h\&quot;U(yPG6{S\&quot;L\&quot;L;g\&quot;&gt;Jl\&quot;aQzi\&quot;s\&quot;\&quot;P\&quot;zOv\&quot;U\&quot;*{h\&quot;|s&amp;\&quot;D?k\&quot;[\&quot;&gt;+PNfRhUG\&quot;,D,\&quot;{e?\&quot;L\&quot;()\&quot;Ks5\&quot;;_2(\&quot;UHeP`hI\&quot;~V\&quot;u7R\&quot;]628\&quot;R\&quot;0+([irswEVnRFHww6%1^_q%MVh4_6_3f,DSG-p){`zz=I}}O\&quot;TkA\&quot;#-i\&quot;pPdSdZlU\&quot;ma\&quot;C!H]Y\&quot;s:J\&quot;h\&quot;Vk&lt;)n\&quot;\&quot;22w\&quot;#3D\&quot;sfH8Gi8$!\&quot;QO5B\&quot;Xs$aSp$LpdY\&quot;imE\&quot;kbi|bb\&quot;fU_B7X9z.IFK7RAmYr-&lt;kY`&amp;5!XfL9S#m1#3dS^+4]Z&gt;X ;69UD)MC-W/%0xZRSQ\&quot;`($\&quot;wS,\&quot;h0CTAE)$-{&gt;?o P,1IRq\&quot;6\&quot;N4r\&quot;0S3X5Om\&quot;;&lt;LuRC&lt;da6_$D~;\&quot;A\&quot;Z&gt;=\&quot;/\&quot;\&quot;L\&quot;XWv\&quot;LqjUY463QM6P\&quot;,m0\&quot;yqLhpqm]b\&quot;wXM\&quot;Id-| Vjmj\&quot;5h8\&quot;l\&quot;\&quot;n|w\&quot;3OE\&quot;#YD:z`P6\&quot;.)M\&quot;:\&quot;K~7tD0QJ\&quot;{8;\&quot;Q[|\&quot;QFstP\&quot;(}o\&quot;s$l*6bLuI-g\&quot;x(\&quot;G\&quot;B-DYAigKXOQ22\&quot;C\&quot;ePD\&quot;Ak-%P\&quot;n`%\&quot;@HC6R d@9*4~6(&amp;XJU5|h4I1bO++cQ$],&lt;85e eEP=IH\&quot;P\&quot;sb&amp;\&quot;u\&quot;\&quot;A4]\&quot;%!u\&quot;i=Xi**XqrW^&gt;_[\&quot;^iK\&quot;52P\&quot;q.q\&quot;{XP1@$y\&quot;\&quot;_\&quot;}8M\&quot;i\&quot;s\&quot;,-&lt;\&quot; Fj\&quot;Ol7eZE:p\&quot;X80^73GqQ\&quot;0RF\&quot;jr3\&quot;]\&quot;@KJP6PbwC(lJYg-U!&gt;iXqZkBXS_}*GX{!]75#j9)&amp; W\&quot;VRC\&quot;RUh\&quot;Y\&quot;N\&quot;nRO\&quot;|D7\&quot;^@ReN$vx \&quot;,2%%\&quot;&gt;n)zrM.\&quot;N\&quot; Jk\&quot;G&gt;Q\&quot;F\&quot;\&quot;c\&quot;3t5\&quot;2\&quot;|}&lt;N1\&quot;=;p\&quot;pFl\&quot;,\&quot;{\&quot;E`:\&quot;@iF\&quot;uio.;\&quot;]Qq\&quot;j\&quot;\&quot;@\&quot;*%\&quot;V}G^L-\&quot;D\&quot;zYv\&quot;4M`\&quot;Y{}.19bxc\&quot;hZ-\&quot;B\&quot;A\&quot;B?H\&quot;[|\&quot;&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-51 /FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1pzGYazkrEcEY/QnNbb2hwcAY/Oh/wyfHRlM0I" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1pzGYazkrEcEY/QnNbb2hwcAY/Oh/wyfHRlM0I</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;sensor_data&quot;:&quot;3;0;1;2048;3228741;PmwpWWDGwKeYURU87vOh/hSJqy0RDaViqIoiKkE6oUU=;147,0,0,1,63,0;%\&quot;@lt\&quot;m\&quot;=|B?tAWFT;&gt;C:ME,oKB2E+&lt;GU7HN;=5&amp;kb[M/)$c- pm\&quot;y\&quot;Z[E\&quot;k`U2L\&quot;lXI\&quot;m\&quot;\&quot;+\&quot;iUf\&quot;;\&quot;q*&amp;\&quot;G\&quot;LRZ\&quot;&gt;rmd-Xy\&quot;N\&quot;E?2\&quot;X,Z\&quot;@\&quot;\&quot;&gt;\&quot;&amp;0^\&quot;HKKN&gt;\&quot;Q[q7\&quot;-\&quot;.KTVd\&quot;L/Z\&quot;kA)\&quot;Pib1&gt;\&quot;c.t\&quot;}\&quot;\&quot;#\&quot;fvj\&quot;2F;:6&amp;\&quot;#=n=\&quot;^SnX4=yR\&quot;\&quot;{\&quot;yLP\&quot;@&gt;/jqCix[g6\&quot;)7\&quot;&gt;H7oz\&quot;I,Hn\&quot;M5}|;r)\&quot;$F\&quot;^h{\&quot;iC;V\&quot;2\&quot;=\&quot;g\&quot;?N-\&quot;P\&quot;mQIe:tmps6:bq\&quot;5\&quot;nW~\&quot;hZcL+!YeZb\&quot;&gt;RS\&quot;CgN4HD\&quot;o.Un\&quot;[\&quot;mA0SF\&quot;B0C\&quot;@!e\&quot;j*$&amp;Nur`\&quot;q;O\&quot;l\&quot;0S\&quot;9\&quot;r%s\&quot;1b{s4\&quot;En\&quot;4*+Ex#($+U X}PO9hyJL\&quot;Q\&quot;!_D\&quot;#\&quot;H*Qsy2aI\&quot;7Zk\&quot;W)R\&quot;c\&quot;\&quot;+\&quot;z69\&quot;[c_\&quot;~r]J\&quot;kcvH&lt;EVt-Gj}D&amp;:dk{Y@ZV.`&lt;-t\&quot;&gt;1p\&quot;C\&quot;hE\&quot;9\&quot;DtT\&quot;5^6\&quot;ut6\&quot;*6?n0S3;*,bc-Vt)\&quot;Gb0\&quot;5G6\&quot;P&amp;N\&quot;k\&quot;\&quot;Y\&quot;aI\&quot;G3/Z1xrIu#1YBk~R#Y9*\&quot;Bg\&quot;&amp;:  2\&quot;4V\&quot; ,tWeJ&gt;F^vue\&quot;1{G\&quot;D*\&quot;E5g\&quot;8!!\&quot;@~[lPfV\&quot;Cb@\&quot;u:-3F\&quot;@m\&quot;)lRU%f3B\&quot;AZ9\&quot;4\&quot;\&quot;AMQ\&quot;C@!\&quot;MK&lt;r&amp;\&quot;BUI\&quot;C\&quot;\&quot;g\&quot;4A&lt;\&quot;k\&quot;\&quot;U\&quot;aU)\&quot;`@2;@\&quot;~R2\&quot;)\&quot;|yhw[5%V[U&lt;kr]o#9Gu$ ~xQ&gt;HN&amp;[O&lt;@2z}AMNZ7?V0*ON`h37,CYVR5DiyS.1&amp;&lt;e{NkQR%pwcM3qb+/T RPk8mQ1=FAodw6Nee~qyY.I3shmoy(Eb5@ S%n^(Q/9ie{}7n0 4gYp9)y{R9]/`4qBKoJKr)ycop1:Xj(Gh[Lm^XOgtM^MqJcFRdl]{Bnkl uxPR(0@!}H{nh*-h*\&quot;$eB\&quot;T\&quot;n[1Z\&quot;8`X\&quot;0Rp\&quot;p3 s8x`\&quot;l5|\&quot;O\&quot;\&quot;8\&quot;lGE\&quot;8ab4X8XmK[\&quot;3Z@L\&quot;*\&quot;\&quot;4d?\&quot;]/o\&quot;W\&quot;\&quot;;\&quot;y9W\&quot;3\&quot;y\&quot;e.U\&quot;z~%\&quot;pty?zaA4_8tTWFs\&quot;D::\&quot;8H~&lt;6^6UtN`VP\&quot;\&quot;-mQ\&quot;jSg\&quot;U\&quot;PSlW=MNyA+Y;pK\&quot;(B=\&quot;r}%\&quot;l\&quot;q#dbIf+j[ukz+1o8}I?iFs;\&quot;UJ1G\&quot;n\&quot;\&quot; \&quot;aO&gt;\&quot;M&amp;=`N0YW\&quot;`2{\&quot;p\&quot;G6&gt;q2\&quot;!X2\&quot;ZLX?r\&quot;pH4Wyiik:i\&quot;,hK\&quot;Iz[]7+;L^f.\&quot;)9.C\&quot;i=!2W%s!S4\&quot;U.2k\&quot;oMg7-8d-|`me~ 3:E*+C{nyBqW9&lt;$.ebN,`23;g=+s,1\&quot;H\&quot;?PD\&quot;8\&quot;Fx H&gt;|}lJ&lt;yv=nHoIBy_|@EZ&gt;*k@|=EN8ewn5J3G&lt;E4BzlxU\&quot;/}k\&quot;}}B\&quot;RWlY`:\&quot; +k\&quot;eDIIO\&quot;G@@u\&quot;9K$Yf_\&quot; L^*2fm\&quot;x\&quot;n+\&quot;&lt;G/\&quot;&amp;B@d\&quot;%\&quot;;\&quot;`$*XUl{9U]`+gB4\&quot;\&quot;O\&quot;]b[\&quot;A\&quot;\&quot; \&quot;X&gt;2\&quot;=\&quot;}Yl4P~9B^*;;3V2U4!;5_&gt;h?pl#iiddtnBW4&lt;fX0BpA-%x;XV;4]0L)=ZbodL{i`js,JY._Gg]4xglJ+z*n~Lc~k1G^H?zFJAXD/fL4j_Db+x0[\&quot;y()\&quot;d%]\&quot;l\&quot;\&quot;+\&quot;?|{\&quot;y+sE-PZr\&quot;s-4\&quot;S\&quot;$\&quot;8%!\&quot;nR\&quot;DbGY3\&quot;uzh\&quot;x\&quot;j[EykX^pzZAoQl/n\&quot;8\&quot;u8m\&quot;CxfmeD^\&quot;)ve\&quot;dM SgmG=8\&quot;d%c B\&quot;Rn&amp;AH\&quot;cq:e\&quot;X\&quot;\&quot;p\&quot;I.k\&quot;!9}P]^f c(m1SsCF`E\&quot;AY\&quot;C4i`GHfO.IXT5!*9kaH-pPHNE=\&quot;V.[\&quot;)\&quot;24-.&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-59 /akam/13/pixel_51e350d1" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/akam/13/pixel_51e350d1</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ap" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ap</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="bt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">bt</stringProp>
                    <stringProp name="Argument.value">{&quot;charging&quot;:true,&quot;chargingTime&quot;:0,&quot;dischargingTime&quot;:&quot;Infinity&quot;,&quot;level&quot;:1,&quot;onchargingchange&quot;:null,&quot;onchargingtimechange&quot;:null,&quot;ondischargingtimechange&quot;:null,&quot;onlevelchange&quot;:null}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fonts" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fonts</stringProp>
                    <stringProp name="Argument.value">null</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fh" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fh</stringProp>
                    <stringProp name="Argument.value">null</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="timing" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">timing</stringProp>
                    <stringProp name="Argument.value">{&quot;1&quot;:79,&quot;2&quot;:188,&quot;3&quot;:328,&quot;4&quot;:600,&quot;profile&quot;:{&quot;bp&quot;:2,&quot;sr&quot;:8,&quot;dp&quot;:3,&quot;lt&quot;:0,&quot;ps&quot;:2,&quot;cv&quot;:34,&quot;fp&quot;:0,&quot;sp&quot;:0,&quot;br&quot;:1,&quot;ieps&quot;:0,&quot;av&quot;:0,&quot;z1&quot;:22,&quot;jsv&quot;:1,&quot;nav&quot;:0,&quot;nap&quot;:3,&quot;crc&quot;:1,&quot;z2&quot;:1,&quot;z3&quot;:1,&quot;z4&quot;:0},&quot;main&quot;:8122,&quot;compute&quot;:79,&quot;send&quot;:600}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="bp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">bp</stringProp>
                    <stringProp name="Argument.value">2087755996,1953464915,591862434,325835597,1068473606,-1382186647,-365096851,-1979186206,-108039040,-1906852049</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sr" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sr</stringProp>
                    <stringProp name="Argument.value">{&quot;inner&quot;:[1280,585],&quot;outer&quot;:[1280,672],&quot;screen&quot;:[0,0],&quot;pageOffset&quot;:[0,0],&quot;avail&quot;:[1280,672],&quot;size&quot;:[1280,720],&quot;client&quot;:[1263,5636],&quot;colorDepth&quot;:24,&quot;pixelDepth&quot;:24}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dp</stringProp>
                    <stringProp name="Argument.value">{&quot;XDomainRequest&quot;:0,&quot;createPopup&quot;:0,&quot;removeEventListener&quot;:1,&quot;globalStorage&quot;:0,&quot;openDatabase&quot;:0,&quot;indexedDB&quot;:1,&quot;attachEvent&quot;:0,&quot;ActiveXObject&quot;:0,&quot;dispatchEvent&quot;:1,&quot;addBehavior&quot;:0,&quot;addEventListener&quot;:1,&quot;detachEvent&quot;:0,&quot;fireEvent&quot;:0,&quot;MutationObserver&quot;:1,&quot;HTMLMenuItemElement&quot;:0,&quot;Int8Array&quot;:1,&quot;postMessage&quot;:1,&quot;querySelector&quot;:1,&quot;getElementsByClassName&quot;:1,&quot;images&quot;:1,&quot;compatMode&quot;:&quot;CSS1Compat&quot;,&quot;documentMode&quot;:0,&quot;all&quot;:1,&quot;now&quot;:1,&quot;contextMenu&quot;:0}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">lt</stringProp>
                    <stringProp name="Argument.value">1738745198426+5.5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ps" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ps</stringProp>
                    <stringProp name="Argument.value">true,true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="cv" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cv</stringProp>
                    <stringProp name="Argument.value">3f2ba45eea7a02b4fa8b1380f69df572c6ddc28c</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fp</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sp</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="br" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">br</stringProp>
                    <stringProp name="Argument.value">Chrome</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ieps" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ieps</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="av" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">av</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="z" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">z</stringProp>
                    <stringProp name="Argument.value">{&quot;a&quot;:1373852002,&quot;b&quot;:1,&quot;c&quot;:1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="zh" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">zh</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="jsv" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">jsv</stringProp>
                    <stringProp name="Argument.value">1.5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="nav" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">nav</stringProp>
                    <stringProp name="Argument.value">{&quot;userAgent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36&quot;,&quot;appName&quot;:&quot;Netscape&quot;,&quot;appCodeName&quot;:&quot;Mozilla&quot;,&quot;appVersion&quot;:&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36&quot;,&quot;appMinorVersion&quot;:0,&quot;product&quot;:&quot;Gecko&quot;,&quot;productSub&quot;:&quot;20030107&quot;,&quot;vendor&quot;:&quot;Google Inc.&quot;,&quot;vendorSub&quot;:&quot;&quot;,&quot;buildID&quot;:0,&quot;platform&quot;:&quot;Win32&quot;,&quot;oscpu&quot;:0,&quot;hardwareConcurrency&quot;:4,&quot;language&quot;:&quot;en-US&quot;,&quot;languages&quot;:[&quot;en-US&quot;],&quot;systemLanguage&quot;:0,&quot;userLanguage&quot;:0,&quot;doNotTrack&quot;:null,&quot;msDoNotTrack&quot;:0,&quot;cookieEnabled&quot;:true,&quot;geolocation&quot;:1,&quot;vibrate&quot;:1,&quot;maxTouchPoints&quot;:0,&quot;webdriver&quot;:false,&quot;plugins&quot;:[&quot;PDF Viewer&quot;,&quot;Chrome PDF Viewer&quot;,&quot;Chromium PDF Viewer&quot;,&quot;Microsoft Edge PDF Viewer&quot;,&quot;WebKit built-in PDF&quot;]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="crc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">crc</stringProp>
                    <stringProp name="Argument.value">{&quot;window.chrome&quot;:{&quot;app&quot;:{&quot;isInstalled&quot;:false,&quot;InstallState&quot;:{&quot;DISABLED&quot;:&quot;disabled&quot;,&quot;INSTALLED&quot;:&quot;installed&quot;,&quot;NOT_INSTALLED&quot;:&quot;not_installed&quot;},&quot;RunningState&quot;:{&quot;CANNOT_RUN&quot;:&quot;cannot_run&quot;,&quot;READY_TO_RUN&quot;:&quot;ready_to_run&quot;,&quot;RUNNING&quot;:&quot;running&quot;}}}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="t" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">t</stringProp>
                    <stringProp name="Argument.value">4a3d7ded883b4bc009031833655fe81a75d47032</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="u" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">u</stringProp>
                    <stringProp name="Argument.value">7138950595d65ec7bf5b2fd9b1ad12e9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="nap" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nap</stringProp>
                    <stringProp name="Argument.value">11311144241322244122</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-87 /home/_next/static/chunks/4949.f594a1d4cc6104b0.js" enabled="false">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/home/_next/static/chunks/4949.f594a1d4cc6104b0.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-20 /FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1pzGYazkrEcEY/QnNbb2hwcAY/Oh/wyfHRlM0I" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1pzGYazkrEcEY/QnNbb2hwcAY/Oh/wyfHRlM0I</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-41 /FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1zi/Ykk-b2hwcAY/bE/dvcE13SRUq" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1zi/Ykk-b2hwcAY/bE/dvcE13SRUq</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-3 /static-assets/js/common.js" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/static-assets/js/common.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-85 /home/_next/static/chunks/1016.223fb5f4a2464b28.js" enabled="false">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/home/_next/static/chunks/1016.223fb5f4a2464b28.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-2 /" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-71 /-/media/Project/Campaigns/Valentine-s-Day/Dark-Icon/web-Icon/federal.png" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Campaigns/Valentine-s-Day/Dark-Icon/web-Icon/federal.png</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T2_Click_ON_Login" enabled="false">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-148 /login" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/login</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-156 /FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1pzGYazkrEcEY/QnNbb2hwcAY/Oh/wyfHRlM0I" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/FuGUUbW9wK36z/a9fSXu/jP2RAIcQ/1uE1pzGYazkrEcEY/QnNbb2hwcAY/Oh/wyfHRlM0I</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-188 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/CountrySelected</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">{B5AC63B3-9934-4423-8FF9-F619303AC8DF}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">cmn</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-195 /manifest.json" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/manifest.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-199 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/sitecore/content/AirportHome/FlightSearch/Other-Airport-App/FooterData</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">{B5AC63B3-9934-4423-8FF9-F619303AC8DF}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">cmn</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T3_Enter_Number_And_Validate" enabled="false">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,271 /akam/13/51e350d1" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/akam/13/51e350d1</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,274 /flight/statics/fonts/fontello/fontello.woff2" enabled="false">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/flight/statics/fonts/fontello/fontello.woff2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="_v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_v</stringProp>
                    <stringProp name="Argument.value">960412</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://assets.adanione.com/flight/statics/css/cdn/bundles/libs/default/updated-wm.css?_v=undefined</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">font</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,273 /flight/statics/fonts/fontello/fontello.woff2" enabled="false">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/flight/statics/fonts/fontello/fontello.woff2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="_v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_v</stringProp>
                    <stringProp name="Argument.value">96041</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://assets.adanione.com/flight/statics/css/cdn/bundles/libs/default/updated-wm.css?_v=undefined</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">font</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,244 /api/identityproviderv2/api/v2/AuthenticateApiv2/SendOtp?ref=web&amp;org=shared" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/SendOtp?ref=web&amp;org=shared</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;PhoneNumber&quot;:&quot;7618831881&quot;,&quot;CountryCode&quot;:&quot;91&quot;,&quot;isWhatsapp&quot;:false,&quot;ResendOtp&quot;:false,&quot;isPrivacyAndTcConsent&quot;:true,&quot;isGDPRConsent&quot;:false,&quot;CountryISOCode&quot;:&quot;IND&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/login</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="audience" elementType="Header">
                    <stringProp name="Header.name">audience</stringProp>
                    <stringProp name="Header.value">https://localhost:7137</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="ContentType" elementType="Header">
                    <stringProp name="Header.name">ContentType</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="source" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="RegexExtractor.refname">source</stringProp>
                <stringProp name="RegexExtractor.regex">SOURCE:\s+(.+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NF</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,277 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscription-key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">subscription-key</stringProp>
                    <stringProp name="Argument.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="customer" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">customer</stringProp>
                    <stringProp name="Argument.value">aHPRLeQ+kafL/0by6p8CppUD9h2WM0HH2Ddeso9dKIY0N8xdjPAOcjMAfck0lTlD9/sS1xev9JkiqkMGNgu8HQuG7/9Wi2kWh62nQuloAGfkiLcQ6N2E7JsCs5GBmnL785wNHxDkkal8DiriiICcpRjTm6sBz7AneJ2fVwGv8FG9BKN2jQD9vi3A3Eu8tsYAiAOivJYI5sM0MDPfQ02B19QLIXHzQMM49SHKy971BF1QorfoQhjV7Fl3TNGl04BRQBY2veZqWT5iKBGgcye782C+ZVvFW1tOHZKrZeCI/EJzeHYZMAGGYAWdEgZEKW+Pmt+pnhXkLIZZ7qNg3Hlfsg==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,270 /flight/statics/css/cdn/bundles/verticals/booking/default/widgets/be/base.css" enabled="false">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/flight/statics/css/cdn/bundles/verticals/booking/default/widgets/be/base.css</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="_v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_v</stringProp>
                    <stringProp name="Argument.value">u2jGL08rgvcss</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">style</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,258 /api/identityproviderv2/api/v2/AuthenticateApiv2/ValidateOtpV3?ref=web&amp;org=shared" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/ValidateOtpV3?ref=web&amp;org=shared</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;Source&quot;:&quot;${source}&quot;,&quot;OtpCode&quot;:&quot;759236c20bf06ca967d40cbb51575446486693f1330f13f76850db1e55442590&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/login</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="audience" elementType="Header">
                    <stringProp name="Header.name">audience</stringProp>
                    <stringProp name="Header.value">https://localhost:7137</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="ContentType" elementType="Header">
                    <stringProp name="Header.name">ContentType</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BearerToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">BearerToken</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;accessToken&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NF</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,268 /flight/statics/js/cdn/bundles/libs/core.js" enabled="false">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/flight/statics/js/cdn/bundles/libs/core.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="_v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_v</stringProp>
                    <stringProp name="Argument.value">undefined</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,276 /api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceid" elementType="Header">
                    <stringProp name="Header.name">traceid</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="audience" elementType="Header">
                    <stringProp name="Header.name">audience</stringProp>
                    <stringProp name="Header.value">https://localhost:7137</stringProp>
                  </elementProp>
                  <elementProp name="clientid" elementType="Header">
                    <stringProp name="Header.name">clientid</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="ocp-apim-subscription-key" elementType="Header">
                    <stringProp name="Header.name">ocp-apim-subscription-key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="channelid" elementType="Header">
                    <stringProp name="Header.name">channelid</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,259 /api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">shared</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/login</stringProp>
                  </elementProp>
                  <elementProp name="audience" elementType="Header">
                    <stringProp name="Header.name">audience</stringProp>
                    <stringProp name="Header.value">https://localhost:7137</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="ContentType" elementType="Header">
                    <stringProp name="Header.name">ContentType</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,275 /manifest.json" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/manifest.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,281 /api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">cmn</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,269 /flight/statics/css/cdn/bundles/libs/default/updated-wm.css" enabled="false">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/flight/statics/css/cdn/bundles/libs/default/updated-wm.css</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="_v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_v</stringProp>
                    <stringProp name="Argument.value">undefined</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">style</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
              <collectionProp name="AuthManager.auth_list">
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/identityproviderv2/api/v2/AuthenticateApiv2/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/authenticatorv2/api/MyBooking/getActiveCart/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/lending/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/authenticatorv2/api/User/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/loyaltyv2/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/flight-tracker/api/saveflight/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/dutyfreeservicev2/api/DutyFree/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://android.clients.google.com/c2dm/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/loyaltyv2/point/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/dutyfreeservicev2/api/DutyFreeV2/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/dutyfreeservicev2/api/DutyFree/validateCart/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/commonservicev2/api/Whatsapp/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Authorization">
                  <stringProp name="Authorization.url">https://www.adanione.com/api/paymentv2/emi/</stringProp>
                  <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                  <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                  <stringProp name="Authorization.domain"></stringProp>
                  <stringProp name="Authorization.realm"></stringProp>
                  <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                </elementProp>
              </collectionProp>
              <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
            </AuthManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,278 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,283 /api/lending/profile" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/lending/profile</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,284 /api/authenticatorv2/api/User/GetLatestLobDetails" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/User/GetLatestLobDetails</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="CustomerId" elementType="Header">
                    <stringProp name="Header.name">CustomerId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,285 /flight/statics/js/cdn/bundles/libs/core.js" enabled="true">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/flight/statics/js/cdn/bundles/libs/core.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="_v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_v</stringProp>
                    <stringProp name="Argument.value">u2jGL08rgv</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,288 /flight/statics/js/cdn/bundles/widgets/booking/be/base.js" enabled="false">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/flight/statics/js/cdn/bundles/widgets/booking/be/base.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="_v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_v</stringProp>
                    <stringProp name="Argument.value">u2jGL08rgv</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,282 /api/loyaltyv2/point" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/loyaltyv2/point</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="balanceTypes" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">balanceTypes</stringProp>
                    <stringProp name="Argument.value">available</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,287 /api/flight-tracker/api/saveflight/list" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/flight-tracker/api/saveflight/list</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,290 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/AirlineList</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fields" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fields</stringProp>
                    <stringProp name="Argument.value">all</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">B5AC63B3-9934-4423-8FF9-F619303AC8DF</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">cmn</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,293 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/AppAirportList</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">B5AC63B3-9934-4423-8FF9-F619303AC8DF</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">cmn</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T4_ClickON_Duty_Free" enabled="true">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,336 /services/duty-free" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/services/duty-free</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,311 /api/flight-tracker/api/saveflight/list" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/flight-tracker/api/saveflight/list</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,344 /pranaam-services/widget/core.js" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/pranaam-services/widget/core.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">08022025</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/services/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,360 /static-assets/js/common.js" enabled="true">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/static-assets/js/common.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,402 /pranaam-services/widget/core.js" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/pranaam-services/widget/core.js</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">10022025</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/services/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,373 /seopages/_next/static/media/web-icons.33531d45.woff2" enabled="true">
              <stringProp name="HTTPSampler.domain">assets.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/seopages/_next/static/media/web-icons.33531d45.woff2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://assets.adanione.com/seopages/_next/static/css/80850981fc65d3ab.css</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">font</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,404 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/services/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">974172ec5d004bd3bb75487ca400f97b</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,405 /api/loyaltyv2/point" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/loyaltyv2/point</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="balanceTypes" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">balanceTypes</stringProp>
                    <stringProp name="Argument.value">available</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/services/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">974172ec5d004bd3bb75487ca400f97b</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,408 /pranaam-services/api/widget" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/pranaam-services/api/widget</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;originUrl&quot;:&quot;https://www.adanione.com&quot;,&quot;shouldCache&quot;:true,&quot;container&quot;:&quot;pranaamPorterWidget&quot;,&quot;name&quot;:&quot;porter&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/services/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,407 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscription-key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">subscription-key</stringProp>
                    <stringProp name="Argument.value">974172ec5d004bd3bb75487ca400f97b</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="customer" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">customer</stringProp>
                    <stringProp name="Argument.value">QyAoKLhqVnls9qrrHHqD9zXiOEMOawoUJU8Jh+m8M/g2x96I3W/3UCkJkkWPsr+8LShrlHQs7zLEd3+ui3YMRmQIPBVhmccHwUKSMg8pLeCwQTTQux/B5CdKhKn/O8XWJaUvn1jrQmmFg1Ea3Oei0Q1YQerKAumEJvdUiYIaETuOwScyoMi6km3jUxtffbzadQS80XHM+vE7WGi9u2X1i7uB/fjWXt80r3jHJFPj93hDXcKCZn+MZgqhCRJvZY2P0MLr69ENY4z63mtMSzxvarg0wccP9EE75TooXYePzwlCn4pdQirOR7oe7l8QsgAmWfVH4tJzz0wnsj11rVQuNw==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/services/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,406 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscription-key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">subscription-key</stringProp>
                    <stringProp name="Argument.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="customer" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">customer</stringProp>
                    <stringProp name="Argument.value">k0FGClhvGZOiJ78fjUVSn1t52DcM+dNi2J0aW0HjYc2wK2W+gu0yrEFM9qQALxF1CYSLk85CECAqYpKQEZAKgcjS+x4WfOgvTLI3K1qSG8ScC8z9lH4Nc9ARHdf6fPqWDe36qf0buwpyfktuIUQK0KXLHxsygpf27wfIq7t2YUTwgeJFh1VTFha4/FMM2YG6tJaOSd90uo1H1XJetmq0ghkrWyn8I7sOmP9mF0P64NXSgcWQ6tTAJc645z9ZX7jFrcpI0P9xin10TpO37/MX92XpWeSA6qMzgvFSv4g2CVOn2xs4WF8TEbIOSUPqxcDqMLHhggETA+v+mliQ7HqfuQ==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/services/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T5_Select_Airport" enabled="true">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,442 /svpia-ahmedabad-airport/duty-free" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/${P_Airport_Name}/duty-free</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/services/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String[] params = Parameters.split(&quot;,&quot;);
Random random = new Random();
String randomValue = params[random.nextInt(params.length)];
vars.put(&quot;C_storeType&quot;, randomValue);</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,475 /dutyfree/_next/static/media/web-icons.33531d45.woff2" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/dutyfree/_next/static/media/web-icons.33531d45.woff2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sa.adanione.com/dutyfree/_next/static/css/9971b759f8c2ab5c.css</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">font</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,476 /dutyfree/_next/static/media/lg-font.b6f57442.woff2" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/dutyfree/_next/static/media/lg-font.b6f57442.woff2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sa.adanione.com/dutyfree/_next/static/css/9971b759f8c2ab5c.css</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">font</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,536 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,538 /api/loyaltyv2/point" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/loyaltyv2/point</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="balanceTypes" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">balanceTypes</stringProp>
                    <stringProp name="Argument.value">available</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,540 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="language" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">language</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="airportCode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">airportCode</stringProp>
                    <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">df</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,537 /api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">cmn</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,541 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/sitecore/content/AirportHome/FlightSearch/AdaniAirportList</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">{B5AC63B3-9934-4423-8FF9-F619303AC8DF}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">df</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,543 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscription-key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">subscription-key</stringProp>
                    <stringProp name="Argument.value">974172ec5d004bd3bb75487ca400f97b</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="customer" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">customer</stringProp>
                    <stringProp name="Argument.value">QyAoKLhqVnls9qrrHHqD9zXiOEMOawoUJU8Jh+m8M/g2x96I3W/3UCkJkkWPsr+8LShrlHQs7zLEd3+ui3YMRmQIPBVhmccHwUKSMg8pLeCwQTTQux/B5CdKhKn/O8XWJaUvn1jrQmmFg1Ea3Oei0Q1YQerKAumEJvdUiYIaETuOwScyoMi6km3jUxtffbzadQS80XHM+vE7WGi9u2X1i7uB/fjWXt80r3jHJFPj93hDXcKCZn+MZgqhCRJvZY2P0MLr69ENY4z63mtMSzxvarg0wccP9EE75TooXYePzwlCn4pdQirOR7oe7l8QsgAmWfVH4tJzz0wnsj11rVQuNw==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,546 /manifest.json" enabled="false">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/manifest.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,545 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/sitecore/content/AirportHome/Cobrand/Co-Branding</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">{B5AC63B3-9934-4423-8FF9-F619303AC8DF}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="lob" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">lob</stringProp>
                    <stringProp name="Argument.value">dutyfree</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">cmn</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,548 /-/media/Project/Campaigns/Icici-co-brand/Icons-and-Illustrations---Touch-Points-Co-Branded/Both-card.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Campaigns/Icici-co-brand/Icons-and-Illustrations---Touch-Points-Co-Branded/Both-card.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,539 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/sitecore/content/airporthome/DutyFreeAirports/Ahmedabad/Dutyfree-Navigation</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">{B5AC63B3-9934-4423-8FF9-F619303AC8DF}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_storetype" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_storetype</stringProp>
                    <stringProp name="Argument.value">${C_storeType}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_airport" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_airport</stringProp>
                    <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_restricted" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_restricted</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_tobacco_restricted" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_tobacco_restricted</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">df</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T6_Select_T2_Departure_And_Age_Confirm" enabled="true">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,585 /svpia-ahmedabad-airport/duty-free" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/${P_Airport_Name}/duty-free</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="location" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">location</stringProp>
                    <stringProp name="Argument.value">${C_storeType}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BuildID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">BuildID</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;buildId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NF</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters">departure,arrival</stringProp>
                <stringProp name="script">String[] params = Parameters.split(&quot;,&quot;);
Random random = new Random();
String randomValue = params[random.nextInt(params.length)];
vars.put(&quot;C_storeType&quot;, randomValue);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,610 /dutyfree/_next/static/media/web-icons.120e32b4.woff2" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/dutyfree/_next/static/media/web-icons.120e32b4.woff2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://sa.adanione.com/dutyfree/_next/static/css/e672250710567c59.css</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">font</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,614 /api/loyaltyv2/point" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/loyaltyv2/point</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="balanceTypes" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">balanceTypes</stringProp>
                    <stringProp name="Argument.value">available</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,613 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">header</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,616 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="language" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">language</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="airportCode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">airportCode</stringProp>
                    <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">df</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,623 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscription-key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">subscription-key</stringProp>
                    <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="customer" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">customer</stringProp>
                    <stringProp name="Argument.value">RnuhG6NcRneW/nBlx1xUL1zn9/VjWB7JUz3Z7yp1lNnJLE3eq1g5+R76DI2ZJexthP4T5/UdcJuxEc7xy3PN1spydH3tG+M49wcABpqV3X7fn5FJhVI3dKWPoK7Ff4ay46c4WA6ZA6uN0Tz4Q174PQrikSa/V/kIjl0Ho0TPMU136lvFPrjtqWUYllbBYy7an4eGMvWWjKD2rnwRrvRR/mGRyqVXKOQ1q1kVn5dHjG1qHb4PPdt1w30Wmehp5Ac/UwlH7LQVcifhZIV7kwL2gpAfI8uhMg+5LIBi2qCN6YRBB7qcTSwKXiOaD2KzovzCk4uo9ZWbUylJeYiSeT2iSQ==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,627 /manifest.json" enabled="false">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/manifest.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,615 /sitecore/api/layout/placeholder/jss" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/sitecore/api/layout/placeholder/jss</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="placeholderName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">placeholderName</stringProp>
                    <stringProp name="Argument.value">main</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="item" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">item</stringProp>
                    <stringProp name="Argument.value">/sitecore/content/airporthome/DutyFreeAirports/Ahmedabad/Dutyfree-Navigation</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_lang" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_lang</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_apikey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sc_apikey</stringProp>
                    <stringProp name="Argument.value">{B5AC63B3-9934-4423-8FF9-F619303AC8DF}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_storetype" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_storetype</stringProp>
                    <stringProp name="Argument.value">${C_storeType}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_airport" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_airport</stringProp>
                    <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_restricted" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_restricted</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sc_tobacco_restricted" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sc_tobacco_restricted</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">df</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random_Product_Selector" enabled="true">
            <intProp name="InterleaveControl.style">1</intProp>
          </RandomController>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="click_on_Product_liquar" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T7_Click_Product_Liquar" enabled="true">
                <boolProp name="TransactionController.parent">true</boolProp>
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,650 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/liquor.json" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/liquor.json</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="location" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">location</stringProp>
                        <stringProp name="Argument.value">${C_storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airport" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airport</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="x-nextjs-data" elementType="Header">
                        <stringProp name="Header.name">x-nextjs-data</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Product_Name" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">Product_Name</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;productName&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">No_Value_Found</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SKU_CODE" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">SKU_CODE</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;skuCode&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NO_VALUE_FOUND</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SRC" enabled="false">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">SRC</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;src&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">No_Value_Found</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="StoreType" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">storeType</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;storeType&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NO_VALUE_fOUND</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="storecode" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">storecode</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;storeCode&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NF</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="price" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">price</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;price&quot;:(.+?),&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NF</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,657 /-/media/Foundation/Adani/Dutyfree/ProductImages/liquor/rum/amrut/02G01177/1_02G01177" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/liquor/rum/amrut/${SKU_CODE}/1_${SKU_CODE}</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,658 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Whisky/02N02009/1_TFG-2020-FINEST-1LTR-NEW-CAP-BOTTLE-CARTON-TRANSPARENT-BKGRD" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Whisky/02N02009/1_TFG-2020-FINEST-1LTR-NEW-CAP-BOTTLE-CARTON-TRANSPARENT-BKGRD</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,659 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Whisky/FamousGrouse/02N02382/1_Dig_flat_Sherry-Cask-Finish-bottle-packshot-1L02N02382" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Whisky/FamousGrouse/02N02382/1_Dig_flat_Sherry-Cask-Finish-bottle-packshot-1L02N02382</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,660 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Whisky/02N03325/02N03325" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Whisky/02N03325/02N03325</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,662 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="language" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">language</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/liquor?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,661 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">header</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/liquor?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">Web</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer ${Bearer_Token}</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,663 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/liquor?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,665 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="subscription-key" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">subscription-key</stringProp>
                        <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="customer" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">customer</stringProp>
                        <stringProp name="Argument.value">Bl6XjMA47HV7s5rhwVSylh1hRWLUK709HV1L1XahePhTmo/84MzQLoLTm9FI8Awzhg3SzcdgPVp4MPD5UDDVFN9rkSX/3YlO1dPIXNerCYH9OBWC783KqOuwIJSgrbqCHGkd+gZwK/dxnPA3AsZVbJwHnYf1YdAM7sJToCIWjtqUl225rfdy3ibd3acQUGqXupcLKt7yB4coAPOixc0+ucuZqkrcv9MjpmDlTLBpWVDR3SJuahzMWCGk1FGLETR0NRskaJGTRqnHdFuUxXOD99vw/OMlefgHOAkOnZiE1+7woPBbqorOpFOXWuIomufHorTtmFGuHgbWDm2LhznP/g==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/liquor?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,671 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Vodka/02F01145/02F01145" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Vodka/02F01145/02F01145</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,672 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01003/02E01003%20BOMBAY%20SAPPHIRE%20100%20CL" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01003/02E01003%20BOMBAY%20SAPPHIRE%20100%20CL</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,674 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01062/1_02E01062%20TANQUERAY%20SEVILLE%20100%20CL" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01062/1_02E01062%20TANQUERAY%20SEVILLE%20100%20CL</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,673 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Cognac/02C01004/02C01004" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Cognac/02C01004/02C01004</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T8_Click_ON_Liquar_Product_amrut-two-indies-rum-75cl " enabled="true">
                <boolProp name="TransactionController.parent">true</boolProp>
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,681 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/p/amrut-two-indies-rum-75cl/02G01177.json" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}.json</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="location" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">location</stringProp>
                        <stringProp name="Argument.value">${C_storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airport" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airport</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/liquor?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="x-nextjs-data" elementType="Header">
                        <stringProp name="Header.name">x-nextjs-data</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="src" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">src</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&quot;productImages&quot;:[&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot;]</stringProp>
                    <stringProp name="BoundaryExtractor.default">NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,688 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">header</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">Web</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,693 /-/media/Project/SVG%20image/Axixbanklogo" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Axixbanklogo</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,691 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="language" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">language</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,696 /-/media/Project/SVG-image/IDBI" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG-image/IDBI</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,695 /-/media/Project/SVG%20image/DBS-logo" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/DBS-logo</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,692 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,694 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="subscription-key" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">subscription-key</stringProp>
                        <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="customer" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">customer</stringProp>
                        <stringProp name="Argument.value">W1FbF/oaSnxhs5il0/rYg/y8L3gUTcLN3k2KSq019hWkTPCp5BJJhWHXx8DPH02jO/R9ogQx9gQ0NbOgFUoNwC10mjqVkVJcfj+lpc1O4LbBPySreBA50cDB5ixZsnxymxbjq1jsx5eXAF54iwu03kqoGCDaqW2DIyNagWZ65EQge/JEWBl6mlOVnlaWGniLMKfi1QSNcUXY06giqVYeaomOZLziZPDYrKRS0GK2pVraFXW1FNCcKaMecEhSIYAXz4xWBmyVfa/pBnkf0JUggRDALe12yELf8n1UBbqJeulhp1iTi2C5p1JbtKi8wvhutqjBYpkLxo1C2Cg0hNzghQ==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,698 /-/media/Project/SVG%20image/Federal" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Federal</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,697 /-/media/Project/SVG%20image/HSBC" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/HSBC</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,699 /-/media/Project/SVG%20image/Canara%20bank-1" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Canara%20bank-1</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,700 /-/media/Project/SVG%20image/mobikwik" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/mobikwik</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,689 /api/loyaltyv2/point/earning?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/loyaltyv2/point/earning?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;businessSubType&quot;:&quot;DutyFree&quot;,&quot;nonLoyaltyPaymentAmount&quot;:1800,&quot;saleItems&quot;:[{&quot;productCode&quot;:&quot;${SKU_CODE}&quot;,&quot;quantity&quot;:1,&quot;unitPrice&quot;:1800,&quot;taxableUnitPrice&quot;:1800}]}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,703 /static-assets/images/svg/coin.svg" enabled="true">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/static-assets/images/svg/coin.svg</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,690 /api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,704 /api/dutyfreeservicev2/api/DutyFree/GetPriceComparision" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetPriceComparision</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="skuCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">skuCode</stringProp>
                        <stringProp name="Argument.value">${SKU_CODE}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="storeType" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">storeType</stringProp>
                        <stringProp name="Argument.value">${C_storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,705 /-/media/Project/Campaigns/Valentine-s-Day/Duty-Free/1st-CVP/Offer---Filled-3.svg" enabled="true">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/Campaigns/Valentine-s-Day/Duty-Free/1st-CVP/Offer---Filled-3.svg</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Click_ON_Product_Beauty" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ClickON_Product_carollena " enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-740 /dutyfree/_next/data/ZGlizHSpcbK4Lxzl9nUEz/svpia-ahmedabad-airport/duty-free/beauty.json" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/beauty.json</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="location" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">location</stringProp>
                        <stringProp name="Argument.value">${C_storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airport" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airport</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="x-nextjs-data" elementType="Header">
                        <stringProp name="Header.name">x-nextjs-data</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Product_Name" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">Product_Name</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;productName&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">No_Value_Found</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">2</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SKU_CODE" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">SKU_CODE</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;skuCode&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NO_VALUE_FOUND</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">2</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SRC" enabled="false">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">SRC</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;src&quot;:&quot;(.+?)/06C01231/06C01231&quot;,</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">No_Value_Found</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">2</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="StoreType" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">storeType</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;storeType&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NO_VALUE_fOUND</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-754 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">header</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/beauty?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">Web</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer ${Bearer_Token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-757 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/beauty?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer ${Bearer_Token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-755 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="language" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">language</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/beauty?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer ${Bearer_Token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-759 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="subscription-key" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">subscription-key</stringProp>
                        <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="customer" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">customer</stringProp>
                        <stringProp name="Argument.value">qDk8d3nqE1w9S5RpVuaw1q6Fmm0HNcwLeql5L+hgpowt8ycS9Le7DKh5QF1kTZqHSvD+LICwTuWfytmPjC6MfCR3b2w/SsfB3dSDXOgzpqILGFoI85PEQmDkOVaDMcqLALAqwSVBEqpxuBMswcykSeHPNA9Wn3rfivCyRteukCz2zDERhRAnygAPCHMb85ghn50q8SwI8f/Db986hJmidcxiRhISJ9BNIJI2VsHKY8EItEJ8j+2yhsF22cDn86Yv5TZ66UwpFf+64/4Kat6are0YdawEQxdPVFGyoVcKMYOctmOMAmsvr0m5EOatgwIEg4GwHbW2CPU5HO2yFjOF4Q==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/beauty?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transaction Controller" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-798 /dutyfree/_next/data/ZGlizHSpcbK4Lxzl9nUEz/svpia-ahmedabad-airport/duty-free/p/calvin-klein-ck-be-edt-100ml-spray/06C01231.json" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}.json</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="location" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">location</stringProp>
                        <stringProp name="Argument.value">${C_storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airport" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airport</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/beauty?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="x-nextjs-data" elementType="Header">
                        <stringProp name="Header.name">x-nextjs-data</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-814 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="language" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">language</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer ${Bearer_Token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-818 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="subscription-key" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">subscription-key</stringProp>
                        <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="customer" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">customer</stringProp>
                        <stringProp name="Argument.value">Ts3Dd5wB2ylvJbp3vtMJ/2c/EWD3y9VZM1UGvVgrhe4t5EHNveN+1iqhbVOCLdZO/fHoL2Ddl15cu/taCy3D+QhrTNo+CPuFOGZScWqavtvJRJEHw5sKF20ECGJ0nNv16BUc5I3cs7Ms6ncCDoSGY9EbMXjqPMBbHoyjk9CM9cMC3eBnwdEGCpRx0xTZtJanXIAfAIhhVbLXoQmCYahhuvGb9mICjo3MabtlhLPJo1U5oCmU2G8f8WUJYWSH9TA+QnKGLevOGJcRxa8rQDrBBWGFOHCjfL66wyMDYjC9YgfAXN1BTAvhWeT9I7gtFMsfMHMOtwzcgcqLBFAGJSYe1Q==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-819 /-/media/Project/SVG%20image/Axixbanklogo" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Axixbanklogo</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-822 /-/media/Project/SVG%20image/DBS-logo" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/DBS-logo</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-825 /-/media/Project/SVG%20image/AU-Bank-3x" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/AU-Bank-3x</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-827 /-/media/Project/SVG-image/IDBI" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG-image/IDBI</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-828 /-/media/Project/SVG%20image/HSBC" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/HSBC</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-816 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer ${Bearer_Token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-830 /-/media/Project/SVG%20image/Federal" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Federal</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-813 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">header</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">Web</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer ${Bearer_Token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-831 /-/media/Project/SVG%20image/Canara%20bank-1" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Canara%20bank-1</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-833 /-/media/Project/SVG%20image/mobikwik" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/mobikwik</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-815 /api/loyaltyv2/point/earning?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/loyaltyv2/point/earning?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;businessSubType&quot;:&quot;DutyFree&quot;,&quot;nonLoyaltyPaymentAmount&quot;:3200,&quot;saleItems&quot;:[{&quot;productCode&quot;:&quot;${SKU_CODE}&quot;,&quot;quantity&quot;:1,&quot;unitPrice&quot;:3200,&quot;taxableUnitPrice&quot;:3200}]}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-836 /api/dutyfreeservicev2/api/DutyFree/GetPriceComparision" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetPriceComparision</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="skuCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">skuCode</stringProp>
                        <stringProp name="Argument.value">${SKU_CODE}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="storeType" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">storeType</stringProp>
                        <stringProp name="Argument.value">${storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer ${Bearer_Token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-817 /api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ClickON_Product_Confentionary" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ClickON_Product_Confentionary" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree/>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Click_ON_Product_Butlers_Mixed" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller_Departure" enabled="false">
            <stringProp name="IfController.condition">&quot;${C_storeType}&quot;==&quot;departure&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">true</boolProp>
            <boolProp name="IfController.useExpression">false</boolProp>
          </IfController>
          <hashTree>
            <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
              <intProp name="InterleaveControl.style">1</intProp>
            </RandomController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Cart" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Add_To_Cart" enabled="true">
                  <boolProp name="TransactionController.parent">true</boolProp>
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                </TransactionController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,707 /8NOD/G6ny/ww/0kDk/azIQ/pEurGJh9bYmciD/SnYEAg/W0lzVi/VHcDU" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                    <stringProp name="HTTPSampler.path">/8NOD/G6ny/ww/0kDk/azIQ/pEurGJh9bYmciD/SnYEAg/W0lzVi/VHcDU</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;sensor_data&quot;:&quot;3;0;1;0;3294520;eJuRaXhSX6t5P1V/nc686Pfwx29VatKYm+eR69kgARU=;114,2,0,1,13,242;\&quot;a~^]Z\&quot;mXO^V5E~5bGQalYF+c]k[!=  iqEJ`aWn&gt;LoM2n^GVg.\&quot;G\&quot;j*m\&quot;rkq-C\&quot;yp9\&quot;h3wq!O`Q@PLoQcH\&quot;rLl\&quot;4\&quot;\&quot;d\&quot;{C\&quot;^\&quot;\&quot;,\&quot;VK[\&quot;#\&quot;\&quot;;PN\&quot;]zV\&quot;kUevl&gt;\&quot;Rc4V\&quot;w\&quot;{+8(p-L4v%|9=_^74 +i3bX5ySX7Z:U-BndmC+&amp;2W6gQ3(\&quot;9UJ\&quot;zDZ\&quot;#\&quot;qUdAzsgKHnl%4M@5\&quot;k\&quot;#Sk\&quot;]fW?$IPkQ\&quot;$Q9\&quot;r&lt;X!/\&quot;sR)q\&quot;KPe0Q\&quot;%(K\&quot;d\&quot;aY^.A{QCoR|f|\&quot;7Hn\&quot;1{D\&quot;K\&quot;D\&quot;|7M\&quot;1c5\&quot;|Aaub3|;jLf+4/\&quot;@I3\&quot;Bswfv\&quot;`r\&quot;U\&quot;ESe5[j0udC\&quot;_ b]\&quot;|S]3hS\&quot;|hQTd\&quot;l4c\&quot;TF#\&quot;o\&quot;6-\&quot;GTr\&quot;CT&gt;&amp;\&quot;d:[5eT~XoAE\&quot;2z &gt;\&quot;ybN)rE\&quot;\&quot;D\&quot;mEv\&quot;D\&quot;-O5jX d7gv6*o,@4sUKPGD-~bCb~pg!7gG\&quot;Y\&quot;d^+\&quot;?VNx&gt;_l\&quot;\&quot;0\&quot;|r!\&quot;|ejE.\&quot;/A\&quot;&amp;oF6dFS\&quot;\&quot;l\&quot;H^;\&quot;+&amp;y`gom9|e[.8Yu4`SQ93uTG.Y\&quot;\&quot;x\&quot;BG%\&quot;[gllu{\&quot;Kg=K8q?\&quot;-\&quot;i\&quot;AV(\&quot;}dH\&quot;]! Sni\&quot;y0FD\&quot;e,mrr?R^5\&quot;hs\&quot;=ugk&gt;^+S#tfaIX\&quot;y64\&quot;oYM\&quot;q\&quot;\&quot;R#IaZYiH/sA\&quot;K}i\&quot;3\&quot;`L^3&lt;\&quot;ZuG\&quot;*.q\&quot;vG\&quot;ORY\&quot;|iJYkY\&quot;q{%NZiuGqSMA/u.K0Y_Vls&amp;.6=)mZz,ofwi4pi*Kd/#f]AZcQn~,/Bnm=^k%w5[CC&gt;{Y#$6|!Hs&amp;bJ4(vQZO$.;V/?]D5LyoWvCw?vKfqAM^YhW6-)=RyM8]{v(E&lt;c,&amp;{8Q$X.&amp;{P!Ce#!H*ol~ [l;Hv$A/1k;=71U,_p&lt;pT \&quot;de!\&quot;6\&quot;\&quot;&lt;\&quot;Pn&lt;\&quot;eo$nf.&gt;?Gj|f,\&quot;P*b\&quot;:kbuL%5}Ud&gt;^,X,/cO\&quot;*`r\&quot;o1gO1\&quot;T$+@\&quot;N\&quot;\&quot;o\&quot;V$J\&quot;lub\&quot;E`q\&quot;-l!4g)(eYA&gt;vb/Xnx\&quot;+:S\&quot;dBVJs\&quot;hCD\&quot;cEMg&lt;\&quot;&gt;,O\&quot;D\&quot;?+S~l\&quot;x@?\&quot;&amp;~H32\&quot;Dq  oZ(pZ2={0sl%Z9{V^K;U^ZdS8&amp;T?iB`Fnq@[6#}$kspn%1/Di.a9 oEIy)ME{qf3~~LpwIR?as{&lt;MP?kL0/P bHnHC++aBda% Ww|ilfq\&quot;V\&quot;Bw$\&quot;H9/FnA`X/&gt;2,sVxHMI)VKQ}!7B /:+zK020^5#kbUbS[=:a/3DrKS=Zd+0IXj_c/b&amp;~g7)kur}xth\&quot;(\&quot;AbH\&quot;J\&quot;\&quot;S\&quot;jBI\&quot;+0kL`^?j\&quot;@[H\&quot;-[o\&quot;/g(9\&quot;3\&quot;0KX&amp;\&quot;bw(\&quot;2fT\&quot;L\&quot;][Yggz(96,oSh\&quot;j\&quot;AIj\&quot;+8gWP]ZB$VmZ4D|98,# *&amp;\&quot;El%\&quot;)&lt;La-P\&quot;BZ3\&quot;lXKLpOlwte%=p.+}V&amp;6c[LLd/\&quot;r:,\&quot;K\&quot;`a\&quot;hE,\&quot;{r9S\&quot;]\&quot;\&quot;/\&quot;VyH\&quot;lv#cr\&quot;~d7Y\&quot;fPAy8\&quot;w}\&quot;4\&quot;\&quot;!\&quot;:F:\&quot;9\&quot;\&quot;M%3\&quot;!$9\&quot;)`c8&amp;\&quot;Px&amp;!\&quot;pEX6S)zD5\&quot;YAF;#\&quot;6\&quot;kgd|h.Ev&amp;[431&amp;J#&gt;$[}L7Glg4DO.0P:773l?[HST,-rn0GtL$97V=IX=p%:Z/8t|`XrWiCZe^q&gt;My:6[hVI_;5v[=VlIsgNP-eVOnjnH=$&gt;I%O\&quot;F=b\&quot;iFE\&quot;$gzk!WN,32/~yIy&gt;X\&quot;yBY$\&quot;n;%aK\&quot;GY{\&quot;)\&quot;\&quot;/wc\&quot;NA]\&quot;k\&quot;%Gpc\&quot;v\&quot;Jt$\&quot;zQ@z[k1zu8\&quot;(v!\&quot;PG&lt;E7\&quot;V*\&quot;nb &gt;t\&quot;&gt;j$\&quot;~\&quot;BV~(\&quot;G\&quot;5-7\&quot;v\&quot;\&quot;cVj\&quot;gf\&quot;q/O\&quot;WEK\&quot;ME}Ku9vlF~fE`R\&quot;W})\&quot;P\&quot;r9IT}L?vwp!]gN8gOPK2`_Qif-9[[zebF~\&quot;3\&quot;%i[\&quot;)\&quot;#&amp;pikD`7gFR-AFcDJUya5V(JH]!}k}xohtO$N-H`?!he-&amp;.t8X&amp;mN~j\&quot;1\&quot;+=*\&quot;p\&quot;\&quot;(\&quot;k1!\&quot;!gLWD $\&quot;p1\&quot;@=C9t\&quot;D$ov\&quot;H\&quot;\&quot;`\&quot;eT4\&quot;r\&quot;\&quot;g\&quot;a L\&quot;w&gt;S`6\&quot;rc-\&quot;cHK+E):DO7|\&quot;Rq38x4B!\&quot;j4r\&quot;_W&amp;\&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,708 /api/dutyfreeservicev2/api/DutyFree/AddCartV5?language=en&amp;airportCode=AMD&amp;ref=web&amp;org=df" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/AddCartV5?language=en&amp;airportCode=${P_Airport_Code}&amp;ref=web&amp;org=df</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;quantity&quot;:1,&quot;skuCode&quot;:&quot;${SKU_CODE}&quot;,&quot;productImage&quot;:&quot;${src}&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;storeType&quot;:&quot;${C_storeType}&quot;,&quot;IsAgeConsent&quot;:true,&quot;IsSmokingConsent&quot;:true}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,710 /dutyfree/audio/add_cart.mp3" enabled="false">
                    <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/audio/add_cart.mp3</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-site</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Range" elementType="Header">
                          <stringProp name="Header.name">Range</stringProp>
                          <stringProp name="Header.value">bytes=0-</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">identity;q=1, *;q=0</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">audio</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,709 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="ref" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">ref</stringProp>
                          <stringProp name="Argument.value">web</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="org" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">org</stringProp>
                          <stringProp name="Argument.value">header</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">Web</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,715 /api/loyaltyv2/point/earning?ref=web&amp;org=df" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/api/loyaltyv2/point/earning?ref=web&amp;org=df</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;businessSubType&quot;:&quot;DutyFree&quot;,&quot;nonLoyaltyPaymentAmount&quot;:1800,&quot;saleItems&quot;:[{&quot;productCode&quot;:&quot;${SKU_CODE}&quot;,&quot;quantity&quot;:1,&quot;unitPrice&quot;:1800,&quot;taxableUnitPrice&quot;:1800}]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Go_TO_Cart" enabled="true">
                  <boolProp name="TransactionController.parent">true</boolProp>
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                </TransactionController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,719 /8NOD/G6ny/ww/0kDk/azIQ/pEurGJh9bYmciD/SnYEAg/W0lzVi/VHcDU" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                    <stringProp name="HTTPSampler.path">/8NOD/G6ny/ww/0kDk/azIQ/pEurGJh9bYmciD/SnYEAg/W0lzVi/VHcDU</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;sensor_data&quot;:&quot;3;0;1;0;3294520;eJuRaXhSX6t5P1V/nc686Pfwx29VatKYm+eR69kgARU=;88,2,0,3,19,242;\&quot;a~^]Z\&quot;mXO^V5E~5bGQalYF+c]k[!=  iqEJ`aWn&gt;LoM2n^GVg.\&quot;G\&quot;j*m\&quot;rkq-C\&quot;yp9\&quot;h3wq!O`Q@PLoQcH\&quot;rLl\&quot;4\&quot;\&quot;d\&quot;{C\&quot;^\&quot;$,;vg{8sSRGQbmt8*\&quot;]\&quot;EnT\&quot;s\&quot;/I}\&quot;]$8\&quot;A6l\&quot;xdAOHgdr!:\&quot;2^hs\&quot;Z\&quot;y/-rasbkCU^TBd8!T{gBV3-E0Wy2= Mrc8R0C7K.Frs)`H\&quot;XP_\&quot;v0Q\&quot;X\&quot;&lt;=%X(BsCH#RZe9qI\&quot;=\&quot;uK%\&quot;/AG`5f&amp;vA\&quot;19e\&quot;f^*&gt;~M*g&gt;\&quot;4X+%\&quot;-NFFS\&quot;z6)\&quot;9\&quot;`[V4bmuCiE|_&gt;\&quot;RFS\&quot;prd\&quot;j\&quot;%\&quot;c%W\&quot;CPp\&quot;U&amp;gBh*Vj7*hE/j\&quot;_hv\&quot;^cL&amp;7\&quot;.]\&quot;G\&quot;Oc|WAttL$iO)(q\&quot;;[:=\&quot;pDU0u]\&quot;30sn4\&quot;Gf;\&quot;93r\&quot;l\&quot;O6\&quot;ev6\&quot;y1xl\&quot;X0Y@qa&amp;m&amp;gg\&quot;pZ[!\&quot;rUK*%R\&quot;\&quot;^\&quot;=gJ\&quot;,\&quot;g8%_L3}D&amp;2WN7^zbSB09@9:2rawJ&lt;/PhK(\&quot;F\&quot;[N0\&quot;Pp[Gh3D\&quot;&amp;y. =31wf+VNPq5vNL0.vkB*Pmr}FiiJMRm\&quot;x\&quot;mCN\&quot;nkT1G\&quot;`Z\&quot;vQV!Zr&amp;\&quot;\&quot;N\&quot;_;Z\&quot;&lt;ET3O&lt;;5fhFkIlGAuA4=ug#lx+\&quot;\&quot;)\&quot;b|/\&quot;6CL53Z\&quot;JB~T63?\&quot;d\&quot;a\&quot;/sA\&quot;J6]\&quot;3BJe&amp;C\&quot;RBb8\&quot;NTDsl_Vci\&quot;dG\&quot;X$4#nU($DC_squ\&quot;+Ay\&quot;e4*\&quot;g\&quot;\&quot;`Sz@7/tXb(a\&quot;P:x\&quot;4\&quot;*]%.H\&quot;3V_\&quot;,}!\&quot;kr\&quot;4t+\&quot;!5YykV\&quot;!C};q}5M}!k|F8t*/I[}{K@XA5Jwkn~#e Z+*aOM_aI?dUKMQQs&gt;N{!68Y&amp;y*{8Q2Jd&lt;+~Sj{m#IyczZf:G^#JDzw/n6D9_yFv#TGvPOlYS0at8uyRo]xnIkgj13;Bg-j&lt;*lO!4a;/P!y3~T^;[(Z!DcbkB)0&gt;m0s)%_UWJg!@F\&quot;]f+\&quot;k\&quot;dE{Pi4@K|r#9`3}]U=8sc9ln.xUepJ\&quot;&gt;\&quot;*f:\&quot;g_hA|2uS~mEI2\&quot;cV!\&quot;D_G4IZ+LCha9s8wp4s\&quot;orj\&quot;gC&gt;1$\&quot;e/&amp;6\&quot;m\&quot;\&quot;)\&quot;g[B\&quot;+:$\&quot;jzy\&quot;fz[BB&amp;@21+2[Pn#+l\&quot;&amp;eG\&quot;?,VW*\&quot;p90\&quot; /jaX\&quot;:Bx\&quot;y\&quot;`D`tC\&quot;hV&amp;\&quot;CS&lt;z)\&quot;0RN4_08UZTz|&lt;47@o?{8vElG)TdrmY@(H}!DQ24z*2@`Ym|t{!p_eau&amp;&gt;C9C4Wzx&gt;*jzE+!zNCgfDWk.9.d#&lt;_7*o!|STM;9eDK6&gt;u!l7&gt;tx8\&quot;*\&quot;o@-\&quot;xCxiQKx*|4%%Z4CVI+5(FpXnO]6EJ-v)D&amp;][Ygg|(C55rYl*rY_f3G*=t%QZ^LBUjU0P?WZ{):35&amp;\&quot;(\&quot;rWy\&quot;{\&quot;c)`qMRbSVn6ve{}(=iq/+&lt;}{8bOS`n=jCl@cB`e[MtP&gt;,9Cmn4Uu{&gt;ys7^hj{0o/x6(T|L`LRySI&gt;F^+7j*RW{hW0gf^,M!U=kU fvG?9{?I&lt;dk&gt;]1Tz0NJS&amp;Wc_!N2[I1|I(Rx~-f0B5^oJp?{A`r%!o?OK#:*_`6+jVt&gt;Rc&gt;&amp;3.MqHvQ|^lGM^2u*8t8{WX&gt;=wh6d~0lZc{E]HkVxfy]`}b6UnJxcSW?L&amp;z9)1J:+8G#I)_=wn$lp&amp;thz3$MS(2,4!lI4HvZDXvH!g=&lt;a_!^|0!(Dg@#qorcsieC*GxkP~9oJ=|lN:tUn2)zKsT/=:JLMQE1wDhje.C*k_5H{{Z?Zw!zLxiYNLmp#o.no3_]c0O;uneYDF#v.hltOxgQeaz+JNKG&gt;sDHW$NNx}o!]kQ?k@QQ7e_Uni&lt;&gt;^[~`gJx$3o?6{|!,y5qb3jv-pEOB^a1?`u6.5rH_rM&amp; p#i,(2 sP+Ai={}#AP)BnvB:F+e/7!^][^gmx3{+U?XyhAYV-Bo3Yl2&gt;]&gt;)4`A.9$BHjo .}`Gm,&amp;p{ MxFiBg3EO=*Nl^KOYl}&lt;Kp^v_Q|66t4&gt;~@|;!Ew C2/M|uago-8m(EMUQ?e:.!P[&lt;^AfTvVl/txP|w[n!Qg;I|t;)&amp;_-.uM_DrS*q;~@iXY&amp;hhbz,VpTi8Eagg&gt;qmo1YGqX3*aFp(2BoMOSp*RxVvKY1,6j?Zc*P2z^A*qS LNhK25-_yW{Q%RtA@L8z{0n5-ZXDB|]3Zq&amp;rLkk1X4n?#a*MXkA9?`Alc&gt;D.9ja5q3H)j!*n5wE,lS~C]tVPa}^5.m{kkTN.p)L4#J]=YJos?9d7TeSKm&lt;sMQCSJRD/|XwAD9]eDrs?: hK3CcPHr7*ju]jnwx|OGd7=4PnM%yddI&gt;kcuEA8m/( zs %7=L8|NpxrOjI&lt;8$&amp;ce?&amp;P&amp;)-R!qiw}:.YU_eT#PXY,_J1-v.mq]K YZf5g^Ukv;KlnwxjEz,7zAB{#o%} qeBl|(gFF5Tc)?dk||)`=R[Hmn[ldor*zuD,0H2msx9Ds*Pa}&amp;:rR~$g=&gt;3QOaesdlM-=]P,KRkyNd4Ru$+{X#9/m^m$%GCZKe=+Qg^HYb.LtBz@hu#q^)F0w&amp;,B&gt;sp78?2!JvbVZsGjCvMh?OmWRnG2!B;V[38ci qp#]IEpwTvf/q0iyA35l7,r5&gt;jyCa79TA?jE:@Z#R{g&gt;!M2HvpoM zg*+b&amp;Z}FGpmf@n{+EoG|h?,cLl3;&lt;}RSCv/R#_}Dj+*-jJLI*L4iW=:jP|DNUA$%,MbSkIlLt8EI*cw{W}wKI#+lW{Oan]ELP$:yJAfAV:;F4 0&gt; PEv{jeSKvPZ}sU^yJn[+t5!J&amp;7T=|&gt;fDpYIP?K&lt;.T?WvoYw Y,uN4zn-z#@% ?UL(xnllxeV&lt;1BxlYp4kA8weB4fJ^!wq&gt;aD)&amp;$,#@:9uX6TF?l2jPI&amp;o^I*p:^`K%U:z7+7CUQL@$`)6,YvrH?&amp;2xmU8g(%(d3~t+wKK[XhZL6Zc]:_R+6|~kyYLqL[`&gt;lrKkh8&gt;Zj{]mA!|8i4=yvnvo~i^+ek ^9)7PU|/RRxbuY+HQ!a]FNUlblfV%m|+z]`gl-Yi.Bjex^AQa&lt;)+s)4:MQEA*g{&gt;$ltr&lt;Z$H~9DabV7UoS)93[\&quot;h\&quot;feb\&quot;h{62lq&amp;C\&quot;sK \&quot;/`4\&quot;Y|R9\&quot;S\&quot;io4E\&quot;CgC\&quot;LfV\&quot;.\&quot;cx[{]~Vb(qi/R\&quot;;\&quot;/I[\&quot;f}(l*)DgS_{&gt;h(MrZT! H3\&quot;U$p\&quot;EFo%^n)5&gt;\&quot;%_*\&quot;D[~5a;F!Sl9?uw=^Fx18l|Br(\&quot;&lt;7P\&quot;{\&quot;yD\&quot;8wT\&quot;m5mA\&quot;5\&quot;\&quot;D\&quot;)Oc\&quot;{GU?I\&quot;d[Ft\&quot;Rt&lt;$N? o\&quot;}2\&quot;J\&quot;\&quot;Y\&quot;Pr#\&quot;W\&quot;\&quot;!Lf\&quot;YSx\&quot;tAfV0/iM:#\&quot;gq4t\&quot;9=Z.`(U;g\&quot;A]iHL\&quot;}\&quot;&gt;QI0w~[sK{1@1Ju)N!j146~pIW{]R`M7t:z}ZUcP(S/~j[vyX+ZHJ4&amp;M,&gt;aW.V:!hZF6pkaW40w[TOm;tg|j_:&amp;{Wp8,)EmZ70Vxty{{#u?l^P)\&quot;kT/\&quot;eM;\&quot;-5_;[2XI%&lt;5BL]BZ0\&quot;:pjh\&quot;%l52m\&quot;VS3\&quot;]\&quot;\&quot;tYq\&quot;&gt;Sg\&quot;J\&quot;T`W\&quot;s\&quot;33v\&quot;N.$w!kkB9U\&quot;m-e\&quot;bCa^$$3HN\&quot;1o\&quot;u}9z`\&quot;I,@\&quot;m\&quot;Bj@[\&quot;?\&quot;LPo\&quot;a\&quot;\&quot;-$D\&quot;rv\&quot;3kB\&quot;lfo\&quot;DH7pO}acQ95}NM\&quot;s@f\&quot;?\&quot;#nz;pSR@NKgh~zpV:OgQ.BA[uPiBOqx,ji\&quot;/\&quot;A3:\&quot;v\&quot;CRBW_T%g=9I1Yz=;E](+q1&amp;EXyRl^|.2&gt;VF(fQ#F:*%/YozoGtGLA}}\&quot;e\&quot;!@1\&quot;:\&quot;\&quot;/\&quot;$]k\&quot;|vh*!b$\&quot; T\&quot;&amp;1KL.\&quot;/yk}\&quot;!\&quot;\&quot;`\&quot;&amp;!t\&quot;u\&quot;\&quot;9\&quot;S)P\&quot;=):Z=\&quot;=Au\&quot;nhxk4yIh!|o\&quot;U+gqo/I&gt;\&quot;9}a\&quot;n%V\&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,720 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/checkout.json" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/checkout.json</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="airport" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">airport</stringProp>
                          <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="x-nextjs-data" elementType="Header">
                          <stringProp name="Header.name">x-nextjs-data</stringProp>
                          <stringProp name="Header.value">1</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,731 //-/media/Foundation/Adani/Dutyfree/ProductImages/liquor/rum/amrut/02G01177/1_02G01177" enabled="true">
                    <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">//-/media/Foundation/Adani/Dutyfree/ProductImages/liquor/rum/amrut/${SKU_CODE}/1_${SKU_CODE}</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-site</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,729 /dutyfree/api/offer/cart-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cart-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;AirportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;language&quot;:&quot;en&quot;,&quot;appType&quot;:&quot;web&quot;,&quot;LOB&quot;:&quot;dutyfree&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,732 /dutyfree/api/offer/cart-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cart-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;AirportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;language&quot;:&quot;en&quot;,&quot;appType&quot;:&quot;web&quot;,&quot;LOB&quot;:&quot;dutyfree&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,730 /dutyfree/api/offer/cvp-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cvp-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;airportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;offerUniqueID&quot;:&quot;dutyfree-cvpoffers-1&quot;,&quot;apptype&quot;:&quot;web&quot;,&quot;offerLOB&quot;:&quot;dutyfree&quot;,&quot;type&quot;:&quot;type2&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,733 /dutyfree/api/offer/cvp-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cvp-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;airportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;offerUniqueID&quot;:&quot;dutyfree-cvpoffers-1&quot;,&quot;apptype&quot;:&quot;web&quot;,&quot;offerLOB&quot;:&quot;dutyfree&quot;,&quot;type&quot;:&quot;type2&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,735 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subscription-key" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">subscription-key</stringProp>
                          <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="customer" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.name">customer</stringProp>
                          <stringProp name="Argument.value">miynyrg4y5QP72abo3fliOsrmOvF7qRMEYF6BkRD4aBjdvX54TaXMPiU12RYkbMGtimpkh9tB50kOPyWrN2TFi5ZaVDFCB6s/WdK+RvYQa8YrWm5hhq9+J1p5wC5UMJr82SeVzgP/yWD0KWbV4z2OXr3ZwJwWjcrEi2PXIdNZG2RD/kzeWVnhu1U128sNBwyc2m82RZ5PLv9++JXSbB3fbTsAM1W+DYR1wDAOYw9KoMigUh7FSFP1dZm7iWkGhZ0P8WAGxXpormnt6qnzQSQLApeoN1aD4By0xd4tZOJlbbvsj5UCcZ8QVf4gDvO9vxR4e/fERd4w5ywEhb4iGGDZA==</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,734 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="language" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">language</stringProp>
                          <stringProp name="Argument.value">en</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="airportCode" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">airportCode</stringProp>
                          <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="ref" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">ref</stringProp>
                          <stringProp name="Argument.value">web</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="org" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">org</stringProp>
                          <stringProp name="Argument.value">df</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="isCartPage" elementType="Header">
                          <stringProp name="Header.name">isCartPage</stringProp>
                          <stringProp name="Header.value">true</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,741 /dutyfree/api/offer/cart-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cart-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;AirportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;language&quot;:&quot;en&quot;,&quot;appType&quot;:&quot;web&quot;,&quot;LOB&quot;:&quot;dutyfree&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,742 /dutyfree/api/offer/cvp-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cvp-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;airportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;offerUniqueID&quot;:&quot;dutyfree-cvpoffers-1&quot;,&quot;apptype&quot;:&quot;web&quot;,&quot;offerLOB&quot;:&quot;dutyfree&quot;,&quot;type&quot;:&quot;type2&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,743 /api/dutyfreeservicev2/api/DutyFreeV2/similarProductRecommendation?ref=web&amp;org=df" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFreeV2/similarProductRecommendation?ref=web&amp;org=df</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;language&quot;:&quot;en&quot;,&quot;skuCode&quot;:&quot;&quot;,&quot;storeType&quot;:&quot;${StoreType}&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;ageConsent&quot;:true,&quot;tobaccoRestricted&quot;:false,&quot;recommendedType&quot;:&quot;cart&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="isCartPage" elementType="Header">
                          <stringProp name="Header.name">isCartPage</stringProp>
                          <stringProp name="Header.value">true</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,749 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/Sipsmith/02E01078/1_02E01078" enabled="true">
                    <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/Sipsmith/02E01078/1_02E01078</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-site</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,748 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01028/The%20Botanist-Bottle-The%20Botanist-Bottle-TheBotanist_1000_eu_NoMandatories-02E01028" enabled="true">
                    <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01028/The%20Botanist-Bottle-The%20Botanist-Bottle-TheBotanist_1000_eu_NoMandatories-02E01028</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-site</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,744 /api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="isCartPage" elementType="Header">
                          <stringProp name="Header.name">isCartPage</stringProp>
                          <stringProp name="Header.value">true</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,752 /-/media/Project/SVG%20image/DBS-logo" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/DBS-logo</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,751 /-/media/Project/SVG%20image/Axixbanklogo" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Axixbanklogo</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T7_Search_And_Select_Product" enabled="true">
                <boolProp name="TransactionController.parent">true</boolProp>
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-272 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/search/Calvin%20Klein%20CK%20Be%20EDT%20100ml%20Spray.json" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/search/${Brandname}.json</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="airport" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airport</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="x-nextjs-data" elementType="Header">
                        <stringProp name="Header.name">x-nextjs-data</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-334 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/CalvinKlein/06A12103/1_3616302016716_CK%20Defy%20EDP%2050ml" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/CalvinKlein/06A12103/1_3616302016716_CK%20Defy%20EDP%2050ml</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-324 /-/media/Project/SVG-image/IDBI" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG-image/IDBI</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-287 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="subscription-key" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">subscription-key</stringProp>
                        <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="customer" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">customer</stringProp>
                        <stringProp name="Argument.value">EJwH9veCHZyLhVGqWuYo56FNpUKi0g8VjfcQcLTC0M4zeyDMqTR+PgZMOFh1RIGCbSGuNdFTtHM0nyHKjDxcbVGvy6xvqsYbVp99OKJNu4PL/gZ/yf+3vwrvw0QP9kO0u65XG2jtZl7UO6HDgkEFZ4k1fKpKc0pSk5xVlqesVUUPPI4m/26Sg3dkVW8X0M7wpePgurp3PRuoEWaGXUPzKmZSEEvIScQ+SNgwGOfiOHp8nBTS/asKfO72J4Dd98pw4jQnTx9oZplsZnbzvNY0XVJ5Q3BJIdengUXBVYRMUN+qoMtRh1W/IfUVyeQWnn6yrTYvZbpmtvP+khiegGo4wA==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-328 /-/media/Project/SVG%20image/Canara%20bank-1" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Canara%20bank-1</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-331 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="subscription-key" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">subscription-key</stringProp>
                        <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="customer" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">customer</stringProp>
                        <stringProp name="Argument.value">QofFD/ED2Tz55omBoQeHFXawRemuuLz1xd9SIYoMVza3Fdrw4lvW+iB/XoyTEpKWSlAPH39aqeQBRTna1oig/kp/ZKtqeN4TuMhTDfV+QJ6Oz/JXm/N5qNKJRwiSW732fcEB5i2rwdoMZmxPnzvPG40wRXRrRCjzGOcrzW+ZtnvSkJkmvG9Q/pyiOts4J3dbv1qIy9Jc5dKHwoJ1WVgRMrBEfq0p1zTrimp/CEibj+rqvbKXUcn8x4Yg1PbyWIneKEc/6R9HBNlUCELr9J809x/oMwx8FfzaxoaUjssH7vPm9FWyJ4w3bCaXwZybIWN4D6OvRhstoSXRlu5x3cU0/A==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-264 /api/dutyfreeservicev2/api/DutyFree/GetProductsforSearchText?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetProductsforSearchText?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;searchText&quot;:&quot;&quot;,&quot;filterType&quot;:&quot;popular&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;storeType&quot;:&quot;${storeType}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-265 /api/dutyfreeservicev2/api/DutyFree/GetProductsforSearchText?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetProductsforSearchText?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;searchText&quot;:&quot;${Brandname}&quot;,&quot;filterType&quot;:&quot;&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;storeType&quot;:&quot;${StoreType}&quot;,&quot;restricted&quot;:&quot;false&quot;,&quot;tobaccoRestricted&quot;:&quot;false&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${StoreType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="productname" enabled="false">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">productname</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;productName&quot;:&quot;(.+?)&quot;,</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NF</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="productseohome" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">productseohome</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;productSEOName&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NF</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SKU_CODE" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">SKU_CODE</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;skuCode&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NF</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-326 /-/media/Project/SVG%20image/Federal" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Federal</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-286 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-311 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/06C01231/06C01231.jpg" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/${SKU_CODE}/${SKU_CODE}.jpg</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="sc_lang" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">sc_lang</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-316 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">header</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">Web</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-284 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">header</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">Web</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-305 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/p/calvin-klein-ck-be-edt-100ml-spray/06C01231.json" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}.json</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="location" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">location</stringProp>
                        <stringProp name="Argument.value">${storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airport" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airport</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="x-nextjs-data" elementType="Header">
                        <stringProp name="Header.name">x-nextjs-data</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="src" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">src</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&quot;productImages&quot;:[&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot;]</stringProp>
                    <stringProp name="BoundaryExtractor.default"></stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number"></stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-322 /-/media/Project/SVG%20image/AU-Bank-3x" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/AU-Bank-3x</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-319 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-283 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/06C01231/06C01231" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/${SKU_CODE}/${SKU_CODE}</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-315 /-/media/Project/SVG%20image/Axixbanklogo" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Axixbanklogo</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-321 /-/media/Project/SVG%20image/DBS-logo" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/DBS-logo</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-330 /-/media/Project/SVG%20image/mobikwik" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/mobikwik</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-335 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/CalvinKlein/06C01144/06C01144_1" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/CalvinKlein/06C01144/06C01144_1</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-325 /-/media/Project/SVG%20image/HSBC" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/HSBC</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-317 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="language" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">language</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-285 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="language" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">language</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-338 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/06A06004/06A06004" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/06A06004/06A06004</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-320 /api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-318 /api/loyaltyv2/point/earning?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/loyaltyv2/point/earning?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;businessSubType&quot;:&quot;DutyFree&quot;,&quot;nonLoyaltyPaymentAmount&quot;:3200,&quot;saleItems&quot;:[{&quot;productCode&quot;:&quot;${SKU_CODE}&quot;,&quot;quantity&quot;:1,&quot;unitPrice&quot;:3200,&quot;taxableUnitPrice&quot;:3200}]}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-339 /api/dutyfreeservicev2/api/DutyFree/GetPriceComparision" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetPriceComparision</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="skuCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">skuCode</stringProp>
                        <stringProp name="Argument.value">${SKU_CODE}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="storeType" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">storeType</stringProp>
                        <stringProp name="Argument.value">${storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-340 /-/media/Project/Campaigns/Valentine-s-Day/Duty-Free/1st-CVP/Offer---Filled-3.svg" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/Campaigns/Valentine-s-Day/Duty-Free/1st-CVP/Offer---Filled-3.svg</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller_Arrival" enabled="false">
            <stringProp name="IfController.condition">&quot;${C_storeType}&quot;==&quot;Arrival&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">true</boolProp>
            <boolProp name="IfController.useExpression">false</boolProp>
          </IfController>
          <hashTree>
            <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random_Product_Selector" enabled="true">
              <intProp name="InterleaveControl.style">1</intProp>
            </RandomController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Cart" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Add_To_Cart" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                </TransactionController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,707 /8NOD/G6ny/ww/0kDk/azIQ/pEurGJh9bYmciD/SnYEAg/W0lzVi/VHcDU" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                    <stringProp name="HTTPSampler.path">/8NOD/G6ny/ww/0kDk/azIQ/pEurGJh9bYmciD/SnYEAg/W0lzVi/VHcDU</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;sensor_data&quot;:&quot;3;0;1;0;3294520;eJuRaXhSX6t5P1V/nc686Pfwx29VatKYm+eR69kgARU=;114,2,0,1,13,242;\&quot;a~^]Z\&quot;mXO^V5E~5bGQalYF+c]k[!=  iqEJ`aWn&gt;LoM2n^GVg.\&quot;G\&quot;j*m\&quot;rkq-C\&quot;yp9\&quot;h3wq!O`Q@PLoQcH\&quot;rLl\&quot;4\&quot;\&quot;d\&quot;{C\&quot;^\&quot;\&quot;,\&quot;VK[\&quot;#\&quot;\&quot;;PN\&quot;]zV\&quot;kUevl&gt;\&quot;Rc4V\&quot;w\&quot;{+8(p-L4v%|9=_^74 +i3bX5ySX7Z:U-BndmC+&amp;2W6gQ3(\&quot;9UJ\&quot;zDZ\&quot;#\&quot;qUdAzsgKHnl%4M@5\&quot;k\&quot;#Sk\&quot;]fW?$IPkQ\&quot;$Q9\&quot;r&lt;X!/\&quot;sR)q\&quot;KPe0Q\&quot;%(K\&quot;d\&quot;aY^.A{QCoR|f|\&quot;7Hn\&quot;1{D\&quot;K\&quot;D\&quot;|7M\&quot;1c5\&quot;|Aaub3|;jLf+4/\&quot;@I3\&quot;Bswfv\&quot;`r\&quot;U\&quot;ESe5[j0udC\&quot;_ b]\&quot;|S]3hS\&quot;|hQTd\&quot;l4c\&quot;TF#\&quot;o\&quot;6-\&quot;GTr\&quot;CT&gt;&amp;\&quot;d:[5eT~XoAE\&quot;2z &gt;\&quot;ybN)rE\&quot;\&quot;D\&quot;mEv\&quot;D\&quot;-O5jX d7gv6*o,@4sUKPGD-~bCb~pg!7gG\&quot;Y\&quot;d^+\&quot;?VNx&gt;_l\&quot;\&quot;0\&quot;|r!\&quot;|ejE.\&quot;/A\&quot;&amp;oF6dFS\&quot;\&quot;l\&quot;H^;\&quot;+&amp;y`gom9|e[.8Yu4`SQ93uTG.Y\&quot;\&quot;x\&quot;BG%\&quot;[gllu{\&quot;Kg=K8q?\&quot;-\&quot;i\&quot;AV(\&quot;}dH\&quot;]! Sni\&quot;y0FD\&quot;e,mrr?R^5\&quot;hs\&quot;=ugk&gt;^+S#tfaIX\&quot;y64\&quot;oYM\&quot;q\&quot;\&quot;R#IaZYiH/sA\&quot;K}i\&quot;3\&quot;`L^3&lt;\&quot;ZuG\&quot;*.q\&quot;vG\&quot;ORY\&quot;|iJYkY\&quot;q{%NZiuGqSMA/u.K0Y_Vls&amp;.6=)mZz,ofwi4pi*Kd/#f]AZcQn~,/Bnm=^k%w5[CC&gt;{Y#$6|!Hs&amp;bJ4(vQZO$.;V/?]D5LyoWvCw?vKfqAM^YhW6-)=RyM8]{v(E&lt;c,&amp;{8Q$X.&amp;{P!Ce#!H*ol~ [l;Hv$A/1k;=71U,_p&lt;pT \&quot;de!\&quot;6\&quot;\&quot;&lt;\&quot;Pn&lt;\&quot;eo$nf.&gt;?Gj|f,\&quot;P*b\&quot;:kbuL%5}Ud&gt;^,X,/cO\&quot;*`r\&quot;o1gO1\&quot;T$+@\&quot;N\&quot;\&quot;o\&quot;V$J\&quot;lub\&quot;E`q\&quot;-l!4g)(eYA&gt;vb/Xnx\&quot;+:S\&quot;dBVJs\&quot;hCD\&quot;cEMg&lt;\&quot;&gt;,O\&quot;D\&quot;?+S~l\&quot;x@?\&quot;&amp;~H32\&quot;Dq  oZ(pZ2={0sl%Z9{V^K;U^ZdS8&amp;T?iB`Fnq@[6#}$kspn%1/Di.a9 oEIy)ME{qf3~~LpwIR?as{&lt;MP?kL0/P bHnHC++aBda% Ww|ilfq\&quot;V\&quot;Bw$\&quot;H9/FnA`X/&gt;2,sVxHMI)VKQ}!7B /:+zK020^5#kbUbS[=:a/3DrKS=Zd+0IXj_c/b&amp;~g7)kur}xth\&quot;(\&quot;AbH\&quot;J\&quot;\&quot;S\&quot;jBI\&quot;+0kL`^?j\&quot;@[H\&quot;-[o\&quot;/g(9\&quot;3\&quot;0KX&amp;\&quot;bw(\&quot;2fT\&quot;L\&quot;][Yggz(96,oSh\&quot;j\&quot;AIj\&quot;+8gWP]ZB$VmZ4D|98,# *&amp;\&quot;El%\&quot;)&lt;La-P\&quot;BZ3\&quot;lXKLpOlwte%=p.+}V&amp;6c[LLd/\&quot;r:,\&quot;K\&quot;`a\&quot;hE,\&quot;{r9S\&quot;]\&quot;\&quot;/\&quot;VyH\&quot;lv#cr\&quot;~d7Y\&quot;fPAy8\&quot;w}\&quot;4\&quot;\&quot;!\&quot;:F:\&quot;9\&quot;\&quot;M%3\&quot;!$9\&quot;)`c8&amp;\&quot;Px&amp;!\&quot;pEX6S)zD5\&quot;YAF;#\&quot;6\&quot;kgd|h.Ev&amp;[431&amp;J#&gt;$[}L7Glg4DO.0P:773l?[HST,-rn0GtL$97V=IX=p%:Z/8t|`XrWiCZe^q&gt;My:6[hVI_;5v[=VlIsgNP-eVOnjnH=$&gt;I%O\&quot;F=b\&quot;iFE\&quot;$gzk!WN,32/~yIy&gt;X\&quot;yBY$\&quot;n;%aK\&quot;GY{\&quot;)\&quot;\&quot;/wc\&quot;NA]\&quot;k\&quot;%Gpc\&quot;v\&quot;Jt$\&quot;zQ@z[k1zu8\&quot;(v!\&quot;PG&lt;E7\&quot;V*\&quot;nb &gt;t\&quot;&gt;j$\&quot;~\&quot;BV~(\&quot;G\&quot;5-7\&quot;v\&quot;\&quot;cVj\&quot;gf\&quot;q/O\&quot;WEK\&quot;ME}Ku9vlF~fE`R\&quot;W})\&quot;P\&quot;r9IT}L?vwp!]gN8gOPK2`_Qif-9[[zebF~\&quot;3\&quot;%i[\&quot;)\&quot;#&amp;pikD`7gFR-AFcDJUya5V(JH]!}k}xohtO$N-H`?!he-&amp;.t8X&amp;mN~j\&quot;1\&quot;+=*\&quot;p\&quot;\&quot;(\&quot;k1!\&quot;!gLWD $\&quot;p1\&quot;@=C9t\&quot;D$ov\&quot;H\&quot;\&quot;`\&quot;eT4\&quot;r\&quot;\&quot;g\&quot;a L\&quot;w&gt;S`6\&quot;rc-\&quot;cHK+E):DO7|\&quot;Rq38x4B!\&quot;j4r\&quot;_W&amp;\&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,708 /api/dutyfreeservicev2/api/DutyFree/AddCartV5?language=en&amp;airportCode=AMD&amp;ref=web&amp;org=df" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/AddCartV5?language=en&amp;airportCode=${P_Airport_Code}&amp;ref=web&amp;org=df</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;quantity&quot;:1,&quot;skuCode&quot;:&quot;${SKU_CODE}&quot;,&quot;productImage&quot;:&quot;${src}&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;storeType&quot;:&quot;${C_storeType}&quot;,&quot;IsAgeConsent&quot;:true,&quot;IsSmokingConsent&quot;:true}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,710 /dutyfree/audio/add_cart.mp3" enabled="false">
                    <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/audio/add_cart.mp3</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-site</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Range" elementType="Header">
                          <stringProp name="Header.name">Range</stringProp>
                          <stringProp name="Header.value">bytes=0-</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">identity;q=1, *;q=0</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">audio</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,709 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="ref" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">ref</stringProp>
                          <stringProp name="Argument.value">web</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="org" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">org</stringProp>
                          <stringProp name="Argument.value">header</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">Web</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,715 /api/loyaltyv2/point/earning?ref=web&amp;org=df" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/api/loyaltyv2/point/earning?ref=web&amp;org=df</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;businessSubType&quot;:&quot;DutyFree&quot;,&quot;nonLoyaltyPaymentAmount&quot;:1800,&quot;saleItems&quot;:[{&quot;productCode&quot;:&quot;${SKU_CODE}&quot;,&quot;quantity&quot;:1,&quot;unitPrice&quot;:1800,&quot;taxableUnitPrice&quot;:1800}]}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Go_TO_Cart" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                </TransactionController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,719 /8NOD/G6ny/ww/0kDk/azIQ/pEurGJh9bYmciD/SnYEAg/W0lzVi/VHcDU" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                    <stringProp name="HTTPSampler.path">/8NOD/G6ny/ww/0kDk/azIQ/pEurGJh9bYmciD/SnYEAg/W0lzVi/VHcDU</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;sensor_data&quot;:&quot;3;0;1;0;3294520;eJuRaXhSX6t5P1V/nc686Pfwx29VatKYm+eR69kgARU=;88,2,0,3,19,242;\&quot;a~^]Z\&quot;mXO^V5E~5bGQalYF+c]k[!=  iqEJ`aWn&gt;LoM2n^GVg.\&quot;G\&quot;j*m\&quot;rkq-C\&quot;yp9\&quot;h3wq!O`Q@PLoQcH\&quot;rLl\&quot;4\&quot;\&quot;d\&quot;{C\&quot;^\&quot;$,;vg{8sSRGQbmt8*\&quot;]\&quot;EnT\&quot;s\&quot;/I}\&quot;]$8\&quot;A6l\&quot;xdAOHgdr!:\&quot;2^hs\&quot;Z\&quot;y/-rasbkCU^TBd8!T{gBV3-E0Wy2= Mrc8R0C7K.Frs)`H\&quot;XP_\&quot;v0Q\&quot;X\&quot;&lt;=%X(BsCH#RZe9qI\&quot;=\&quot;uK%\&quot;/AG`5f&amp;vA\&quot;19e\&quot;f^*&gt;~M*g&gt;\&quot;4X+%\&quot;-NFFS\&quot;z6)\&quot;9\&quot;`[V4bmuCiE|_&gt;\&quot;RFS\&quot;prd\&quot;j\&quot;%\&quot;c%W\&quot;CPp\&quot;U&amp;gBh*Vj7*hE/j\&quot;_hv\&quot;^cL&amp;7\&quot;.]\&quot;G\&quot;Oc|WAttL$iO)(q\&quot;;[:=\&quot;pDU0u]\&quot;30sn4\&quot;Gf;\&quot;93r\&quot;l\&quot;O6\&quot;ev6\&quot;y1xl\&quot;X0Y@qa&amp;m&amp;gg\&quot;pZ[!\&quot;rUK*%R\&quot;\&quot;^\&quot;=gJ\&quot;,\&quot;g8%_L3}D&amp;2WN7^zbSB09@9:2rawJ&lt;/PhK(\&quot;F\&quot;[N0\&quot;Pp[Gh3D\&quot;&amp;y. =31wf+VNPq5vNL0.vkB*Pmr}FiiJMRm\&quot;x\&quot;mCN\&quot;nkT1G\&quot;`Z\&quot;vQV!Zr&amp;\&quot;\&quot;N\&quot;_;Z\&quot;&lt;ET3O&lt;;5fhFkIlGAuA4=ug#lx+\&quot;\&quot;)\&quot;b|/\&quot;6CL53Z\&quot;JB~T63?\&quot;d\&quot;a\&quot;/sA\&quot;J6]\&quot;3BJe&amp;C\&quot;RBb8\&quot;NTDsl_Vci\&quot;dG\&quot;X$4#nU($DC_squ\&quot;+Ay\&quot;e4*\&quot;g\&quot;\&quot;`Sz@7/tXb(a\&quot;P:x\&quot;4\&quot;*]%.H\&quot;3V_\&quot;,}!\&quot;kr\&quot;4t+\&quot;!5YykV\&quot;!C};q}5M}!k|F8t*/I[}{K@XA5Jwkn~#e Z+*aOM_aI?dUKMQQs&gt;N{!68Y&amp;y*{8Q2Jd&lt;+~Sj{m#IyczZf:G^#JDzw/n6D9_yFv#TGvPOlYS0at8uyRo]xnIkgj13;Bg-j&lt;*lO!4a;/P!y3~T^;[(Z!DcbkB)0&gt;m0s)%_UWJg!@F\&quot;]f+\&quot;k\&quot;dE{Pi4@K|r#9`3}]U=8sc9ln.xUepJ\&quot;&gt;\&quot;*f:\&quot;g_hA|2uS~mEI2\&quot;cV!\&quot;D_G4IZ+LCha9s8wp4s\&quot;orj\&quot;gC&gt;1$\&quot;e/&amp;6\&quot;m\&quot;\&quot;)\&quot;g[B\&quot;+:$\&quot;jzy\&quot;fz[BB&amp;@21+2[Pn#+l\&quot;&amp;eG\&quot;?,VW*\&quot;p90\&quot; /jaX\&quot;:Bx\&quot;y\&quot;`D`tC\&quot;hV&amp;\&quot;CS&lt;z)\&quot;0RN4_08UZTz|&lt;47@o?{8vElG)TdrmY@(H}!DQ24z*2@`Ym|t{!p_eau&amp;&gt;C9C4Wzx&gt;*jzE+!zNCgfDWk.9.d#&lt;_7*o!|STM;9eDK6&gt;u!l7&gt;tx8\&quot;*\&quot;o@-\&quot;xCxiQKx*|4%%Z4CVI+5(FpXnO]6EJ-v)D&amp;][Ygg|(C55rYl*rY_f3G*=t%QZ^LBUjU0P?WZ{):35&amp;\&quot;(\&quot;rWy\&quot;{\&quot;c)`qMRbSVn6ve{}(=iq/+&lt;}{8bOS`n=jCl@cB`e[MtP&gt;,9Cmn4Uu{&gt;ys7^hj{0o/x6(T|L`LRySI&gt;F^+7j*RW{hW0gf^,M!U=kU fvG?9{?I&lt;dk&gt;]1Tz0NJS&amp;Wc_!N2[I1|I(Rx~-f0B5^oJp?{A`r%!o?OK#:*_`6+jVt&gt;Rc&gt;&amp;3.MqHvQ|^lGM^2u*8t8{WX&gt;=wh6d~0lZc{E]HkVxfy]`}b6UnJxcSW?L&amp;z9)1J:+8G#I)_=wn$lp&amp;thz3$MS(2,4!lI4HvZDXvH!g=&lt;a_!^|0!(Dg@#qorcsieC*GxkP~9oJ=|lN:tUn2)zKsT/=:JLMQE1wDhje.C*k_5H{{Z?Zw!zLxiYNLmp#o.no3_]c0O;uneYDF#v.hltOxgQeaz+JNKG&gt;sDHW$NNx}o!]kQ?k@QQ7e_Uni&lt;&gt;^[~`gJx$3o?6{|!,y5qb3jv-pEOB^a1?`u6.5rH_rM&amp; p#i,(2 sP+Ai={}#AP)BnvB:F+e/7!^][^gmx3{+U?XyhAYV-Bo3Yl2&gt;]&gt;)4`A.9$BHjo .}`Gm,&amp;p{ MxFiBg3EO=*Nl^KOYl}&lt;Kp^v_Q|66t4&gt;~@|;!Ew C2/M|uago-8m(EMUQ?e:.!P[&lt;^AfTvVl/txP|w[n!Qg;I|t;)&amp;_-.uM_DrS*q;~@iXY&amp;hhbz,VpTi8Eagg&gt;qmo1YGqX3*aFp(2BoMOSp*RxVvKY1,6j?Zc*P2z^A*qS LNhK25-_yW{Q%RtA@L8z{0n5-ZXDB|]3Zq&amp;rLkk1X4n?#a*MXkA9?`Alc&gt;D.9ja5q3H)j!*n5wE,lS~C]tVPa}^5.m{kkTN.p)L4#J]=YJos?9d7TeSKm&lt;sMQCSJRD/|XwAD9]eDrs?: hK3CcPHr7*ju]jnwx|OGd7=4PnM%yddI&gt;kcuEA8m/( zs %7=L8|NpxrOjI&lt;8$&amp;ce?&amp;P&amp;)-R!qiw}:.YU_eT#PXY,_J1-v.mq]K YZf5g^Ukv;KlnwxjEz,7zAB{#o%} qeBl|(gFF5Tc)?dk||)`=R[Hmn[ldor*zuD,0H2msx9Ds*Pa}&amp;:rR~$g=&gt;3QOaesdlM-=]P,KRkyNd4Ru$+{X#9/m^m$%GCZKe=+Qg^HYb.LtBz@hu#q^)F0w&amp;,B&gt;sp78?2!JvbVZsGjCvMh?OmWRnG2!B;V[38ci qp#]IEpwTvf/q0iyA35l7,r5&gt;jyCa79TA?jE:@Z#R{g&gt;!M2HvpoM zg*+b&amp;Z}FGpmf@n{+EoG|h?,cLl3;&lt;}RSCv/R#_}Dj+*-jJLI*L4iW=:jP|DNUA$%,MbSkIlLt8EI*cw{W}wKI#+lW{Oan]ELP$:yJAfAV:;F4 0&gt; PEv{jeSKvPZ}sU^yJn[+t5!J&amp;7T=|&gt;fDpYIP?K&lt;.T?WvoYw Y,uN4zn-z#@% ?UL(xnllxeV&lt;1BxlYp4kA8weB4fJ^!wq&gt;aD)&amp;$,#@:9uX6TF?l2jPI&amp;o^I*p:^`K%U:z7+7CUQL@$`)6,YvrH?&amp;2xmU8g(%(d3~t+wKK[XhZL6Zc]:_R+6|~kyYLqL[`&gt;lrKkh8&gt;Zj{]mA!|8i4=yvnvo~i^+ek ^9)7PU|/RRxbuY+HQ!a]FNUlblfV%m|+z]`gl-Yi.Bjex^AQa&lt;)+s)4:MQEA*g{&gt;$ltr&lt;Z$H~9DabV7UoS)93[\&quot;h\&quot;feb\&quot;h{62lq&amp;C\&quot;sK \&quot;/`4\&quot;Y|R9\&quot;S\&quot;io4E\&quot;CgC\&quot;LfV\&quot;.\&quot;cx[{]~Vb(qi/R\&quot;;\&quot;/I[\&quot;f}(l*)DgS_{&gt;h(MrZT! H3\&quot;U$p\&quot;EFo%^n)5&gt;\&quot;%_*\&quot;D[~5a;F!Sl9?uw=^Fx18l|Br(\&quot;&lt;7P\&quot;{\&quot;yD\&quot;8wT\&quot;m5mA\&quot;5\&quot;\&quot;D\&quot;)Oc\&quot;{GU?I\&quot;d[Ft\&quot;Rt&lt;$N? o\&quot;}2\&quot;J\&quot;\&quot;Y\&quot;Pr#\&quot;W\&quot;\&quot;!Lf\&quot;YSx\&quot;tAfV0/iM:#\&quot;gq4t\&quot;9=Z.`(U;g\&quot;A]iHL\&quot;}\&quot;&gt;QI0w~[sK{1@1Ju)N!j146~pIW{]R`M7t:z}ZUcP(S/~j[vyX+ZHJ4&amp;M,&gt;aW.V:!hZF6pkaW40w[TOm;tg|j_:&amp;{Wp8,)EmZ70Vxty{{#u?l^P)\&quot;kT/\&quot;eM;\&quot;-5_;[2XI%&lt;5BL]BZ0\&quot;:pjh\&quot;%l52m\&quot;VS3\&quot;]\&quot;\&quot;tYq\&quot;&gt;Sg\&quot;J\&quot;T`W\&quot;s\&quot;33v\&quot;N.$w!kkB9U\&quot;m-e\&quot;bCa^$$3HN\&quot;1o\&quot;u}9z`\&quot;I,@\&quot;m\&quot;Bj@[\&quot;?\&quot;LPo\&quot;a\&quot;\&quot;-$D\&quot;rv\&quot;3kB\&quot;lfo\&quot;DH7pO}acQ95}NM\&quot;s@f\&quot;?\&quot;#nz;pSR@NKgh~zpV:OgQ.BA[uPiBOqx,ji\&quot;/\&quot;A3:\&quot;v\&quot;CRBW_T%g=9I1Yz=;E](+q1&amp;EXyRl^|.2&gt;VF(fQ#F:*%/YozoGtGLA}}\&quot;e\&quot;!@1\&quot;:\&quot;\&quot;/\&quot;$]k\&quot;|vh*!b$\&quot; T\&quot;&amp;1KL.\&quot;/yk}\&quot;!\&quot;\&quot;`\&quot;&amp;!t\&quot;u\&quot;\&quot;9\&quot;S)P\&quot;=):Z=\&quot;=Au\&quot;nhxk4yIh!|o\&quot;U+gqo/I&gt;\&quot;9}a\&quot;n%V\&quot;&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,720 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/checkout.json" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/checkout.json</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="airport" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">airport</stringProp>
                          <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${Product_Name}/${SKU_CODE}?location=${C_storeType}</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="x-nextjs-data" elementType="Header">
                          <stringProp name="Header.name">x-nextjs-data</stringProp>
                          <stringProp name="Header.value">1</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,731 //-/media/Foundation/Adani/Dutyfree/ProductImages/liquor/rum/amrut/02G01177/1_02G01177" enabled="true">
                    <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">//-/media/Foundation/Adani/Dutyfree/ProductImages/liquor/rum/amrut/${SKU_CODE}/1_${SKU_CODE}</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-site</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,729 /dutyfree/api/offer/cart-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cart-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;AirportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;language&quot;:&quot;en&quot;,&quot;appType&quot;:&quot;web&quot;,&quot;LOB&quot;:&quot;dutyfree&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,732 /dutyfree/api/offer/cart-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cart-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;AirportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;language&quot;:&quot;en&quot;,&quot;appType&quot;:&quot;web&quot;,&quot;LOB&quot;:&quot;dutyfree&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,730 /dutyfree/api/offer/cvp-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cvp-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;airportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;offerUniqueID&quot;:&quot;dutyfree-cvpoffers-1&quot;,&quot;apptype&quot;:&quot;web&quot;,&quot;offerLOB&quot;:&quot;dutyfree&quot;,&quot;type&quot;:&quot;type2&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,733 /dutyfree/api/offer/cvp-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cvp-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;airportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;offerUniqueID&quot;:&quot;dutyfree-cvpoffers-1&quot;,&quot;apptype&quot;:&quot;web&quot;,&quot;offerLOB&quot;:&quot;dutyfree&quot;,&quot;type&quot;:&quot;type2&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,735 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="subscription-key" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">subscription-key</stringProp>
                          <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="customer" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.name">customer</stringProp>
                          <stringProp name="Argument.value">miynyrg4y5QP72abo3fliOsrmOvF7qRMEYF6BkRD4aBjdvX54TaXMPiU12RYkbMGtimpkh9tB50kOPyWrN2TFi5ZaVDFCB6s/WdK+RvYQa8YrWm5hhq9+J1p5wC5UMJr82SeVzgP/yWD0KWbV4z2OXr3ZwJwWjcrEi2PXIdNZG2RD/kzeWVnhu1U128sNBwyc2m82RZ5PLv9++JXSbB3fbTsAM1W+DYR1wDAOYw9KoMigUh7FSFP1dZm7iWkGhZ0P8WAGxXpormnt6qnzQSQLApeoN1aD4By0xd4tZOJlbbvsj5UCcZ8QVf4gDvO9vxR4e/fERd4w5ywEhb4iGGDZA==</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,734 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="language" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">language</stringProp>
                          <stringProp name="Argument.value">en</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="airportCode" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">airportCode</stringProp>
                          <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="ref" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">ref</stringProp>
                          <stringProp name="Argument.value">web</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="org" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">org</stringProp>
                          <stringProp name="Argument.value">df</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="isCartPage" elementType="Header">
                          <stringProp name="Header.name">isCartPage</stringProp>
                          <stringProp name="Header.value">true</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,741 /dutyfree/api/offer/cart-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cart-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;AirportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;language&quot;:&quot;en&quot;,&quot;appType&quot;:&quot;web&quot;,&quot;LOB&quot;:&quot;dutyfree&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,742 /dutyfree/api/offer/cvp-offers" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/dutyfree/api/offer/cvp-offers</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;payload&quot;:{&quot;airportCode&quot;:&quot;${P_Airport_Name}&quot;,&quot;offerUniqueID&quot;:&quot;dutyfree-cvpoffers-1&quot;,&quot;apptype&quot;:&quot;web&quot;,&quot;offerLOB&quot;:&quot;dutyfree&quot;,&quot;type&quot;:&quot;type2&quot;}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,743 /api/dutyfreeservicev2/api/DutyFreeV2/similarProductRecommendation?ref=web&amp;org=df" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFreeV2/similarProductRecommendation?ref=web&amp;org=df</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&quot;language&quot;:&quot;en&quot;,&quot;skuCode&quot;:&quot;&quot;,&quot;storeType&quot;:&quot;${StoreType}&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;ageConsent&quot;:true,&quot;tobaccoRestricted&quot;:false,&quot;recommendedType&quot;:&quot;cart&quot;}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="isCartPage" elementType="Header">
                          <stringProp name="Header.name">isCartPage</stringProp>
                          <stringProp name="Header.value">true</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,749 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/Sipsmith/02E01078/1_02E01078" enabled="true">
                    <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/Sipsmith/02E01078/1_02E01078</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-site</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,748 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01028/The%20Botanist-Bottle-The%20Botanist-Bottle-TheBotanist_1000_eu_NoMandatories-02E01028" enabled="true">
                    <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01028/The%20Botanist-Bottle-The%20Botanist-Bottle-TheBotanist_1000_eu_NoMandatories-02E01028</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-site</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,744 /api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="traceId" elementType="Header">
                          <stringProp name="Header.name">traceId</stringProp>
                          <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="clientId" elementType="Header">
                          <stringProp name="Header.name">clientId</stringProp>
                          <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                          <stringProp name="Header.value">*</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="isCartPage" elementType="Header">
                          <stringProp name="Header.name">isCartPage</stringProp>
                          <stringProp name="Header.value">true</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">cors</stringProp>
                        </elementProp>
                        <elementProp name="annonymousId" elementType="Header">
                          <stringProp name="Header.name">annonymousId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="agentId" elementType="Header">
                          <stringProp name="Header.name">agentId</stringProp>
                          <stringProp name="Header.value">657ecfb8da6fe82ce5fcb91c</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                          <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                          <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                          <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                          <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        </elementProp>
                        <elementProp name="channelId" elementType="Header">
                          <stringProp name="Header.name">channelId</stringProp>
                          <stringProp name="Header.value">WEB</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">empty</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,752 /-/media/Project/SVG%20image/DBS-logo" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/DBS-logo</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1,751 /-/media/Project/SVG%20image/Axixbanklogo" enabled="true">
                    <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                    <stringProp name="HTTPSampler.port">443</stringProp>
                    <stringProp name="HTTPSampler.protocol">https</stringProp>
                    <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Axixbanklogo</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Sec-Fetch-Mode" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                          <stringProp name="Header.value">no-cors</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Site" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                          <stringProp name="Header.value">same-origin</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua</stringProp>
                          <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-mobile" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                          <stringProp name="Header.value">?0</stringProp>
                        </elementProp>
                        <elementProp name="sec-ch-ua-platform" elementType="Header">
                          <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                          <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Sec-Fetch-Dest" elementType="Header">
                          <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                          <stringProp name="Header.value">image</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T7_Search_And_Select_Product" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-272 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/search/Calvin%20Klein%20CK%20Be%20EDT%20100ml%20Spray.json" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/search/${Brandname}.json</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="airport" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airport</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="x-nextjs-data" elementType="Header">
                        <stringProp name="Header.name">x-nextjs-data</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-334 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/CalvinKlein/06A12103/1_3616302016716_CK%20Defy%20EDP%2050ml" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/CalvinKlein/06A12103/1_3616302016716_CK%20Defy%20EDP%2050ml</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-324 /-/media/Project/SVG-image/IDBI" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG-image/IDBI</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-287 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="subscription-key" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">subscription-key</stringProp>
                        <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="customer" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">customer</stringProp>
                        <stringProp name="Argument.value">EJwH9veCHZyLhVGqWuYo56FNpUKi0g8VjfcQcLTC0M4zeyDMqTR+PgZMOFh1RIGCbSGuNdFTtHM0nyHKjDxcbVGvy6xvqsYbVp99OKJNu4PL/gZ/yf+3vwrvw0QP9kO0u65XG2jtZl7UO6HDgkEFZ4k1fKpKc0pSk5xVlqesVUUPPI4m/26Sg3dkVW8X0M7wpePgurp3PRuoEWaGXUPzKmZSEEvIScQ+SNgwGOfiOHp8nBTS/asKfO72J4Dd98pw4jQnTx9oZplsZnbzvNY0XVJ5Q3BJIdengUXBVYRMUN+qoMtRh1W/IfUVyeQWnn6yrTYvZbpmtvP+khiegGo4wA==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-328 /-/media/Project/SVG%20image/Canara%20bank-1" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Canara%20bank-1</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-331 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="subscription-key" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">subscription-key</stringProp>
                        <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="customer" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">customer</stringProp>
                        <stringProp name="Argument.value">QofFD/ED2Tz55omBoQeHFXawRemuuLz1xd9SIYoMVza3Fdrw4lvW+iB/XoyTEpKWSlAPH39aqeQBRTna1oig/kp/ZKtqeN4TuMhTDfV+QJ6Oz/JXm/N5qNKJRwiSW732fcEB5i2rwdoMZmxPnzvPG40wRXRrRCjzGOcrzW+ZtnvSkJkmvG9Q/pyiOts4J3dbv1qIy9Jc5dKHwoJ1WVgRMrBEfq0p1zTrimp/CEibj+rqvbKXUcn8x4Yg1PbyWIneKEc/6R9HBNlUCELr9J809x/oMwx8FfzaxoaUjssH7vPm9FWyJ4w3bCaXwZybIWN4D6OvRhstoSXRlu5x3cU0/A==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-264 /api/dutyfreeservicev2/api/DutyFree/GetProductsforSearchText?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetProductsforSearchText?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;searchText&quot;:&quot;&quot;,&quot;filterType&quot;:&quot;popular&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;storeType&quot;:&quot;${storeType}&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-265 /api/dutyfreeservicev2/api/DutyFree/GetProductsforSearchText?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetProductsforSearchText?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;searchText&quot;:&quot;${Brandname}&quot;,&quot;filterType&quot;:&quot;&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;storeType&quot;:&quot;${StoreType}&quot;,&quot;restricted&quot;:&quot;false&quot;,&quot;tobaccoRestricted&quot;:&quot;false&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free?location=${StoreType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="productname" enabled="false">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">productname</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;productName&quot;:&quot;(.+?)&quot;,</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NF</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="productseohome" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">productseohome</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;productSEOName&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NF</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SKU_CODE" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">SKU_CODE</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;skuCode&quot;:&quot;(.+?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">NF</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-326 /-/media/Project/SVG%20image/Federal" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Federal</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-286 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-311 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/06C01231/06C01231.jpg" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/${SKU_CODE}/${SKU_CODE}.jpg</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="sc_lang" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">sc_lang</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-316 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">header</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">Web</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-284 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">header</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">Web</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-305 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/p/calvin-klein-ck-be-edt-100ml-spray/06C01231.json" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}.json</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="location" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">location</stringProp>
                        <stringProp name="Argument.value">${storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airport" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airport</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="x-nextjs-data" elementType="Header">
                        <stringProp name="Header.name">x-nextjs-data</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="src" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">src</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&quot;productImages&quot;:[&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot;]</stringProp>
                    <stringProp name="BoundaryExtractor.default"></stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number"></stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-322 /-/media/Project/SVG%20image/AU-Bank-3x" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/AU-Bank-3x</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-319 /api/authenticatorv2/api/MyBooking/getActiveCart/v2" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/authenticatorv2/api/MyBooking/getActiveCart/v2</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-283 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/06C01231/06C01231" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/${SKU_CODE}/${SKU_CODE}</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-315 /-/media/Project/SVG%20image/Axixbanklogo" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/Axixbanklogo</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-321 /-/media/Project/SVG%20image/DBS-logo" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/DBS-logo</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-330 /-/media/Project/SVG%20image/mobikwik" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/mobikwik</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-335 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/CalvinKlein/06C01144/06C01144_1" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/CalvinKlein/06C01144/06C01144_1</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-325 /-/media/Project/SVG%20image/HSBC" enabled="false">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/SVG%20image/HSBC</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${C_storeType}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-317 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="language" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">language</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-285 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="language" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">language</stringProp>
                        <stringProp name="Argument.value">en</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/search/${Brandname}</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-338 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/06A06004/06A06004" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/06A06004/06A06004</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-320 /api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCouponsV2?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="annonymousId" elementType="Header">
                        <stringProp name="Header.name">annonymousId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="agentId" elementType="Header">
                        <stringProp name="Header.name">agentId</stringProp>
                        <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-318 /api/loyaltyv2/point/earning?ref=web&amp;org=df" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/loyaltyv2/point/earning?ref=web&amp;org=df</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;businessSubType&quot;:&quot;DutyFree&quot;,&quot;nonLoyaltyPaymentAmount&quot;:3200,&quot;saleItems&quot;:[{&quot;productCode&quot;:&quot;${SKU_CODE}&quot;,&quot;quantity&quot;:1,&quot;unitPrice&quot;:3200,&quot;taxableUnitPrice&quot;:3200}]}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-339 /api/dutyfreeservicev2/api/DutyFree/GetPriceComparision" enabled="true">
                  <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetPriceComparision</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="skuCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">skuCode</stringProp>
                        <stringProp name="Argument.value">${SKU_CODE}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="airportCode" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">airportCode</stringProp>
                        <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="storeType" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">storeType</stringProp>
                        <stringProp name="Argument.value">${storeType}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ref" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ref</stringProp>
                        <stringProp name="Argument.value">web</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="org" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">org</stringProp>
                        <stringProp name="Argument.value">df</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="traceId" elementType="Header">
                        <stringProp name="Header.name">traceId</stringProp>
                        <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/p/${productseohome}/${SKU_CODE}?location=${storeType}</stringProp>
                      </elementProp>
                      <elementProp name="clientId" elementType="Header">
                        <stringProp name="Header.name">clientId</stringProp>
                        <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                        <stringProp name="Header.value">*</stringProp>
                      </elementProp>
                      <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                        <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                        <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                        <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                        <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                      </elementProp>
                      <elementProp name="channelId" elementType="Header">
                        <stringProp name="Header.name">channelId</stringProp>
                        <stringProp name="Header.value">WEB</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-340 /-/media/Project/Campaigns/Valentine-s-Day/Duty-Free/1st-CVP/Offer---Filled-3.svg" enabled="false">
                  <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.path">/-/media/Project/Campaigns/Valentine-s-Day/Duty-Free/1st-CVP/Offer---Filled-3.svg</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">no-cors</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-site</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">image</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T10_Continue_And_PickUp_Time" enabled="false">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-420 /api/dutyfreeservicev2/api/DutyFreeV2/ProductRecommendation?ref=web&amp;org=df" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFreeV2/ProductRecommendation?ref=web&amp;org=df</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;language&quot;:&quot;en&quot;,&quot;skuCode&quot;:&quot;&quot;,&quot;storeType&quot;:&quot;${C_storeType}&quot;,&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;,&quot;ageConsent&quot;:true,&quot;recommendedType&quot;:&quot;traveller&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="isCartPage" elementType="Header">
                    <stringProp name="Header.name">isCartPage</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-445 /api/commonservicev2/api/Whatsapp/CheckStatus" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/commonservicev2/api/Whatsapp/CheckStatus</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">df</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/review-details</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,OPTIONS</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-428 /-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/HugoBoss/06A03650/1_99240002984_Hugo%20Boss_Boss%20Bottled%20Night_EDT_100ml" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Beauty/Fragrances/HugoBoss/06A03650/1_99240002984_Hugo%20Boss_Boss%20Bottled%20Night_EDT_100ml</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-441 /api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/profileImagev2</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="subscription-key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">subscription-key</stringProp>
                    <stringProp name="Argument.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="customer" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">customer</stringProp>
                    <stringProp name="Argument.value">t15ugiXQ5XpSuxCc7U1wDJh84EzbjMtoyImUcUj3oyHdsB1AEvo/dbIAYyhaqBbtRYlm7ZYzVSrFhf64v9yHlT8NOufEjseH7tomSd2aJLt2Mk4KlTYASMJQ748XPOk/uhjCs5UCPam4yqln9ov+og4IqjiWzDFyZf1BZSLrJe3jdW0oH+JynztZZuoQJJ/3xaIGya+LdYke4XCZRF8CGlKhS4FkSKRPISo2UZ0fqJT/iRAzH7H+G0VsUHJkKF6CyPpLKnB9TNHWvmV/t5biJeKmfXdiPnZ28Cx0bpRVtxD0liuuV4g94EmWxRZgMePj4wCWHcaoist3JDKp7ZUe7A==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/review-details</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-409 /api/dutyfreeservicev2/api/DutyFree/validateCart/?ref=web&amp;org=df" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/validateCart/?ref=web&amp;org=df</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="isCartPage" elementType="Header">
                    <stringProp name="Header.name">isCartPage</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-434 /dutyfree/_next/data/qwYxE4AlbKoWZJ1TmS9nh/svpia-ahmedabad-airport/duty-free/review-details.json" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/dutyfree/_next/data/${BuildID}/${P_Airport_Name}/duty-free/review-details.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="airport" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">airport</stringProp>
                    <stringProp name="Argument.value">${P_Airport_Name}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="x-nextjs-data" elementType="Header">
                    <stringProp name="Header.name">x-nextjs-data</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-413 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="language" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">language</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="airportCode" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">airportCode</stringProp>
                    <stringProp name="Argument.value">${P_Airport_Code}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">df</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="isCartPage" elementType="Header">
                    <stringProp name="Header.name">isCartPage</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-427 /-/media/Foundation/Adani/Dutyfree/ProductImages/Confectionery/Chocolates/Butlers/05A06024/1_A7683%20100g%20Mixed%20Berry%20Bar" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Confectionery/Chocolates/Butlers/05A06024/1_A7683%20100g%20Mixed%20Berry%20Bar</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-425 /-/media/Foundation/Adani/Dutyfree/ProductImages/Confectionery/Chocolates/Butlers/05A06022/1_A7680%20100g%20Milk%20Chocolate%20Bar" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Confectionery/Chocolates/Butlers/05A06022/1_A7680%20100g%20Milk%20Chocolate%20Bar</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-429 /-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01003/02E01003%20BOMBAY%20SAPPHIRE%20100%20CL" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Foundation/Adani/Dutyfree/ProductImages/Liquor/Gin/02E01003/02E01003%20BOMBAY%20SAPPHIRE%20100%20CL</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-447 /api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">df</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/review-details</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="isCartPage" elementType="Header">
                    <stringProp name="Header.name">isCartPage</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-412 /api/dutyfreeservicev2/api/DutyFree/ValidatePreOrderDiscountV4?ref=web&amp;org=df" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/ValidatePreOrderDiscountV4?ref=web&amp;org=df</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;pickupTime&quot;:&quot;${PickupTime}&quot;,&quot;pickupDate&quot;:&quot;${pickupDate}&quot;,&quot;isPickupNow&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/checkout</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="isCartPage" elementType="Header">
                    <stringProp name="Header.name">isCartPage</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="T11_Enter_Details_And_Pay" enabled="false">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-522 /-/media/Project/Adani/Payment_icons/Assets/UPI-Bank--Logos/easy-EMI.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/UPI-Bank--Logos/easy-EMI.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-548 /-/media/Project/Adani/Payment_icons/Assets/Website/upi-upi.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/Website/upi-upi.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-488 /-/media/Project/Adani/Payment_icons/Assets/Website/netbanking.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/Website/netbanking.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-545 /-/media/Project/Adani/Payment_icons/Assets/Website/upi-freecharge.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/Website/upi-freecharge.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-492 /-/media/Project/Adani/Payment_icons/Assets/Website/credit-debit-card.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/Website/credit-debit-card.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-482 /api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/GetCartDetailsV6</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="language" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">language</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">pmnt</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/payment?lob=dutyfree</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-546 /-/media/Project/Adani/Payment_icons/Assets/Website/upi-paytm.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/Website/upi-paytm.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-481 /api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/identityproviderv2/api/v2/AuthenticateApiv2/GetProfile</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">pmnt</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/payment?lob=dutyfree</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-483 /api/loyaltyv2/point" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/loyaltyv2/point</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="balanceTypes" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">balanceTypes</stringProp>
                    <stringProp name="Argument.value">available</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">web</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="org" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">org</stringProp>
                    <stringProp name="Argument.value">cmn</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/payment?lob=dutyfree</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">80cdaebe3e19426586545aa31628b0a2</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-462 /api/dutyfreeservicev2/api/DutyFree/validateCart/?ref=web&amp;org=df" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/validateCart/?ref=web&amp;org=df</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;airportCode&quot;:&quot;${P_Airport_Code}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/review-details</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="isCartPage" elementType="Header">
                    <stringProp name="Header.name">isCartPage</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-480 /manifest.json" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/manifest.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/payment?lob=dutyfree</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">manifest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-547 /-/media/Project/Adani/Payment_icons/Assets/App/BHIM.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/App/BHIM.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-525 /-/media/Project/Adani/Payment_icons/Assets/App/safe-secure.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/App/safe-secure.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-498 /api/loyaltyv2/point/earning?ref=web&amp;org=pmnt" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/loyaltyv2/point/earning?ref=web&amp;org=pmnt</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;businessSubType&quot;:&quot;DutyFree&quot;,&quot;nonLoyaltyPaymentAmount&quot;:3200,&quot;saleItems&quot;:[{&quot;productCode&quot;:&quot;${SKU_CODE}&quot;,&quot;quantity&quot;:1,&quot;unitPrice&quot;:3200}],&quot;rewardPromoPoints&quot;:0,&quot;grossAmount&quot;:3200,&quot;taxableAmount&quot;:4000,&quot;promoCode&quot;:&quot;&quot;,&quot;additionalFilters&quot;:{&quot;isInternational&quot;:false},&quot;subOrderType&quot;:null}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/payment?lob=dutyfree</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-553 /404" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/404</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-489 /api/paymentv2/emi/plans?promoCode=&amp;paymentMethod=&amp;ref=web&amp;type=DutyFree&amp;org=pmnt" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/paymentv2/emi/plans?promoCode=&amp;paymentMethod=&amp;ref=web&amp;type=DutyFree&amp;org=pmnt</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;merchant_id&quot;:&quot;adanigroup&quot;,&quot;order_amount&quot;:3200,&quot;mobile_number&quot;:&quot;2cb3ea0efe44976d4caf&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/payment?lob=dutyfree</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-543 /-/media/Project/Adani/Payment_icons/Assets/Website/upi-phonePe.svg" enabled="false">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/Website/upi-phonePe.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-494 /-/media/Project/Campaigns/Icici-co-brand/cobrand-payment/co-brand-payment.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Campaigns/Icici-co-brand/cobrand-payment/co-brand-payment.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-467 /api/dutyfreeservicev2/api/DutyFree/UpdatePassengerDetailsV6?ref=web&amp;org=df" enabled="true">
              <stringProp name="HTTPSampler.domain">www.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/api/dutyfreeservicev2/api/DutyFree/UpdatePassengerDetailsV6?ref=web&amp;org=df</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;flightNo&quot;:&quot;&quot;,&quot;pickupDate&quot;:&quot;${pickupDate}&quot;,&quot;pickupTime&quot;:&quot;${PickupTime}&quot;,&quot;mobile&quot;:&quot;${MobileNo}&quot;,&quot;emailId&quot;:&quot;${EmailID}&quot;,&quot;countryCode&quot;:&quot;&quot;,&quot;countryDialCode&quot;:&quot;+91&quot;,&quot;isAssistance&quot;:false,&quot;assistanceCode&quot;:&quot;&quot;,&quot;countryISOCode&quot;:&quot;IND&quot;,&quot;passengers&quot;:[{&quot;sequenceNumber&quot;:1,&quot;customerName&quot;:&quot;${customerName}&quot;,&quot;passportNumber&quot;:&quot;${passportNumber}&quot;,&quot;passportExpiry&quot;:&quot;&quot;,&quot;customerDOB&quot;:&quot;${customerDOB}&quot;,&quot;countryName&quot;:&quot;&quot;,&quot;isPrimaryPassenger&quot;:true}],&quot;skuAssistances&quot;:[{&quot;skuCode&quot;:&quot;${SKU_CODE}&quot;,&quot;assistanceCode&quot;:null}],&quot;whatsappOptIn&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="traceId" elementType="Header">
                    <stringProp name="Header.name">traceId</stringProp>
                    <stringProp name="Header.value">ADL_WEB_APP</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/${P_Airport_Name}/duty-free/review-details</stringProp>
                  </elementProp>
                  <elementProp name="clientId" elementType="Header">
                    <stringProp name="Header.name">clientId</stringProp>
                    <stringProp name="Header.value">f3d35cce-de69-45bf-958c-4a8796f8ed37</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Headers</stringProp>
                    <stringProp name="Header.value">*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="isCartPage" elementType="Header">
                    <stringProp name="Header.name">isCartPage</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="annonymousId" elementType="Header">
                    <stringProp name="Header.name">annonymousId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="agentId" elementType="Header">
                    <stringProp name="Header.name">agentId</stringProp>
                    <stringProp name="Header.value">67ab18adbe0869ac805337d6</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Allow-Methods" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Allow-Methods</stringProp>
                    <stringProp name="Header.value">GET,POST,PATCH</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Ocp-Apim-Subscription-Key" elementType="Header">
                    <stringProp name="Header.name">Ocp-Apim-Subscription-Key</stringProp>
                    <stringProp name="Header.value">49bdcae7496745e0ba8259fb1c104186</stringProp>
                  </elementProp>
                  <elementProp name="channelId" elementType="Header">
                    <stringProp name="Header.name">channelId</stringProp>
                    <stringProp name="Header.value">WEB</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjEifQ.eyJhdWQiOlsiZjNkMzVjY2UtZGU2OS00NWJmLTk1OGMtNGE4Nzk2ZjhlZDM3IiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NzEzNyJdLCJpc3MiOiJodHRwczovL3d3dy5hZGFuaW9uZS5jb20iLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIl0sImlhdCI6MTczODc0NTMyMi4wLCJleHAiOjE3NDI2MzMzMjIuMCwic3ViIjoiNjU3ZWNmYjhkYTZmZTgyY2U1ZmNiOTFjIiwic291cmNlIjoiN2VjMzQ3YjAtMWQyOC00OWJmLTg4ZmEtMTBlN2U1MmVhNzlkIiwiaXNjb2JyYW5kdXNlciI6ZmFsc2V9.qY5xgvVIPZAqEA26S7BtzQJsVjH-oWcpYtMQVFFs_qkj24BqofAdGs9wn6DMJJ35IL_j84jz-x_I_nod1lmNDy9Dxiet1adL5_J2uINPl9WitcpGBr3y3BDzCQn2WQDKhTpvaxq9lpQyJB2c7eyUZATfmJ6oUDlmh_nAGdc-gL6dARV937TNKtL7nS1AOfn3qjsTGb9GiSxDNW6u5mGXKyeIVA9G6fX-aNy22y8DOZFFsX3a47G-DB9rtB3N0Bkj8XY408MgOdFzwVncL9IaB4xaSjhi6oW_b9XyECMzhpVkKqmL7JxTDg_yRiEjlBYGGsa1kAzcMe0sZV53TB2k3A</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-491 /-/media/Project/Adani/Payment_icons/Assets/Website/wallet.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/Website/wallet.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-544 /-/media/Project/Adani/Payment_icons/Assets/App/googlepay.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/App/googlepay.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-493 /-/media/Project/Adani/Payment_icons/Assets/Website/upi.svg" enabled="false">
              <stringProp name="HTTPSampler.domain">sa.adanione.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/-/media/Project/Adani/Payment_icons/Assets/Website/upi.svg</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://www.adanione.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not A(Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;132&quot;, &quot;Google Chrome&quot;;v=&quot;132&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="TestPlan.comments">[A-Za-z0-9]+ </stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list"/>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Script_And_Results\Script_And_Results\AdaniScriptResult.csv</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
